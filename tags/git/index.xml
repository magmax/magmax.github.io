<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>git - Etiqueta - El blog de MagMax</title>
        <link>https://magmax.org/tags/git/</link>
        <description>git - Etiqueta - El blog de MagMax</description>
        <generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Fri, 06 Mar 2015 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://magmax.org/tags/git/" rel="self" type="application/rss+xml" /><item>
    <title>Git: recuperación de changesets perdidos</title>
    <link>https://magmax.org/blog/git-recuperacion-de-changesets-perdidos/</link>
    <pubDate>Fri, 06 Mar 2015 00:00:00 &#43;0000</pubDate>
    <author>Miguel Ángel</author>
    <guid>https://magmax.org/blog/git-recuperacion-de-changesets-perdidos/</guid>
    <description><![CDATA[<p>Hoy me he enfrentado a un problema algo desagradable en <a href="https://git-scm.com/" target="_blank" rel="noopener noreffer ">Git</a>: Borré un <code>commit</code>. Básicamente había perdido un artículo de mi blog y algunos cambios más.</p>
<p>En condiciones normales, esto hubiera sido una pérdida terrible. Pero en este
caso <a href="https://git-scm.com/" target="_blank" rel="noopener noreffer ">Git</a> vino al rescate.</p>
<p>Pondré un ejemplo para perder changeset y después recuperarlos. Si tenéis prisa, saltad directamente a la sección &ldquo;cómo recuperar un commit&rdquo; :D</p>]]></description>
</item>
<item>
    <title>Trabajando con GitHub de forma efectiva</title>
    <link>https://magmax.org/blog/trabajando-con-github-de-forma-efectiva/</link>
    <pubDate>Fri, 20 Feb 2015 00:00:00 &#43;0000</pubDate>
    <author>Miguel Ángel</author>
    <guid>https://magmax.org/blog/trabajando-con-github-de-forma-efectiva/</guid>
    <description><![CDATA[<p>Ya me han preguntado varias veces cómo trabajar de forma efectiva con <a href="https://github.com" target="_blank" rel="noopener noreffer ">GitHub</a>, así que he decidido dedicarle un post.</p>
<p>Primero contaré algunas cosas básicas, para terminar explicando cómo trabajar con <em>forks</em>.</p>
<p>Recomiendo echar un ojo a mi post sobre el <a href="https://magmax.org/blog/usando-git/" rel="">Uso básico de Git</a> antes de embarcarse en esta aventura&hellip;</p>]]></description>
</item>
<item>
    <title>Combinando Git y Subversion</title>
    <link>https://magmax.org/blog/combinando-git-y-subversion/</link>
    <pubDate>Sun, 13 Jul 2014 10:05:55 &#43;0200</pubDate>
    <author>Miguel Ángel</author>
    <guid>https://magmax.org/blog/combinando-git-y-subversion/</guid>
    <description><![CDATA[<p>El otro día mi amigo Diego D. me propuso un problema. Él ya tenía una posible solución, pero quería contar también con mi opinión.</p>
<p>A menudo, cuando tenemos un problema no somos los únicos en enfrentarnos a él. Por eso he decidido publicar aquí mi solución, algo más elaborada de cómo se la conté a él, por supuesto.</p>
<p>Y éste es el problema: Nuestra empresa utiliza <a href="https://git-scm.com/" target="_blank" rel="noopener noreffer ">Git</a>, y una subcontrata utiliza <a href="https://subversion.apache.org/" target="_blank" rel="noopener noreffer ">Subversion</a>. Cada vez que la subcontrata nos tiene que enviar código, lo hace a través del email (ésto no es tan raro, yo también lo he sufrido). Claro, eso supone perder el tiempo colocando los archivos en su sitio y <em>mergeando</em> a mano, con todos los problemas que esto supone.</p>
<p>Veamos mi solución. Si alguien tiene otra mejor, por favor, que lo diga.</p>]]></description>
</item>
<item>
    <title>Usando Git(3): Internals</title>
    <link>https://magmax.org/blog/usando-git3/</link>
    <pubDate>Tue, 26 Nov 2013 00:00:00 &#43;0000</pubDate>
    <author>Miguel Ángel</author>
    <guid>https://magmax.org/blog/usando-git3/</guid>
    <description><![CDATA[<p>Anteriormente vimos lo más básico de <a href="https://git-scm.com/" target="_blank" rel="noopener noreffer ">Git</a>, en dos tutoriales separados: <a href="https://magmax.org/blog/usando-git/" rel="">lo más básico de git</a> y <a href="https://magmax.org/blog/usando-git/" rel="">cómo trabajar con varias working copies</a>.</p>
<p>En esta ocasión me gustaría compartir cómo funciona Git desde dentro. Y muchas veces, la mejor manera de saber cómo funciona algo es construirlo. Por esa razón vamos a diseñar nuestro propio <a href="https://git-scm.com/" target="_blank" rel="noopener noreffer ">Git</a>.</p>
<p>Veremos que no es tan complejo como pueda parecer, y conocer cómo funciona nos permitirá saber qué podemos hacer. Siempre es interesante saber <a href="https://magmax.org/blog/como-funcionan-las-cosas/" rel="">cómo funcionan las cosas</a>.</p>
<p>Y demostraré que <a href="https://git-scm.com/" target="_blank" rel="noopener noreffer ">Git</a> no tiene ramas.</p>]]></description>
</item>
<item>
    <title>Usando Git(2): varios working copies</title>
    <link>https://magmax.org/blog/usando-git2/</link>
    <pubDate>Tue, 22 Oct 2013 00:00:00 &#43;0000</pubDate>
    <author>Miguel Ángel</author>
    <guid>https://magmax.org/blog/usando-git2/</guid>
    <description><![CDATA[<p>El el tutorial anterior, <a href="https://magmax.org/blog/usando-git/" rel="">Usando Git(1)</a>, vimos cómo se inicia un proyecto en Git. En esta ocasión continuaremos con dicho proyecto, haciéndolo crecer hacia nuevos retos.</p>
<p>En esta ocasión dispondremos de varios <strong>working copies</strong> de la aplicación, lo que provocará que necesitemos más órdenes <a href="https://git-scm.com/" title="Official Git page" target="_blank" rel="noopener noreffer ">Git</a>. Algunas de ellas van siendo algo avanzadas.</p>
<p>Trataré de introducirlas en un orden lógico, a medida que podemos ir necesitándolas.</p>]]></description>
</item>
<item>
    <title>Usando Git(1)</title>
    <link>https://magmax.org/blog/usando-git/</link>
    <pubDate>Fri, 18 Oct 2013 00:00:00 &#43;0000</pubDate>
    <author>Miguel Ángel</author>
    <guid>https://magmax.org/blog/usando-git/</guid>
    <description><![CDATA[<p>Es habitual encontrar manuales de <a href="https://git-scm.com/" title="Official Git page" target="_blank" rel="noopener noreffer ">Git</a> en los que se describe la estructura interna de los <em>changesets</em>, los ficheros y otras tecnicidades similares. Sin embargo, el otro día nos reunimos en <a href="https://sites.google.com/site/agileciudadreal/home" title="Agile Ciudad Real" target="_blank" rel="noopener noreffer ">Agile-cr</a> y sin quererlo me di cuenta de lo sencillo que resulta explicarlo sin hablar de nada de eso.</p>
<p>Así que voy a intentarlo :D</p>
<p>A pesar de haber escrito ya <a href="https://magmax.org/blog/git/" rel="">otro artículo sobre Git</a>, creo que esta vez voy ha contarlo desde un punto de vista muy diferente: uno completamente práctico.</p>]]></description>
</item>
<item>
    <title>Hg vs Git</title>
    <link>https://magmax.org/blog/comparativa-mercurial-git/</link>
    <pubDate>Mon, 27 May 2013 00:00:00 &#43;0000</pubDate>
    <author>Miguel Ángel</author>
    <guid>https://magmax.org/blog/comparativa-mercurial-git/</guid>
    <description><![CDATA[<p>Vamos con tópicos: Mercurial vs Git.</p>
<p>Voy a intentar desmitificar o corroborar rumores, de manera unívoca y que cualquiera pueda reproducir.</p>
<p>Este artículo y los siguientes admiten colaboraciones :D</p>]]></description>
</item>
<item>
    <title>Guardar la configuración de tu máquina</title>
    <link>https://magmax.org/blog/home-en-git/</link>
    <pubDate>Sat, 01 Dec 2012 00:00:00 &#43;0000</pubDate>
    <author>Miguel Ángel</author>
    <guid>https://magmax.org/blog/home-en-git/</guid>
    <description><![CDATA[<p>Antes, cuando cambiaba mi PC, siempre me encontraba con el mismo problema: tener que reconfigurar todas mis aplicaciones. Gracias a GNU/Linux, descubrí que era más sencillo mantener mi <em>home</em> en otra partición, de manera que podía conservar esta configuración.</p>
<p>Ahora, por suerte o por desgracia, no trabajo en una única máquina: tengo un PC y dos portátiles; en el curro tengo mi portátil, una máquina virtual <em>hosted</em> donde suelo trabajar, una máquina virtual <em>unhosted</em> que puedo volver a crear de vez en cuando y&hellip; bueno&hellip; otras 60 máquinas en las que puedo llegar a necesitar hacer algo.</p>
<p>Gestionar mi configuración individualmente es&hellip; un coñazo. Así que me planteé la opción de guardar esta configuración en un repositorio, como <a href="https://git-scm.com/" target="_blank" rel="noopener noreffer ">Git</a> (ahora entendéis <a href="https://magmax.org/blog/git/" rel="">mi post anterior</a> :D). Realmente no me entusiasmaba la idea, pero resulta que mi colega Daniel Fanjul me dijo que él ya lo hacía así.</p>
<p>Vamos a ver cómo podemos gestionarlo de manera sencilla.</p>]]></description>
</item>
<item>
    <title>Git</title>
    <link>https://magmax.org/blog/git/</link>
    <pubDate>Thu, 29 Nov 2012 00:00:00 &#43;0000</pubDate>
    <author>Miguel Ángel</author>
    <guid>https://magmax.org/blog/git/</guid>
    <description><![CDATA[<p>Tenía que ocurrir más tarde o más temprano. Y es que tenía que hablar de GIT. Es lo que tiene ser influenciado por Daniel Fanjul XD</p>
<p>Git es un sistema de control de versiones. Bueno, en realidad es algo más que eso. Es un sistema de ficheros sobre el que se ha construido un sistema de control de versiones.</p>
<p>No soy un experto, pero creo que a lo básico llego. Y, la verdad, me hacía falta este artículo antes de escribir el siguiente XD</p>]]></description>
</item>
</channel>
</rss>
