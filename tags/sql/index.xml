<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sql on El blog de MagMax</title>
    <link>https://magmax.org/tags/sql/</link>
    <description>Recent content in sql on El blog de MagMax</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 19 Jan 2013 00:00:00 +0000</lastBuildDate><atom:link href="https://magmax.org/tags/sql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Retrospectiva OpenSpace Persistencia</title>
      <link>https://magmax.org/blog/retrospective-openspace-persistence/</link>
      <pubDate>Sat, 19 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/blog/retrospective-openspace-persistence/</guid>
      <description>
        
          &lt;p&gt;Como después de cada evento al que asisto, aquí está la retrospectiva. En este caso consiste en un OpenSpace dedicado a la Persistencia y, como está de moda, a hablar de &lt;a href=&#34;https://es.wikipedia.org/wiki/NoSQL&#34;&gt;NoSQL&lt;/a&gt; a muerte.&lt;/p&gt;
&lt;p&gt;Llegué sin tener ni idea y me voy con un montón de conceptos que tengo que revisar en casa. Es probable que haya mezclado cosas o que otras las explique fatal. Tomé mogollón de notas y es gracias a éstas que voy a escribir este artículo, pero no creo que sirvan para aprender nada, sino como guía de aquéllo que hay que aprender.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/poetry.jpg&#34;/&gt; 
&lt;/figure&gt;

&lt;h1 id=&#34;llegada&#34;&gt;Llegada&lt;/h1&gt;
&lt;p&gt;El OpenSpace tuvo lugar en las oficinas de &lt;a href=&#34;https://corporate.tuenti.com/es/corporate&#34;&gt;Tuenti&lt;/a&gt; que tan bien me conozco :D. Me sorprendió la cantidad de gente conocida que encontré allí: aproximadamente una cuarta parte de los asistentes.&lt;/p&gt;
&lt;p&gt;El hecho de dividirnos en salas fue algo casi anecdótico, ya que los mismos términos surgían una y otra vez. Además, en más de una ocasión terminó habiendo una única sala. Cuando comenzaba la siguiente charla podía verse como una continuación de lo que se estaba hablando antes. Fue un acierto poner (y asistir, por mi parte) la charla de &amp;ldquo;&lt;strong&gt;NoSQL (luz, gracias)&lt;/strong&gt;&amp;rdquo; la primera de todas.&lt;/p&gt;
&lt;h1 id=&#34;las-charlas&#34;&gt;Las charlas&lt;/h1&gt;
&lt;h2 id=&#34;nosql-luz-gracias&#34;&gt;NoSQL (luz, gracias)&lt;/h2&gt;
&lt;p&gt;Presentada por &lt;a href=&#34;https://twitter.com/eamod&#34;&gt;Enrique Amodeo&lt;/a&gt;. Siempre es genial asistir a las charlas con Enrique, porque siempre se aprende mucho.&lt;/p&gt;
&lt;p&gt;Cuando un sistema no da suficiente chicha, solo hay dos maneras de solucionar el problema: la primera es cambiar la máquina por una más gorda. La segunda, añadir más máquinas. Esta segunda opción añade tolerancia a fallos.&lt;/p&gt;
&lt;p&gt;Si lo que se está intentando es tener un sistema escalable, no es posible que sea consistente. Por eso está &lt;a href=&#34;https://en.wikipedia.org/wiki/CAP_theorem&#34;&gt;el teorema CAP&lt;/a&gt; (Consistency, Availability, Partition tolerance), de las que sólo se pueden elegir dos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CA (Consistente y disponible)&lt;/strong&gt;: 1 nodo y todo en memoria.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CP (Consistente y escalable)&lt;/strong&gt;: N nodos y se solicita la información siempre a todos, devolviendo lo que diga la mayoría (N+1)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AP (Disponible y escalable)&lt;/strong&gt;: NoSQL.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Parece que &lt;a href=&#34;https://cassandra.apache.org/&#34;&gt;Cassandra&lt;/a&gt; y los últimos &lt;a href=&#34;https://www.mongodb.org/&#34;&gt;MongoDB&lt;/a&gt; soportan la elección de esto mediante un parámetro (configurable por cada &lt;em&gt;request&lt;/em&gt;; en Cassandra se puede distinguir entre las lecturas y las escrituras). Si este parámetro vale 1, será CA; si vale &amp;ldquo;majority&amp;rdquo;, será CP; y si vale cualquier número menor, será AP (bueno, más o menos era algo así).&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/pasku1&#34;&gt;Guillermo&lt;/a&gt; recomendó un &lt;a href=&#34;https://www.allthingsdistributed.com/2012/01/amazon-dynamodb.html&#34;&gt;paper de Amazon sobre DynamoDB&lt;/a&gt; que tengo que leerme.&lt;/p&gt;
&lt;p&gt;Alfredo citó una frase que había oído pero no recordaba dónde: &amp;ldquo;SQL devuelve un hecho; NoSQL, una opinión&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;La elección del tipo de BD depende de los requisitos que se tengan. De acuerdo con la agilidad, la BD es lo último que debe elegirse, ya que es un &lt;em&gt;plugin&lt;/em&gt; de la aplicación que puede reemplazarse. Debe elegirse en &lt;strong&gt;el último momento responsable&lt;/strong&gt; (&lt;a href=&#34;https://es.wikipedia.org/wiki/Lean_manufacturing&#34;&gt;Lean&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Por aquí también salieron &lt;em&gt;palabros&lt;/em&gt; como &amp;ldquo;Agregaciones&amp;rdquo;, &amp;ldquo;DDD&amp;rdquo; y &amp;ldquo;less&amp;rdquo; o &amp;ldquo;schema-less&amp;rdquo;. También aparecieron los tests como una red de seguridad.&lt;/p&gt;
&lt;p&gt;Hubo una intensa discusión sobre si hay o no esquema, y parece que la conclusión fue que siempre hay un esquema, solo que éste puede estar en los tests o en el script de la BD, pero siempre existe. Lo que es un error es duplicarlo. En el caso del &lt;a href=&#34;https://en.wikipedia.org/wiki/Active_record_pattern&#34;&gt;Active Record&lt;/a&gt;, mandará la BD sobre el resto de la aplicación.&lt;/p&gt;
&lt;p&gt;Libros que aparecieron: &amp;ldquo;&lt;a href=&#34;https://www.amazon.com/Lean-Architecture-Agile-Software-Development/dp/0470684208&#34;&gt;Lean architecture&lt;/a&gt;&amp;rdquo;, de James O. Coplien y &amp;ldquo;&lt;a href=&#34;https://www.amazon.com/NoSQL-Distilled-Emerging-Polyglot-Persistence/dp/0321826620&#34;&gt;NoSQL Distilled&lt;/a&gt;&amp;rdquo;, de Pradmod J. Sadalage y Martin Fowler.&lt;/p&gt;
&lt;h2 id=&#34;mongodb&#34;&gt;MongoDB&lt;/h2&gt;
&lt;p&gt;Parece que las BBDD pueden clasificarse en 4 tipos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Clave-valor&lt;/li&gt;
&lt;li&gt;documentales&lt;/li&gt;
&lt;li&gt;grafos&lt;/li&gt;
&lt;li&gt;Orientadas a columnas&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MongoDB pertenece al grupo de las documentales. Resulta muy sencilla de comprender y con Python resulta muy natural.&lt;/p&gt;
&lt;p&gt;Concepto de &lt;em&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Shard_(database_architecture)&#34;&gt;Sharding&lt;/a&gt;&lt;/em&gt;: compartir y distribuir la información de la BD entre los distintos nodos.&lt;/p&gt;
&lt;p&gt;De los presentes, nadie lo ha utilizado como &lt;em&gt;core&lt;/em&gt; de un programa.&lt;/p&gt;
&lt;p&gt;Al parecer, se puede establecer que una &lt;strong&gt;relación&lt;/strong&gt; implica una &lt;strong&gt;jerarquía&lt;/strong&gt;, mientras que una &lt;strong&gt;composición&lt;/strong&gt; implica una &lt;strong&gt;agregación&lt;/strong&gt; (redundancia de datos). También apareció el concepto de &lt;strong&gt;herencia&lt;/strong&gt; pero debo admitir que no entendí nada de esto. Por esta razón pensé que tal vez me había equivocado y debía haber ido a la otra charla.&lt;/p&gt;
&lt;p&gt;MongoDB permite documentos anidados, y&amp;hellip; bueno, como en toda BD, los índices elegidos son clave para el rendimiento. Un punto bueno es que se pueden tener índices sobre columnas que no tienen por qué tener todos los elementos. Estos índices están optimizados para lecturas.&lt;/p&gt;
&lt;p&gt;MongoDB parece funcionar muy bien cuando hay pocas escrituras y muchas lecturas. Para realizar las &lt;em&gt;queries&lt;/em&gt;, están trabajando en un pseudo-lenguaje de consulta que mapee a &lt;em&gt;map-reduce&lt;/em&gt;, pero es algo que todavía es un proyecto.&lt;/p&gt;
&lt;p&gt;Se pueden paralelizar las búsquedas utilizando varios nodos, pero en un mismo nodo son bloqueantes.&lt;/p&gt;
&lt;p&gt;Lo normal es utilizar los IDs que te ofrece por defecto, ya que puede afectar al &lt;em&gt;sharding&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Tiene un tipo especial para binarios, ya que el tamaño por defecto del &amp;ldquo;documento&amp;rdquo; está limitado (4Mb). Las fechas pueden ser un problemas porque hay que andar con conversiones que no se hacen automáticamente.&lt;/p&gt;
&lt;p&gt;El tema de los &lt;em&gt;backups&lt;/em&gt; incrementales está muy verde. Hay que parar el nodo para poder hacerlo.&lt;/p&gt;
&lt;h2 id=&#34;git-como-nosql--híbridos&#34;&gt;Git como NoSQL / Híbridos&lt;/h2&gt;
&lt;p&gt;En esta ocasión, &lt;a href=&#34;https://twitter.com/pasku1&#34;&gt;Guillermo&lt;/a&gt; nos estuvo hablando sobre una idea loca: utilizar &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt; como base de datos. En este caso sería una base de datos NoSQL de tipo documental.&lt;/p&gt;
&lt;p&gt;Lo de utilizar un sistema de control de versiones como BD no es una idea nueva: ya la había oído en alguna empresa anterior. Por eso decidí asistir.&lt;/p&gt;
&lt;p&gt;Al utilizar Git como persistencia, la primera característica que tienes es que es &lt;strong&gt;inmutable&lt;/strong&gt;. Es cierto que puedes cambiar la historia, pero no debe ser lo habitual, ya que pueden surgir muchos problemas.&lt;/p&gt;
&lt;p&gt;Al utilizar Git se tienen dos tipos de claves: por un lado, una referencia a la última versión de un &amp;ldquo;documento&amp;rdquo;, que es el &lt;em&gt;path&lt;/em&gt; (&lt;em&gt;tree&lt;/em&gt; en terminología Git) de la misma; por otro lado, una referencia única a un documento que permanecerá a través del tiempo, como es el &lt;em&gt;Sha1&lt;/em&gt; o identificador único del &lt;em&gt;blob&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;La sincronización entre distintos nodos resulta terriblemente sencilla: puede utilizarse un simple &lt;em&gt;pull&lt;/em&gt;. Esto también facilita la creación de un nuevo nodo y no importa si en un momento dado no hay sincronización entre dos de los nodos: se sincronizará en el siguiente &lt;em&gt;pull&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Las principales ventajas de un sistema así son:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Resolución de conflictos proporcionada por Git.&lt;/li&gt;
&lt;li&gt;Es transaccional. Y para operaciones complejas pueden utilizarse ramas.&lt;/li&gt;
&lt;li&gt;Hay versiones. Es implícito.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sin embargo también tiene algunas desventajas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;No hay queries.&lt;/li&gt;
&lt;li&gt;Concurrencia.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hay varias librerías que pueden utilizarse para crear un sistema como éste: &lt;a href=&#34;https://libgit2.github.com/&#34;&gt;libgit2&lt;/a&gt; y &lt;a href=&#34;https://github.com/mojombo/grit&#34;&gt;grit&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Como referencias, hay un hilo de correo sobre &lt;a href=&#34;https://git.661346.n2.nabble.com/Git-performance-results-on-a-large-repository-td7250867.html&#34;&gt;el uso de GIT en repositorios muy grandes&lt;/a&gt; (gracias, Guillermo).&lt;/p&gt;
&lt;p&gt;La otra parte de la charla, los híbridos, generó una conversación muy interesante: &lt;strong&gt;&lt;a href=&#34;https://memcached.org/&#34;&gt;memcached&lt;/a&gt; vs &lt;a href=&#34;https://redis.io/&#34;&gt;redis&lt;/a&gt;&lt;/strong&gt;. En concreto se planteaba el problema de guardar sesiones. Había gente que defendía que &lt;em&gt;Redis&lt;/em&gt; funciona mejor que &lt;em&gt;Memcached&lt;/em&gt; bajo determinadas características de concurrencia, y que tenía la ventaja añadida de la tolerancia a reinicios gracias a su persistencia. La oposición defendía que &lt;em&gt;Memcached&lt;/em&gt;, al guardarlo todo en memoria, debía ser más rápido siempre.&lt;/p&gt;
&lt;p&gt;Otro punto que se trató fue lo que se debe guardar en la sesión, con la conclusión de que no tiene por qué ser un &lt;em&gt;mapping&lt;/em&gt; directo de ninguna tabla, sino información útil que puede evitar accesos a la capa de datos.&lt;/p&gt;
&lt;h2 id=&#34;tuenti&#34;&gt;Tuenti&lt;/h2&gt;
&lt;p&gt;Y aprovechando que jugábamos en casa, se propuso un ejemplo de uso de bases de datos NoSQL: &lt;a href=&#34;https://www.tuenti.com&#34;&gt;Tuenti&lt;/a&gt;. En este caso, Luis estuvo contando cómo funcionaba Tuenti por dentro. Esta charla se comió el otro &lt;em&gt;track&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Luis dio una visión general del sistema, que puede resumirse en que utilizamos MySQL, pero con una capa de abstracción propia por encima que asemeja a un sistema NoSQL. El resto del tiempo se dedicó a responder preguntas.&lt;/p&gt;
&lt;p&gt;En una de estas preguntas, surgió el tema del &lt;a href=&#34;https://martinfowler.com/bliki/BlueGreenDeployment.html&#34;&gt;despliegue blue/green&lt;/a&gt;. Consiste en tener el sistema replicado y así poder cambiar a la nueva versión con un simple redireccionamiento, pudiendo volver atrás en segundos. Este sistema tiene el problema de que, salvo cuando estás desplegando, tienes la mitad de los recursos detenidos. Tuenti no utiliza este sistema, ya que significaría tener &amp;ldquo;más de mil&amp;rdquo; máquinas paradas (en palabras de Luis).&lt;/p&gt;
&lt;p&gt;Otra característica es que utiliza &lt;a href=&#34;https://corporate.tuenti.com/es/dev/blog/using-udp-in-memcached&#34;&gt;Memcached por UDP&lt;/a&gt;. Se cae de vez en cuando, pero no es un problema mientras no se caigan todos los memcached al mismo tiempo.&lt;/p&gt;
&lt;h2 id=&#34;no-sólo-de-nosql-vive-el-hombre&#34;&gt;No sólo de NoSQL vive el hombre&lt;/h2&gt;
&lt;p&gt;Y nos fuimos a comer.&lt;/p&gt;
&lt;p&gt;En mi mesa estábamos Guillermo, Kiko, Ismael (¿O era Israel?) y yo.&lt;/p&gt;
&lt;p&gt;Éramos un grupo curioso: uno decidió cambiar su visión de la vida al ir a un OpenSpace, dos asistían por primera vez a un evento así, uno padre de familia, uno en una multinacional, otro autónomo&amp;hellip; Y surgió la duda de &amp;ldquo;cómo se comienza a ir a un sitio así&amp;rdquo;, lo que me resultó curioso, porque ya habían comenzado XD&lt;/p&gt;
&lt;h2 id=&#34;active-record-y-otros-patrones&#34;&gt;Active Record y otros patrones&lt;/h2&gt;
&lt;p&gt;Básicamente, la charla consistió en un tira y afloja entre el uso de &lt;a href=&#34;https://en.wikipedia.org/wiki/Active_record_pattern&#34;&gt;Active Record&lt;/a&gt; o evitarlo. Todos parecían estar de acuerdo en que el uso de AR obliga a elegir la persistencia al principio. Esto permite soluciones muy rápidas, con muy buen TTM (&lt;em&gt;Time To Market&lt;/em&gt;), pero poco escalables.&lt;/p&gt;
&lt;p&gt;Otro tema es el de los tests unitarios aislados: es muy dificil realizarlos con AR, ya que es el propio &lt;em&gt;framework&lt;/em&gt; quien debe proporcionarte un sistema. De esta manera, no solo dependes del &lt;em&gt;framework&lt;/em&gt; para el código, sino también para las pruebas.&lt;/p&gt;
&lt;p&gt;Surgieron dos temas interesantes: Actualizar la versión del &lt;em&gt;framework&lt;/em&gt; puede ser muy doloroso si se ha utilizado AR, por lo que debe existir una buena razón para ello. Por otra parte, ¡Cobol utilizaba ya un sistema NoSQL!&lt;/p&gt;
&lt;p&gt;Como curiosidad, se trató de responder a la pregunta &amp;ldquo;&lt;em&gt;¿Qué es &lt;strong&gt;código legacy&lt;/strong&gt;?&lt;/em&gt;&amp;rdquo;. Me gustó una definición: &amp;ldquo;Aquél código que se puede romper si lo tocas&amp;rdquo;. Por definición, es lo mismo que decir &amp;ldquo;el código que no tiene tests&amp;rdquo;.&lt;/p&gt;
&lt;h2 id=&#34;entre-bastidores&#34;&gt;Entre bastidores&lt;/h2&gt;
&lt;p&gt;La siguiente charla me la salté, hablando con Juanma, Antonio y Guillermo. El tema fue &amp;ldquo;metodologías ágiles&amp;rdquo;, nada relacionado con persistencia. ¡Siempre es interesante charlar con gente así! El problema es que no cogí apuntes y no sabría concretar los puntos que hablamos, salvo buscar la definición de &lt;em&gt;Scrum Master&lt;/em&gt; y qué roles se realizan en un &lt;strong&gt;scrum&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&#34;geoposicionamento&#34;&gt;Geoposicionamento&lt;/h2&gt;
&lt;p&gt;El título original de la charla me resulta un poco extraño, así que lo dejo con este título. Total, también se comió al otro &lt;em&gt;track&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Por lo visto, MongoDB funciona estupendamente para guardar los datos de posicionamiento. Además, permite calcular una aproximación de distancias 2D teniendo en cuenta la curvatura de la tierra. Alguien propuso como otra opción &lt;a href=&#34;https://lucene.apache.org/solr/&#34;&gt;Solr&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Surgió la duda de si estos cálculos pertenecen a la capa de persistencia o a la de negocio, ya que cada una de éstas tiene sus ventajas.&lt;/p&gt;
&lt;p&gt;Para facilitar la búsqueda, hay que utilizar facetas, cuadrículas o capas, lo que permite búsquedas en un conjunto menor de datos.&lt;/p&gt;
&lt;p&gt;También hay que tener en cuenta que los cálculos son muy diferentes si se quiere encontrar el camino más cercano en tiempos, distancias, teniendo en cuenta la altitud (3D vs 2D), &amp;hellip;&lt;/p&gt;
&lt;p&gt;Un ejemplo de uso: &lt;a href=&#34;https://positren.nebulacodex.com&#34;&gt;positren&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Surgió un término curioso: HTMLDB, haciendo referencia a los datos extraidos de la red mediante &lt;em&gt;spiders&lt;/em&gt; (nada relacionado con ningún producto comercial).&lt;/p&gt;
&lt;h2 id=&#34;despedida-y-cierre&#34;&gt;Despedida y cierre&lt;/h2&gt;
&lt;p&gt;En este caso no hubo retrospectiva. Sinceramente, creo que fue un acierto, ya que no veo ninguna conclusión que pudiéramos sacar. Fueron charlas entre amigos, exposiciones de puntos de vista. Todos queríamos aprender y queríamos aprender de todo. No creo que hubiéramos sacado mucho de una retrospectiva cuando lo que nos llevamos es todo un día de conclusiones.&lt;/p&gt;
&lt;p&gt;De lo que sí se habló fue de hacer otras charlas. En concreto, os adelanto que &lt;a href=&#34;https://www.meetup.com/MADQA-Grupo-Meetup-de-QA-y-TESTING-de-SOFTWARE-en-Madrid/&#34;&gt;Madrid-qa&lt;/a&gt; y &lt;a href=&#34;https://sites.google.com/site/agilemadrid/&#34;&gt;Madrid-ágil&lt;/a&gt; quieren hacer una charla sobre &amp;ldquo;Calidad de Software&amp;rdquo; el día 16 de febrero. El formato será OpenSpace. Aún no han confirmado el lugar.&lt;/p&gt;
&lt;p&gt;Otra excusa para juntarnos son unas jornadas que están preparando en la UPM, que pretende dialogar sobre la profesión de informática y quieren juntar a profesores, alumnos y empresarios. Todo se irá hablando&amp;hellip;&lt;/p&gt;
&lt;p&gt;También se eligieron algunos temas para futuros OpenSpaces:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Legacy dojo&lt;/li&gt;
&lt;li&gt;Arqueología de software&lt;/li&gt;
&lt;li&gt;Frontend&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;mis-conclusiones&#34;&gt;Mis conclusiones&lt;/h1&gt;
&lt;p&gt;Mi conclusión más inmediata surgió al ver el panel: no tengo ni puta idea. Así que tengo que leer sobre el tema.&lt;/p&gt;
&lt;p&gt;Después de hablar con &lt;a href=&#34;https://twitter.com/pasku1&#34;&gt;@pasku1&lt;/a&gt;, tengo que leerme el libro &amp;ldquo;&lt;a href=&#34;https://www.amazon.com/NoSQL-Distilled-Emerging-Polyglot-Persistence/dp/0321826620&#34;&gt;NoSQL Distilled&lt;/a&gt;&amp;rdquo; tal que ya XD&lt;/p&gt;
&lt;p&gt;Por lo demás, un día genial entre amigos y profesionales. Ojalá nos fuera posible juntarnos más a menudo en estos términos.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Pruebas con Bases de Datos en memoria: DBUnit &#43; HSQLDB</title>
      <link>https://magmax.org/blog/hsqldb-dbunit/</link>
      <pubDate>Mon, 13 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/blog/hsqldb-dbunit/</guid>
      <description>
        
          &lt;p&gt;DBUnit es un sistema sencillo que nos permite cargar con datos nuestra base de datos con el fin de realizar tests con estos datos.&lt;/p&gt;
&lt;p&gt;La gran ventaja de DBUnit es poder utilizar un sistema sencillo para indicar los datos a insertar mediante un XML, así como poder exportar una BBDD existente.&lt;/p&gt;
&lt;p&gt;Sin embargo, DBUnit no permite la creación de la BBDD, lo que puede ser un problema al intentar usar una BBDD en memoria, como pueda ser HyperSQL o Derby.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/java.png&#34;
         alt=&#34;Java&#34;/&gt; 
&lt;/figure&gt;

&lt;h2 id=&#34;enunciado&#34;&gt;Enunciado&lt;/h2&gt;
&lt;p&gt;Como me gusta resolver los problemas concretos y no los abstractos, veamos cómo usar DBUnit con una base de datos en memoria. Para ello utilizaremos un pequeño gestor de libros con una única tabla, que contendrá el id, título y autor.&lt;/p&gt;
&lt;h2 id=&#34;datos&#34;&gt;Datos&lt;/h2&gt;
&lt;p&gt;Nuestros datos serán los siguientes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dataset&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;book&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;title=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Fundación&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;author=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Isaac Asimov&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;book&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;title=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Clean Code&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;author=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Robert C. Martin&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;book&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;3&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;title=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Diseño ágil con TDD&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;author=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Carlos Ble&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dataset&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Aquí ya estamos diseñando. Lo que le estamos diciendo a DBUnit es que vamos a tener una tabla &amp;ldquo;book&amp;rdquo; con 3 columnas, que son &amp;ldquo;id&amp;rdquo;, &amp;ldquo;title&amp;rdquo; y &amp;ldquo;author&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;El archivo anterior se situará en el paquete &amp;ldquo;tests&amp;rdquo;, de manera que se empaquetará en el JAR con nuestras pruebas.&lt;/p&gt;
&lt;h2 id=&#34;código&#34;&gt;Código&lt;/h2&gt;
&lt;p&gt;Veamos ahora cómo indicárselo a DBUnit:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;test1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; DBTestCase &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;            String driver &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;org.hsqldb.jdbcDriver&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;            String url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jdbc:hsqldb:mem:sample&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;            String user &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sa&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;            String pass &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;            System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setProperty&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;PropertiesBasedJdbcDatabaseTester&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;DBUNIT_DRIVER_CLASS&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; driver&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;            System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setProperty&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;PropertiesBasedJdbcDatabaseTester&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;DBUNIT_USERNAME&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; user&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;            System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setProperty&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;PropertiesBasedJdbcDatabaseTester&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;DBUNIT_PASSWORD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; pass&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;            Class&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;forName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;driver&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;            Connection con &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; DriverManager&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getConnection&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;url&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; user&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; pass&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;            st&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;execute&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;create table book (&amp;#34;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17&lt;/span&gt;                    &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id integer, &amp;#34;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18&lt;/span&gt;                    &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title varchar(50), &amp;#34;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19&lt;/span&gt;                    &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;author varchar(50)&amp;#34;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20&lt;/span&gt;                    &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21&lt;/span&gt;            con&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22&lt;/span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Exception e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23&lt;/span&gt;            e&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;printStackTrace&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24&lt;/span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Override&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; IDataSet &lt;span style=&#34;color:#a6e22e&#34;&gt;getDataSet&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;throws&lt;/span&gt; Exception &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29&lt;/span&gt;        InputStream file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getClass&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getResourceAsStream&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/tests/test1.xml&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30&lt;/span&gt;        IDataSet result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; FlatXmlDataSet&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;file&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; result&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;33&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;34&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Test&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;35&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;test1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;throws&lt;/span&gt; Exception &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;36&lt;/span&gt;        IDatabaseConnection conn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getConnection&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;37&lt;/span&gt;        assertEquals&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;3&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getRowCount&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;book&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;));&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;38&lt;/span&gt;        conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;39&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;desglosando-el-código&#34;&gt;Desglosando el código&lt;/h3&gt;
&lt;p&gt;Veamos ahora qué es lo que hemos hecho.&lt;/p&gt;
&lt;p&gt;Lo primero es indicar que nuestro código hereda de &lt;em&gt;DBTestCase&lt;/em&gt;. Eso nos obliga a implementar el método abstracto &lt;em&gt;getDataSet&lt;/em&gt;. Este método le indica a DBUnit los datos con los que rellenar la BBDD antes de cada test.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Override&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; IDataSet &lt;span style=&#34;color:#a6e22e&#34;&gt;getDataSet&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;throws&lt;/span&gt; Exception &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;    InputStream file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getClass&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getResourceAsStream&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/tests/test1.xml&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;    IDataSet result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; FlatXmlDataSet&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;file&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; result&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Para ello, cargamos el XML anterior como un &amp;ldquo;FlatXML&amp;rdquo;. Como se encuentra dentro de nuestro propio jar, utilizamos &lt;em&gt;getResourceAsStream&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Ahora es necesario inicializar la conexión a BBDD. Como vamos a utilizar todos los argumentos varias veces, los guardamos en variables:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;String driver &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;org.hsqldb.jdbcDriver&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;String url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jdbc:hsqldb:mem:sample&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;String user &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sa&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;String pass &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Es importante rellenar el usuario, ya que DBUnit lo requiere. Como véis,
utilizamos una base de datos en memoria de tipo &lt;a href=&#34;https://hsqldb.org/&#34;&gt;HyperSQL&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;Ahora inicializamos DBUnit. Para ello, establecemos variables de entorno:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setProperty&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;PropertiesBasedJdbcDatabaseTester&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;DBUNIT_DRIVER_CLASS&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; driver&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setProperty&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;PropertiesBasedJdbcDatabaseTester&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;DBUNIT_CONNECTION_URL&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; url&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setProperty&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;PropertiesBasedJdbcDatabaseTester&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;DBUNIT_USERNAME&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; user&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setProperty&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;PropertiesBasedJdbcDatabaseTester&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;DBUNIT_PASSWORD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; pass&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Con esto sería suficiente como para que DBUnit pueda ejecutarse sin problemas, pero la tabla &amp;ldquo;Book&amp;rdquo; no existe. Así que lo solucionamos con el acceso estándar a BBDD de Java:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;Class&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;forName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;driver&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;Connection con &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; DriverManager&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getConnection&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;url&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; user&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; pass&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;Statement st &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; con&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;createStatement&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;st&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;execute&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;create table book (&amp;#34;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5&lt;/span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id integer, &amp;#34;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6&lt;/span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title varchar(50), &amp;#34;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7&lt;/span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;author varchar(50)&amp;#34;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8&lt;/span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;9&lt;/span&gt;con&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Y ya está todo listo para nuestros tests.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Test&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;test1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;throws&lt;/span&gt; Exception &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;    IDatabaseConnection conn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getConnection&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;    assertEquals&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;3&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getRowCount&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;book&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;));&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5&lt;/span&gt;    conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;En ese caso, obtenemos la conexión (al heredar de &lt;em&gt;DBTestCase&lt;/em&gt; tenemos acceso al método &lt;em&gt;getConnection&lt;/em&gt;) y comparamos el número de filas en &amp;ldquo;book&amp;rdquo; con 3.&lt;/p&gt;
&lt;h2 id=&#34;volcado-de-bbdd&#34;&gt;Volcado de BBDD&lt;/h2&gt;
&lt;p&gt;Lo normal es crear la BBDD que deseamos probar y volcar los datos. Para ello podemos utilizar lo siguiente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Test&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;test_volcar_flatxml&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;throws&lt;/span&gt; Exception &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;    IDatabaseConnection conn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getConnection&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;    IDataSet dataset &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;createDataSet&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5&lt;/span&gt;    FlatXmlDataSet&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;write&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;dataset&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6&lt;/span&gt;    conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Además, existe otro formato para el XML utilizado, solo que puede resultar demasiado grande (aunque, técnicamente, más correcto):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Test&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;test_volcar_xml&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;throws&lt;/span&gt; Exception &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;    IDatabaseConnection conn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getConnection&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;    IDataSet dataset &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;createDataSet&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5&lt;/span&gt;    XmlDataSet&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;write&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;dataset&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6&lt;/span&gt;    conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Que generará algo como:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?xml version=&amp;#39;&amp;#39;1.0&amp;#39;&amp;#39; encoding=&amp;#39;&amp;#39;UTF-8&amp;#39;&amp;#39;?&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dataset&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;table&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;BOOK&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;column&amp;gt;&lt;/span&gt;ID&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/column&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;column&amp;gt;&lt;/span&gt;TITLE&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/column&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;column&amp;gt;&lt;/span&gt;AUTHOR&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/column&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;row&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;Fundación&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;![CDATA[Isaac Asimov]]&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/row&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;row&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;![CDATA[Clean Code]]&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;![CDATA[Robert C. Martin]]&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/row&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;row&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;3&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;![CDATA[Diseño Ágil con TDD]]&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;![CDATA[Carlos Ble]]&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/row&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dataset&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;comparando-tablas&#34;&gt;Comparando tablas&lt;/h2&gt;
&lt;p&gt;Todo lo anterior está muy bien, pero lo que de verdad nos interesa es comparar datos. El uso habitual es:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Se cargan unos datos,&lt;/li&gt;
&lt;li&gt;se realizan operaciones,&lt;/li&gt;
&lt;li&gt;se comprueba que los datos son correctos.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pues esto resulta una tarea sencilla cuando se utiliza dbunit:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Test&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;test_comparar_tablas&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;throws&lt;/span&gt; Exception &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;    IDatabaseConnection conn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getConnection&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;    InputStream file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getClass&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getResourceAsStream&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/tests/test2.xml&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;    IDataSet expected &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; FlatXmlDataSet&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;file&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;    ITable table &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;createQueryTable&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;books&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;select * from book where author != &amp;#39;&amp;#39;Isaac Asimov&amp;#39;&amp;#39;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;    Assertion&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;assertEquals&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;expected&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getTable&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;book&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;),&lt;/span&gt; table&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;    conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Como se ve, estamos cargamos un nuevo archivo de datos (&lt;em&gt;test2.xml&lt;/em&gt;), realizamos una consulta y comparamos los resultados.&lt;/p&gt;
&lt;p&gt;El archivo de datos cargado tendrá esta forma (en el paquete &amp;ldquo;tests&amp;rdquo;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;?&lt;/span&gt;xml version&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.0&amp;#34;&lt;/span&gt; encoding&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;?&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;dataset&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;book id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt; title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Clean Code&amp;#34;&lt;/span&gt; author&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Robert C. Martin&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;book id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;3&amp;#34;&lt;/span&gt; title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Diseño Ágil con TDD&amp;#34;&lt;/span&gt; author&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Carlos Ble&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/&lt;/span&gt;dataset&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;a-tener-en-cuenta&#34;&gt;A tener en cuenta&lt;/h2&gt;
&lt;p&gt;Hay varios puntos a tener en cuenta:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Si nuestros tests no comienzan por &lt;em&gt;test&lt;/em&gt;, no se ejecutarán (formato de junit 3).&lt;/li&gt;
&lt;li&gt;Podemos utilizar una BBDD en memoria para probar datos para no modificar la BBDD real. Además, resultará más rápido y cómodo.&lt;/li&gt;
&lt;li&gt;Cuanto más pequeños sean los archivos de pruebas, serán menos propensos a cambios y más rápidos de ejecutar&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;más-información&#34;&gt;Más información&lt;/h2&gt;
&lt;p&gt;Tenéis más información en la web de &lt;a href=&#34;https://www.dbunit.org/&#34;&gt;DBUnit&lt;/a&gt; , en la de &lt;a href=&#34;https://www.junit.org/&#34;&gt;JUnit&lt;/a&gt;  y en la de
&lt;a href=&#34;https://hsqldb.org/&#34;&gt;HyperSQL&lt;/a&gt; . También podría haberse hecho con &lt;a href=&#34;https://db.apache.org/derby/&#34;&gt;Derby&lt;/a&gt; , como &lt;a href=&#34;https://magmax.org/blog/apache-derby/&#34;&gt;ya comenté&lt;/a&gt;.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Apache Derby, tu base de datos relacional</title>
      <link>https://magmax.org/blog/apache-derby/</link>
      <pubDate>Sat, 23 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/blog/apache-derby/</guid>
      <description>
        
          &lt;p&gt;Realizando los ejercicios de un curso que estoy haciendo, me he visto obligado a usar una base de datos desde Java.&lt;/p&gt;
&lt;p&gt;Había oído hablar de &amp;ldquo;derby&amp;rdquo;, pero no tenía muy claro su uso ni ventajas. Aunque aún estoy en ello, creo que puedo ver claramente estas ventajas, así que voy a contar cómo usarla.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/java.png&#34;
         alt=&#34;Java&#34;/&gt; 
&lt;/figure&gt;

&lt;h1 id=&#34;ventajas&#34;&gt;Ventajas&lt;/h1&gt;
&lt;p&gt;Las grandes ventajas de Derby son:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Es una base de datos nativa en java&lt;/li&gt;
&lt;li&gt;El núcleo y el driver ocupan menos de 3Mb&lt;/li&gt;
&lt;li&gt;Aunque tiene modo cliente-servidor, se pude embeber en nuestra aplicación.&lt;/li&gt;
&lt;li&gt;Es libre (licencia Apache).&lt;/li&gt;
&lt;li&gt;Compatible con SQL estándar.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Y, contrariamente a todo lo que pueda parecer, no es una BBDD de juguete, sino todo lo contrario.&lt;/p&gt;
&lt;h1 id=&#34;derby-para-pruebas&#34;&gt;Derby para pruebas&lt;/h1&gt;
&lt;p&gt;Cuando estamos realizando pruebas, a menudo necesitamos una BBDD limpia. Derby tiene un modo &amp;ldquo;en memoria&amp;rdquo; que nos permite realizar las pruebas necesarias sin necesidad de tener una BBDD real.&lt;/p&gt;
&lt;p&gt;Para comenzar, basta seleccionar el driver:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;Class&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;forName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;org.apache.derby.jdbc.EmbeddedDriver&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ahora, obtenemos una conexión a una BBDD en memoria:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;conn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; DriverManager&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getConnection&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jdbc:derby:memory:derbyDB;create=true&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Y, finalmente, vamos a crearnos una tabla, que es la que vamos a probar:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;Statement s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;createStatement&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;s&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;execute&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;create table ejemplo(id int, codigo varchar(50)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Si estamos usando junit 4, lo podemos hacer muy sencillo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.sql.Connection&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.sql.DriverManager&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.sql.SQLException&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.sql.Statement&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; org.junit.After&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; org.junit.Before&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; org.junit.Test&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;MyTester&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; Connection conn&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;@BeforeClass&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;classSetUp&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17&lt;/span&gt;    Class&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;forName&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;org.apache.derby.jdbc.EmbeddedDriver&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;@Before&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setUp&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23&lt;/span&gt;    conn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; DriverManager&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getConnection&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jdbc:derby:memory:derbyDB;create=true&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24&lt;/span&gt;    Statement s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;createStatement&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25&lt;/span&gt;    s&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;execute&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;create table ejemplo(id int, codigo varchar(50)&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26&lt;/span&gt;    s&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;@After&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tearDown&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32&lt;/span&gt;    conn&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;33&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;34&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Y, con este pequeño esqueleto, comenzar a realizar las pruebas. Cada test tendrá una BBDD limpia en la que realizar sus consultas y/o modificaciones.&lt;/p&gt;
&lt;p&gt;Es más lento que probar una función que no accede a BBDD, pero más rápido que crearte una BBDD nueva cada vez.&lt;/p&gt;
&lt;h1 id=&#34;derby-en-un-entorno-de-producción&#34;&gt;Derby en un entorno de producción&lt;/h1&gt;
&lt;p&gt;Para utilizar Derby con un archivo, basta cambiar la forma de obtener la conexión:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;conn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; DriverManager&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getConnection&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jdbc:derby:/ruta/archivo;create=true&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Y para usarlo en modo cliente servidor, también:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;conn &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; DriverManager&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getConnection&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jdbc:derby://localhost:1527/MyDbTest;create=true&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;quiero-usar-esta-maravilla&#34;&gt;Quiero usar esta maravilla&lt;/h1&gt;
&lt;p&gt;Los que me conocen saben que me he vuelto un Maven-adicto, así que la manera más simple de comenzar a usarlo es añadir lo siguiente a nuestro pom.xml:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.derby&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;derby&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;10.7.1.1&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;referencias&#34;&gt;Referencias&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.apache.org/db-derby/InMemoryBackEndPrimer&#34;&gt;Derby en memoria&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://db.apache.org/derby/papers/DerbyTut/index.html&#34;&gt;Tutorial de Derby&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        
      </description>
    </item>
    
    <item>
      <title>Llenar un Select con datos Dinámicos</title>
      <link>https://magmax.org/blog/select-datos-dinamicos/</link>
      <pubDate>Mon, 18 Oct 2010 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/blog/select-datos-dinamicos/</guid>
      <description>
        
          &lt;p&gt;En una ocasión, &amp;lsquo;ignatius73&amp;rsquo;, uno de mis lectores, me envió este post, y no puedo dejar de publicárselo:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/php.png&#34;
         alt=&#34;PHP&#34;/&gt; 
&lt;/figure&gt;

&lt;p&gt;He aquí la historia, gracias al maestro Miguel Ángel, me esclareció en un tema que me tenía trabado. Soy programador PHP pero no soy muy experto en objetos PHP, por lo que me mareo fácilmente, así cuando debía rellenar un select en un formulario con datos que provenían de una base de datos en drupal, me encontraba con que no podía, mis conocimientos no bastaban, así que le solicité asistencia al maestro y aquí pego la solución:&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Hace tiempo que implementé una especie de &amp;ldquo;frigorífico virtual&amp;rdquo;. De ahí te saco el siguiente código (si lo quieres, lo publico entero en la web, ya que debería estar ahí desde hace siglos):&amp;rdquo;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;php&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;virtualcoin_putbackedit_form&lt;/span&gt; ( $data, $putbackid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; )
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;{
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;/* Lista de productos */&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;  $query &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SELECT id, name FROM {virtualcoin_products} p order by name&amp;#34;&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;  $queryResult &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;db_query&lt;/span&gt; ( $query, $putbackid );
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;  $products &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;array&lt;/span&gt; ();
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; ( $p &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;db_fetch_object&lt;/span&gt; ( $queryResult ) )
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;  {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;    $products[$p&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $p&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;  }
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;/* Datos del putback */&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;  $title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Editar una reposición&amp;#34;&lt;/span&gt;);
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;  $button &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Guardar cambios&amp;#34;&lt;/span&gt;);
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17&lt;/span&gt;  $query &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SELECT p.name, b.productid, b.prizeunit, b.quantity FROM {virtualcoin_products} p, {virtualcoin_putbacks} b WHERE b.id=%d and p.id = b.productid&amp;#34;&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18&lt;/span&gt;  $queryResult &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;db_query&lt;/span&gt; ( $query, $putbackid );
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19&lt;/span&gt;  $putback &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;db_fetch_object&lt;/span&gt; ( $queryResult );
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21&lt;/span&gt;  $name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $putback&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22&lt;/span&gt;  $prizeunit &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $putback&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;prizeunit&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23&lt;/span&gt;  $quantity &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $putback&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;quantity&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24&lt;/span&gt;  $productid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $putback&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;productid&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25&lt;/span&gt;  $form &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;array&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26&lt;/span&gt;  (
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;purchase&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;array&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28&lt;/span&gt;    (
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29&lt;/span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#type&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fieldset&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30&lt;/span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#title&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;( $title ),
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31&lt;/span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;putbackid&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;array&lt;/span&gt; ( &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#type&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hidden&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#value&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; $putbackid ),
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32&lt;/span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;product&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;array&lt;/span&gt; ( &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#type&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;select&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#title&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Producto&amp;#39;&lt;/span&gt; ,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#options&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; $products, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#default_value&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;  $productid ),
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;33&lt;/span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;prizeunit&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;array&lt;/span&gt; ( &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#type&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;textfield&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#title&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Precio por unidad&amp;#39;&lt;/span&gt;), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#default_value&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; $prizeunit),
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;34&lt;/span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;quantity&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;array&lt;/span&gt; ( &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#type&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;textfield&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#title&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Cantidad&amp;#39;&lt;/span&gt;), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#default_value&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; $quantity),
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;35&lt;/span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;submit&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;array&lt;/span&gt; ( &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#type&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;submit&amp;#39;&lt;/span&gt;,  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;#value&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; $button,  ),
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;36&lt;/span&gt;    ),
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;37&lt;/span&gt;  );
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;38&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;39&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; $form;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;40&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;41&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;43&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;* Implementation of hook_submit().
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;*/&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;45&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;virtualcoin_putbackedit_form_submit&lt;/span&gt; ( $form, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;$form_state )
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;46&lt;/span&gt;{
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;47&lt;/span&gt;  $putbackid  &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $form_state[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;values&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;putbackid&amp;#39;&lt;/span&gt;];
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;48&lt;/span&gt;  $productid  &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $form_state[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;values&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;product&amp;#39;&lt;/span&gt;];
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;49&lt;/span&gt;  $prizeunit  &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $form_state[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;values&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;prizeunit&amp;#39;&lt;/span&gt;];
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;50&lt;/span&gt;  $quantity   &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $form_state[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;values&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;quantity&amp;#39;&lt;/span&gt;];
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;51&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;global&lt;/span&gt; $user;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;52&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;53&lt;/span&gt;  $query     &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UPDATE {virtualcoin_putbacks} set productid=%d, prizeunit=%f, quantity=%d where id = %d &amp;#34;&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;54&lt;/span&gt;  $queryResult &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;db_query&lt;/span&gt; ( $query, $productid, $prizeunit, $quantity, $putbackid );
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;55&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;56&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ( $queryResult )
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;57&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;drupal_set_message&lt;/span&gt; ( &lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt; ( &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Se ha modificado el producto &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; $name ) );
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;58&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;59&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;form_set_error&lt;/span&gt; ( &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Error durante el guardado.&amp;#39;&lt;/span&gt;) );
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;60&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;61&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;62&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Fíjense qué fácil era!&lt;/p&gt;
&lt;p&gt;Y qué prolijo, caramba, si pudiera yo trabajar (laburar para este hemisferio) así&amp;hellip;&lt;/p&gt;
&lt;p&gt;Gracias Miguel Ángel, continúa así, con tus tutoriales que son fenomenales.&lt;/p&gt;
&lt;p&gt;Saludos.&lt;/p&gt;
&lt;p&gt;ignatius73&lt;/p&gt;
&lt;p&gt;Ps.: Y encima me tuvo que crear el usuario!&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>SQL: Elementos con un número indeterminado de columnas</title>
      <link>https://magmax.org/blog/sql-n-columnas/</link>
      <pubDate>Thu, 08 Jul 2010 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/blog/sql-n-columnas/</guid>
      <description>
        
          &lt;p&gt;En muchas ocasiones tenemos una tabla a la que queremos añadir un número indeterminado de atributosa modo de columnas. Sin embargo, esto plantea un problema, ya que el número de columnas puede variar de forma dinámica. Por ejemplo, tenemos una tabla &amp;ldquo;libro&amp;rdquo; que, en principio, tiene su título, su autor, etc, pero de pronto queremos añadirle un ISBN, o una keyword. ¿Cómo hacemos eso?&lt;/p&gt;
&lt;p&gt;En este artículo se explican las posibles soluciones a este problema.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/database.jpg&#34;
         alt=&#34;Databases&#34;/&gt; 
&lt;/figure&gt;

&lt;h2 id=&#34;abordando-el-problema&#34;&gt;Abordando el problema&lt;/h2&gt;
&lt;p&gt;La mayor dificultad del problema radica en que estamos tratando de hacer uso de elementos estáticos como dinámicos. En SQL, las columnas son estáticas, no deberían alterarse a menudo (si es nunca, mejor). Sin embargo las filas sí son dinámicas y van a cambiar constantemente. Así que la solución a nuestro problema es tan simple como transformar las columnas en filas.&lt;/p&gt;
&lt;p&gt;De esta manera, lo que antes teníamos como una única tabla, ahora se transformará en 3. Evidentemente, esto va a tener un coste en complejidad y es probable que haga nuestra base de datos más lenta, aunque es probable que no sea así, como veremos más adelante.&lt;/p&gt;
&lt;p&gt;Para este artículo, utilizaré como ejemplo un &amp;ldquo;nodo&amp;rdquo;, que contiene los campos &amp;ldquo;id&amp;rdquo; y &amp;ldquo;title&amp;rdquo;, además de un conjunto de atributos.&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/mysql/mysql_table_diagram1.png&#34;/&gt; 
&lt;/figure&gt;

&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/mysql/mysql_table_monolitic.png&#34;/&gt; 
&lt;/figure&gt;

&lt;p&gt;La técnica a utilizar consiste en dejar en la tabla principal sólo la información obligatoria o necesaria de nuestros elementos. En nuestro ejemplo, eso reduce la tabla &amp;ldquo;nodo&amp;rdquo; a dos columnas: &amp;ldquo;id&amp;rdquo; y &amp;ldquo;title&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Además, necesitaremos una tabla auxiliar con la definición de los atributos. Esta tabla contendrá 3 columnas: El &amp;ldquo;id&amp;rdquo; propio de la tabla, el &amp;ldquo;id&amp;rdquo; del nodo al que pertenece y el nombre del atributo; en este caso, si quisiéramos hacer una base de datos equivalente a la mostrada anteriormente, usaríamos 3 filas en esta tabla: &amp;ldquo;attribute1&amp;rdquo;, &amp;ldquo;attribute2&amp;rdquo; y &amp;ldquo;attribute3&amp;rdquo;. Le he añadido un campo &amp;ldquo;type&amp;rdquo; con el fin de complicarlo todo lo posible: algunos atributos tendrán distintos tipos. Por ejemplo: el &amp;ldquo;attribute1&amp;rdquo; va a ser un entero, &amp;ldquo;attribute2&amp;rdquo; una cadena.&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/mysql/mysql_only1table.png&#34;/&gt; 
&lt;/figure&gt;

&lt;p&gt;Una vez hemos definido estas dos tablas, requerimos de otra más con los valores de los atributos. Esta tabla, como veremos a continuación, va a ser la más difícil de gestionar, ya que existen distintas formas de abordarla. En principio nos vamos a quedar con los campos necesarios de la tabla: &amp;ldquo;id&amp;rdquo; para la clave primaria (aunque no sería esencialmente necesario, ya que puede obtenerse la clave primaria con los dos campos siguientes), el &amp;ldquo;id&amp;rdquo; del nodo al que pertenece y el &amp;ldquo;id&amp;rdquo; del atributo al que pertenece.&lt;/p&gt;
&lt;p&gt;Esta tabla de valores contendrá también el valor de los atributos. Si tenemos suerte y queremos que todos los nodos de la tabla tengan el mismo tipo, basta con añadir una columna más &amp;ldquo;value&amp;rdquo; de ese tipo a esta tabla de valores y dejar de leer aquí. Sin embargo, es muy probable que esto no sea así y necesitemos diferentes tipos para poder solucionar nuestro problema. Existen 3 maneras de abordar este problema: jerarquías de tablas, una única tabla de valores y polimorfismo.&lt;/p&gt;
&lt;h2 id=&#34;una-única-tabla-de-valores&#34;&gt;Una única tabla de valores&lt;/h2&gt;
&lt;p&gt;La manera más sencilla es crear una columna de cada tipo en nuestra tabla de valores. De esta manera, elegiremos una columna u otra dependiendo del valor de la columna &amp;ldquo;type&amp;rdquo; de la tabla de definición de atributos.&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/mysql/mysql_table_diagram2.png&#34;/&gt; 
&lt;/figure&gt;

&lt;p&gt;En el ejemplo, podremos crear dos columnas, una de enteros y otra de cadenas, de manera que el &amp;ldquo;attribute1&amp;rdquo; lea los enteros y el &amp;ldquo;attribute2&amp;rdquo;, las cadenas.&lt;/p&gt;
&lt;p&gt;Esta solución es bastante sencilla de llevar a cabo, no requiere tablas extra, y el espacio requerido por cada fila es constante. El problema es que es muy probable que se van a tener muchos campos nulos (a menudo más que campos con contenido) y que no podemos obligar a tener valor en alguno de ellos, salvo mediante código. Ésta puede ser las solución cuando sólo hay uno o dos tipos de valores y sabemos a ciencia cierta que nunca va a haber más. Por experiencia sé que cuando estamos seguros de que no puede haber más de 2 de algo, en seguida aparece un tercero, un cuarto, &amp;hellip; Por lo que no recomiendo el uso de esta técnica.&lt;/p&gt;
&lt;h2 id=&#34;polimorfismo&#34;&gt;Polimorfismo&lt;/h2&gt;
&lt;p&gt;Otra posible solución es utilizar un tipo de valor que pueda englobarlos a todos, como una cadena, por ejemplo. Se pueden utilizar distintas codificaciones para los distintos tipos, de manera que podamos &amp;ldquo;hacer un cast&amp;rdquo; a nuestro tipo original.&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/mysql/mysql_polimorfic.png&#34;/&gt; 
&lt;/figure&gt;

&lt;p&gt;En el ejemplo, crearíamos una única columna &amp;ldquo;value&amp;rdquo; de tipo cadena, y convertiríamos los enteros a cadena. Dependiendo del tipo de la tabla de definición de atributos, durante la recuperación de datos transformaremos el valor a entero o no.&lt;/p&gt;
&lt;p&gt;Esta técnica reduce considerablemente el espacio necesario para almacenar los datos, ya que sólo tenemos una columna que nunca va a ser nula, y cada fila ocupa un tamaño fijo. El problema es qué ocurre si necesitamos un tipo con un tamaño mucho más grande, como pueda ser un BLOB o, simplemente, cuando necesitamos una cadena de 4K mientras que el resto de atributos sólo va a llegar a unos pocos caracteres.&lt;/p&gt;
&lt;p&gt;Además, perdemos velocidad, ya que estaremos comparando con el más lento de los mecanismos, y perderemos características como los comparadores distintos del &amp;ldquo;igual&amp;rdquo; y el &amp;ldquo;distinto de&amp;rdquo;.&lt;/p&gt;
&lt;h2 id=&#34;jerarquía-de-tablas&#34;&gt;Jerarquía de tablas&lt;/h2&gt;
&lt;p&gt;Otra solución es crear una tabla por cada tipo, de manera que, gracias a lo que indique la columna &amp;ldquo;type&amp;rdquo; en la tabla de definición de atributos, sepamos a qué tabla tenemos que hacer referencia.&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/mysql/mysql_table_hierarchy.png&#34;/&gt; 
&lt;/figure&gt;

&lt;p&gt;Ésta es la solución más económica en cuanto a espacio, nos permite aprovechar las ventajas de cada tipo, pero tiene el inconveniente de que, a menudo, habrá que filtrar cada tipo de forma individual. La buena noticia es que buscaremos entre menos información, lo que lo hará más rápido. La gestión de este tipo de soluciones suele ser bastante más compleja que el resto.&lt;/p&gt;
&lt;p&gt;Esta solución puede ser la mejor de todas si tenemos muchos tipos cambiantes o prevemos que en el futuro va a aumentar el número de tipos.&lt;/p&gt;
&lt;h2 id=&#34;listas-de-valores&#34;&gt;Listas de valores&lt;/h2&gt;
&lt;p&gt;¿Qué ocurre cuando el valor de un atributo puede ser una lista de valores? Por ejemplo, si estamos almacenando libros, podría darse el caso de que haya varios autores.&lt;/p&gt;
&lt;p&gt;Entonces basta con añadir una columna más a la tabla de valores (a la principal), que indique el número de orden del valor (si queremos que siempre nos los muestren en el mismo orden claro), y el problema está solucionado.&lt;/p&gt;

        
      </description>
    </item>
    
  </channel>
</rss>
