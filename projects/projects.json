{"kolekti-server": {"bugtracker": "https://github.com/kolekti-project/kolekti-server/issues", "coverage_image": "https://coveralls.io/repos/kolekti-project/kolekti-server/badge.png", "coverage_link": "https://coveralls.io/r/kolekti-project/kolekti-server", "description": "Kolekti is a metric gatherer with lightweight agents.", "download": "https://pypi.python.org/pypi/kolekti-server#downloads", "download_image": "https://pypip.in/d/kolekti-server/badge.png", "featured": "", "filters": "", "github": "https://github.com/kolekti-project/kolekti-server", "hidden": "", "hyphenate": "", "language": "python", "license": "MIT", "link": "https://pypi.python.org/pypi/kolekti-server", "permalink": "/projects/kolekti-server/", "slug": "kolekti-server", "sort": "", "status": "1", "template": "", "tests_image": "https://travis-ci.org/kolekti-project/kolekti-server.png", "tests_link": "https://travis-ci.org/kolekti-project/kolekti-server", "text": "<div><p>Kolekti is a monitoring service which uses lightweight clients.</p>\n<p>The idea is to collect metrics reducing the Heisenberg's uncertainty principle.</p>\n<p>The server contains the scheduler and processes the outputs, reducing agents load. So, agents should just listen in a port and run whatever the server asks. Just it.</p>\n<p>It is <a class=\"reference external\" href=\"https://github.com/sensu/uchiwa\">Uchiwa</a> compatible.</p></div>", "title": "Kolekti Server", "type": "text", "updated": "2015-08-21 00:00:00 UTC", "version_image": "https://pypip.in/v/kolekti-server/badge.png"}, "project-colorize": {"bugtracker": "https://github.com/magmax/colorize/issues", "coverage_image": "https://coveralls.io/repos/magmax/colorize/badge.png", "coverage_link": "https://coveralls.io/r/magmax/colorize", "description": "Give some color to your (remote) TTY", "download": "https://pypi.python.org/pypi/colorize#downloads", "download_image": "https://pypip.in/d/colorize/badge.png", "featured": "", "filters": "", "github": "https://github.com/magmax/colorize", "hidden": "", "hyphenate": "", "language": "python", "license": "MIT", "link": "https://pypi.python.org/pypi/colorize", "permalink": "/projects/project-colorize/", "slug": "project-colorize", "sort": "", "status": "5", "template": "", "tests_image": "https://travis-ci.org/magmax/colorize.png", "tests_link": "https://travis-ci.org/magmax/colorize", "text": "<div><p>Colorize can run a command, colorizing the output or can use the stdin.</p>\n<p>It uses a simple regular expression system to add color to the output.</p></div>", "title": "Colorize", "type": "text", "updated": "2015-02-23 00:00:00 UTC", "version_image": "https://pypip.in/v/colorize/badge.png"}, "project-pdfcomparator": {"bugtracker": "https://github.com/magmax/pdfcomparator/issues", "coverage_image": "https://coveralls.io/repos/magmax/pdfcomparator/badge.png", "coverage_link": "https://coveralls.io/r/magmax/pdfcomparator", "description": "Compares two PDF files by appearance, for testing proposes", "download": "https://pypi.python.org/pypi/pdfcomparator#downloads", "download_image": "https://pypip.in/d/pdfcomparator/badge.png", "featured": "", "filters": "", "github": "https://github.com/magmax/pdfcomparator", "hidden": "", "hyphenate": "", "language": "python", "license": "GPL", "link": "https://pypi.python.org/pypi/pdfcomparator", "permalink": "/projects/project-pdfcomparator/", "slug": "project-pdfcomparator", "sort": "", "status": "6", "template": "", "tests_image": "https://travis-ci.org/magmax/pdfcomparator.png", "tests_link": "https://travis-ci.org/magmax/pdfcomparator", "text": "<div><p>Colorize can run a command, colorizing the output or can use the stdin.</p>\n<p>It uses a simple regular expression system to add color to the output.</p></div>", "title": "PDFComparator", "type": "text", "updated": "2015-02-23 00:00:00 UTC", "version_image": "https://pypip.in/v/pdfcomparator/badge.png"}, "project-pybrowsertest": {"bugtracker": "https://github.com/magmax/pybrowsertest/issues", "coverage_image": "https://coveralls.io/repos/magmax/pybrowsertest/badge.png", "coverage_link": "https://coveralls.io/r/magmax/pybrowsertest", "description": "Selenium/Webdriver wrapper", "download": "https://pypi.python.org/pypi/pybrowsertest#downloads", "download_image": "https://pypip.in/d/pybrowsertest/badge.png", "featured": "", "filters": "", "github": "https://github.com/magmax/pybrowsertest", "hidden": "", "hyphenate": "", "language": "python", "license": "LGPL", "link": "https://pypi.python.org/pypi/pybrowsertest", "permalink": "/projects/project-pybrowsertest/", "slug": "project-pybrowsertest", "sort": "", "status": "5", "template": "", "tests_image": "https://travis-ci.org/magmax/pybrowsertest.png", "tests_link": "https://travis-ci.org/magmax/pybrowsertest", "text": "<div><p>PyBrowserTest is a (very) small framework used to create Browser tests.</p>\n<p>It wraps all the selenium initializations in order to make easier to begin with these kind of tests. It is very flexible and can be used with your favourite runner.</p>\n<p>PyBrowserTest opens a clean environment for each test. It is slow, but safe.</p>\n<p>It requires python-selenium to work properly, since it is only a wrapper for it.</p></div>", "title": "Pybrowsertest", "type": "text", "updated": "2015-02-23 00:00:00 UTC", "version_image": "https://pypip.in/v/pybrowsertest/badge.png"}, "project-python-inquirer": {"bugtracker": "https://github.com/magmax/python-inquirer/issues", "coverage_image": "https://coveralls.io/repos/magmax/python-inquirer/badge.png", "coverage_link": "https://coveralls.io/r/magmax/python-inquirer", "description": "Command line interfaces to require data", "download": "https://pypi.python.org/pypi/inquirer#downloads", "download_image": "https://pypip.in/d/inquirer/badge.png", "featured": "", "filters": "", "github": "https://github.com/magmax/python-inquirer", "hidden": "", "hyphenate": "", "language": "python", "license": "MIT", "link": "https://pypi.python.org/pypi/inquirer", "permalink": "/projects/project-python-inquirer/", "slug": "project-python-inquirer", "sort": "", "status": "5", "template": "", "tests_image": "https://travis-ci.org/magmax/python-inquirer.png", "tests_link": "https://travis-ci.org/magmax/python-inquirer", "text": "<div><p>Born as a <a class=\"reference external\" href=\"https://github.com/SBoudrias/Inquirer.js\">Inquirer.js</a> clone, it shares part of the goals and philosophy.</p>\n<p>So, <strong>Inquirer</strong> should ease the process of asking end user <strong>questions</strong>, <strong>parsing</strong>, <strong>validating</strong> answers, managing <strong>hierarchical prompts</strong> and providing <strong>error feedback</strong>.</p></div>", "title": "Python Inquirer", "type": "text", "updated": "2015-02-23 00:00:00 UTC", "version_image": "https://pypip.in/v/inquirer/badge.png"}, "project-python-readchar": {"bugtracker": "https://github.com/magmax/python-readchar/issues", "coverage_image": "https://coveralls.io/repos/magmax/python-readchar/badge.png", "coverage_link": "https://coveralls.io/r/magmax/python-readchar", "description": "Key press read library", "download": "https://pypi.python.org/pypi/readchar#downloads", "download_image": "https://pypip.in/d/readchar/badge.png", "featured": "", "filters": "", "github": "https://github.com/magmax/python-readchar", "hidden": "", "hyphenate": "", "language": "python", "license": "MIT", "link": "https://pypi.python.org/pypi/readchar", "permalink": "/projects/project-python-readchar/", "slug": "project-python-readchar", "sort": "", "status": "5", "template": "", "tests_image": "https://travis-ci.org/magmax/python-readchar.png", "tests_link": "https://travis-ci.org/magmax/python-readchar", "text": "<div><p>Born as a <a class=\"reference external\" href=\"link://slug/project-python-inquirer\">python-inquirer</a> requirement.</p>\n<p>The idea is to have a portable way to read single characters and key-strokes.</p></div>", "title": "Python Readchar", "type": "text", "updated": "2015-02-23 00:00:00 UTC", "version_image": "https://pypip.in/v/readchar/badge.png"}}