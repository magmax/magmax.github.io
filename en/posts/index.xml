<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on MagMax&#39;s blog</title>
    <link>https://magmax.org/en/posts/</link>
    <description>Recent content in Posts on MagMax&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 11 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://magmax.org/en/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ArgoCD with Kind</title>
      <link>https://magmax.org/en/blog/argocd/</link>
      <pubDate>Sun, 11 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/en/blog/argocd/</guid>
      <description>
        
          &lt;p&gt;This post will document how to run an
&lt;a href=&#34;https://argoproj.github.io/argo-cd/https://argoproj.github.io/argo-cd/&#34;&gt;ArgoCD&lt;/a&gt;
instance locally, using &lt;a href=&#34;https://kind.sigs.k8s.io/&#34;&gt;Kind&lt;/a&gt; to create the
Kubernetes cluster.
In addition, I will use cert-manager to create a self-signed certificate to
serve it with HTTPS.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/argocd.jpg&#34;
         alt=&#34;Argo CD&#34;/&gt; 
&lt;/figure&gt;

&lt;h2 id=&#34;creating-the-cluster-with-kind&#34;&gt;Creating the cluster with kind&lt;/h2&gt;
&lt;p&gt;First of all, is to have a Kubernetes cluster. You will require to have &lt;code&gt;kind&lt;/code&gt;
available in your path (maybe downloading to your &lt;code&gt;~/bin&lt;/code&gt; or &lt;code&gt;~/.local/bin&lt;/code&gt;
makes the trick). This is the configuration file I used:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# kind.yaml
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
nodes:
- role: control-plane
  kubeadmConfigPatches:
  - |
    kind: InitConfiguration
    nodeRegistration:
      kubeletExtraArgs:
        node-labels: &amp;quot;ingress-ready=true&amp;quot;
  extraPortMappings:
  - containerPort: 80
    hostPort: 80
    protocol: TCP
  - containerPort: 443
    hostPort: 443
    protocol: TCP
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;So, to create the cluster just type:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ kind create cluster --config=kind.yaml

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Wait until full process ends and&amp;hellip; you got it!&lt;/p&gt;
&lt;h3 id=&#34;add-ingress-to-your-cluster&#34;&gt;Add ingress to your cluster&lt;/h3&gt;
&lt;p&gt;In order to add ingress to the kind cluster, it&amp;rsquo;s required to &lt;a href=&#34;https://kind.sigs.k8s.io/docs/user/ingress/&#34;&gt;add an ingress
controller&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here you have what I did to install the nginx controller:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/provider/kind/deploy.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;It requires a couple of minutes to download images and&amp;hellip; Done!&lt;/p&gt;
&lt;h2 id=&#34;cert-manager&#34;&gt;Cert manager&lt;/h2&gt;
&lt;p&gt;Well&amp;hellip; let&amp;rsquo;s do things almost in the right way by using self-signed
certificates. This will be easier than it seems to be :)&lt;/p&gt;
&lt;p&gt;To install cert-manager, just run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v1.0.2/cert-manager.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now it will require a issuer. I needed to create this file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# cert-issuer.yaml
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: test-selfsigned
spec:
  selfSigned: {}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And run next command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ kubectl apply -f cert-issuer.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;That&amp;rsquo;s it.&lt;/p&gt;
&lt;h2 id=&#34;argocd&#34;&gt;ArgoCD&lt;/h2&gt;
&lt;p&gt;Now it&amp;rsquo;s time to install ArgoCD:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ kubectl create namespace argocd
$ kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;local-link&#34;&gt;Local link&lt;/h3&gt;
&lt;p&gt;I will serve it at &lt;em&gt;argocd.local&lt;/em&gt;. So I need to modify my &lt;code&gt;/etc/hosts&lt;/code&gt; to have
this line:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;127.0.0.1       localhost argocd.local

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;ingress&#34;&gt;Ingress&lt;/h3&gt;
&lt;p&gt;Once we have the URL, it&amp;rsquo;s required to have an ingress. So I needed the file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: argocd-server-ingress
  namespace: argocd
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: test-selfsigned
    nginx.ingress.kubernetes.io/force-ssl-redirect: &amp;quot;true&amp;quot;
    nginx.ingress.kubernetes.io/ssl-passthrough: &amp;quot;true&amp;quot;
    nginx.ingress.kubernetes.io/backend-protocol: &amp;quot;HTTPS&amp;quot;
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: argocd-server
          servicePort: https
    host: argocd.local
  tls:
  - secretName: https-cert
    hosts:
    - argocd.local
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And run it:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ kubectl apply -f ingress.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And it will be ready!&lt;/p&gt;
&lt;h3 id=&#34;access&#34;&gt;Access&lt;/h3&gt;
&lt;p&gt;Just open &lt;a href=&#34;https://argocd.local&#34;&gt;https://argocd.local&lt;/a&gt; to enter. The username is admin and the password
is the name of the argo server docker, which can be obtained with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ kubectl get pods -n argocd -l app.kubernetes.io/name=argocd-server -o name | cut -d&#39;/&#39; -f 2
&lt;/code&gt;&lt;/pre&gt;
        
      </description>
    </item>
    
    <item>
      <title>Is Code Coverage Irrelevant?</title>
      <link>https://magmax.org/en/blog/is-code-coverage-irrelevant/</link>
      <pubDate>Tue, 17 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/en/blog/is-code-coverage-irrelevant/</guid>
      <description>
        
          &lt;p&gt;After reading the article &lt;a href=&#34;https://ronjeffries.com/articles/015-11/coverage/&#34;&gt;&amp;ldquo;Is Code Coverage Irrelevant?&amp;rdquo; by Ron Jeffries&lt;/a&gt; I feel the necessity to accept the challenge and tell what I really think about code coverage.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve being thinking for some time about writting this article&amp;hellip; So this is the best moment, I think.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/programming.jpg&#34;/&gt; 
&lt;/figure&gt;

&lt;h2 id=&#34;what-does-the-coverage-means&#34;&gt;What does the coverage means?&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s start with this twit:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Two projects, one has 95% code coverage with tests, one has 45%. You’re going to be paid per bug found. Which one do you want to work on?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Well&amp;hellip; I agree most people saying it depends. I have not enough information to decide.&lt;/p&gt;
&lt;p&gt;But my first question different from other people: &lt;strong&gt;&amp;ldquo;What kind of coverage?&amp;quot;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Usually companies measure the coverage without thinking about it, but coverage given by different tests means different things.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Unit tests coverage&lt;/strong&gt; may mean our &lt;em&gt;intention&lt;/em&gt; to test. A high coverage produced by unit tests means we have tried to test it carefully, despite it doesn&amp;rsquo;t mind we have done it really.&lt;/p&gt;
&lt;p&gt;It is very difficult to increment the coverage with unit tests. Indeed, it is very difficult to have really good unit tests.&lt;/p&gt;
&lt;p&gt;In the other hand, &lt;strong&gt;Integration tests coverage&lt;/strong&gt; show us the amount of code that &lt;strong&gt;is not tested&lt;/strong&gt; in any way. I mean: It is not a measure of goodness but a measure of doubt. You can be sure the tested code works at least in a use case, but not tested code&amp;hellip; Is a mystery. I&amp;rsquo;ve had python code failing in simple methods because of a typo, just because there were no tests.&lt;/p&gt;
&lt;p&gt;And finally, &lt;strong&gt;Acceptance tests coverage&lt;/strong&gt; show what methods are &lt;em&gt;probably&lt;/em&gt; not used or not useful. No body took care to test them, so probably there is no flow to get them and they are deprecated or they are giving unnecessary functionality.&lt;/p&gt;
&lt;p&gt;Sadly, companies trend to join all these percentages.&lt;/p&gt;
&lt;p&gt;In general, the number that tells more is the &lt;strong&gt;not covered code&lt;/strong&gt;, despite people just look to covered code.&lt;/p&gt;
&lt;h2 id=&#34;what-really-gives-a-high-coverage&#34;&gt;What really gives a high coverage?&lt;/h2&gt;
&lt;p&gt;Well&amp;hellip; it gives you probabilities.&lt;/p&gt;
&lt;p&gt;As an example, &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/ms679351%28VS.85%29.aspx&#34;&gt;FormatMessage&lt;/a&gt;, a method in Windows API, is difficult to have high coverage: too many arguments, too many flows. It would require a lot of tests. But not covered lines tell us where the code is prone to fail.&lt;/p&gt;
&lt;p&gt;The tipical &lt;code&gt;math.sqrt&lt;/code&gt; function, which returns the square root of a given number, is easy to get a 100% coverage without testing it at all: may fail with zero or negative values, or even just work just for a couple of numbers. Then, coverage tell us&amp;hellip; nothing, maybe.&lt;/p&gt;
&lt;p&gt;You can speak just about not covered code, because it is unknown.&lt;/p&gt;
&lt;p&gt;In addition, a high coverage in unit tests may mean that we have very small methods, we wasted a lot of time testing or we have very bad unit tests (being integration tests instead). Probably.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I really, really love the article &lt;a href=&#34;https://googletesting.blogspot.com.es/2010/07/code-coverage-goal-80-and-no-less.html&#34;&gt;Code coverage goal: 80% and no less!&lt;/a&gt;, by Alberto Savoia. Coverage is something to help us to be sure about what our code does and its flaws. It cannot be used as performance measurement or developer goodness.&lt;/p&gt;
&lt;p&gt;I always say: &lt;strong&gt;To have a 100% coverage is easy. The difficult part is to test it all.&lt;/strong&gt;&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Distributed Python: Celery</title>
      <link>https://magmax.org/en/blog/python-distribuido-celery/</link>
      <pubDate>Sat, 22 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/en/blog/python-distribuido-celery/</guid>
      <description>
        
          &lt;p&gt;Nowadays,
&lt;abbr title=&#34;Service Oriented Architectures&#34;&gt;SOA&lt;/abbr&gt;

architectures is in fashion. These architectures use little and very specific services, so they interact each other.&lt;/p&gt;
&lt;p&gt;In this post I&amp;rsquo;ll show how to use &lt;a href=&#34;https://www.celeryproject.org/&#34;&gt;Celery&lt;/a&gt; in order to create a SOA architecture.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/python.png&#34;
         alt=&#34;Python&#34;/&gt; 
&lt;/figure&gt;

&lt;h2 id=&#34;about-celery&#34;&gt;About Celery&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.celeryproject.org/&#34;&gt;Celery&lt;/a&gt; is not a communication system, because it uses &lt;a href=&#34;https://www.rabbitmq.com&#34;&gt;RabbitMQ&lt;/a&gt;, &lt;a href=&#34;https://redis.io/&#34;&gt;Redis&lt;/a&gt;, etc. as communication system. The same applies to argue it is not a message queue system. Neither it is a protocol, because it uses &lt;a href=&#34;https://www.amqp.org/&#34;&gt;AMQP&lt;/a&gt;. Neither it is an abstraction over all these, because &lt;a href=&#34;https://kombu.readthedocs.org/en/latest/&#34;&gt;Kombu&lt;/a&gt; does that work, the communications library it uses under the hood.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.celeryproject.org/&#34;&gt;Celery&lt;/a&gt; is a set ot tools to work easily with several services, something like syntactic sugar. It allows to launch services as &lt;strong&gt;tasks&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&#34;how-to-install-it&#34;&gt;How to install it&lt;/h2&gt;
&lt;p&gt;It is very easy to install; with &lt;code&gt;pip&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;pip install celery
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;or &lt;code&gt;apt&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;apt-get install python-celery
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The problem here is we need a &lt;strong&gt;Broker&lt;/strong&gt;. The &lt;strong&gt;Broker&lt;/strong&gt; is the way to transport messages from a service to another. In this case, we need a message queue.&lt;/p&gt;
&lt;p&gt;We will use two of them as example: &lt;a href=&#34;https://www.rabbitmq.com&#34;&gt;RabbitMQ&lt;/a&gt; and &lt;a href=&#34;https://redis.io/&#34;&gt;Redis&lt;/a&gt;. The first one is somehow&amp;hellip; complicated, but very interesting if you already know and install the &lt;a href=&#34;https://www.rabbitmq.com/management.html&#34;&gt;management plugin&lt;/a&gt;. The second one is easier to be installed, but more difficult to see what is happening internally. To use &lt;a href=&#34;https://redis.io/&#34;&gt;Redis&lt;/a&gt; you will also require the library; with &lt;code&gt;pip&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;pip install redis
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;or with &lt;code&gt;apt&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;apt-get install python-redis
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;
&lt;h3 id=&#34;creating-services&#34;&gt;Creating services&lt;/h3&gt;
&lt;p&gt;Let&amp;rsquo;s start creating a little service to multiply two numbers:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Celery service example: task to multiply two numbers&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; celery &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Celery
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# RabbitMQ&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#app = Celery(&amp;#39;tasks&amp;#39;, broker=&amp;#39;amqp://guest@localhost//&amp;#39;, backend=&amp;#39;amqp&amp;#39;)&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Redis&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;app &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Celery(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tasks&amp;#39;&lt;/span&gt;, broker&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;redis://localhost:6379/0&amp;#39;&lt;/span&gt;, backend&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;redis://localhost:6379/0&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@app.task&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;multiply&lt;/span&gt;(a, b):
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; b&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The overhead added by &lt;a href=&#34;https://www.celeryproject.org/&#34;&gt;Celery&lt;/a&gt; is quite small: importing the library, connecting (&lt;code&gt;app&lt;/code&gt;) and adding a decorator to our service.&lt;/p&gt;
&lt;p&gt;It is already executable:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;$ celery worker --loglevel&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;info -A tasks
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt; -------------- celery@nightcrawler v3.1.17 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Cipater&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;---- **** -----
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;--- * ***  * -- Linux-3.16.0-4-amd64-x86_64-with-debian-8.0
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;-- * - **** ---
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;- ** ---------- &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;config&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;- ** ---------- .&amp;gt; app:         tasks:0x7f3476eb9b90
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;- ** ---------- .&amp;gt; transport:   redis://localhost:6379/0
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;- ** ---------- .&amp;gt; results:     redis://localhost:6379/0
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;- *** --- * --- .&amp;gt; concurrency: &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;prefork&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;-- ******* ----
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;--- ***** ----- &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;queues&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt; -------------- .&amp;gt; celery           exchange&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;celery&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;direct&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; key&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;celery
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;tasks&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18&lt;/span&gt;  . tasks.multiply
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;2015-03-20 21:56:16,526: INFO/MainProcess&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Connected to redis://localhost:6379/0
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;2015-03-20 21:56:16,541: INFO/MainProcess&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; mingle: searching &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; neighbors
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;2015-03-20 21:56:17,780: INFO/MainProcess&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; mingle: all alone
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;2015-03-20 21:56:17,791: WARNING/MainProcess&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; celery@nightcrawler ready.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There is a lot of information here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Used versions&lt;/li&gt;
&lt;li&gt;Created queues&lt;/li&gt;
&lt;li&gt;Brokers used to transport and retrieve results&lt;/li&gt;
&lt;li&gt;Number of workers, that is, processes available to process a request in a concurrent way.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And more, but it can be ignored right now.&lt;/p&gt;
&lt;p&gt;We will leave it running.&lt;/p&gt;
&lt;h3 id=&#34;running-services&#34;&gt;Running services&lt;/h3&gt;
&lt;p&gt;That was the &lt;em&gt;subscriptor&lt;/em&gt;. Let create the &lt;em&gt;publisher&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Celery client example: request for two numbers multiplication&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; celery &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Celery
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# RabbitMQ&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#app = Celery(&amp;#39;tasks&amp;#39;, broker=&amp;#39;amqp://guest@localhost//&amp;#39;, backend=&amp;#39;amqp&amp;#39;)&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Redis&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;app &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Celery(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tasks&amp;#39;&lt;/span&gt;, broker&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;redis://localhost:6379/0&amp;#39;&lt;/span&gt;, backend&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;redis://localhost:6379/0&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;promise &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; app&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;send_task(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tasks.multiply&amp;#39;&lt;/span&gt;, args&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;])
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(promise&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get())&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is more complicated&amp;hellip; but quick to be explained:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;First part is the same than before, because we need to conect to the same server.&lt;/li&gt;
&lt;li&gt;Second part runs the task with its name, passing the arguments. That returns a &lt;em&gt;promise&lt;/em&gt;. At this point we have leaved a message in the queue.&lt;/li&gt;
&lt;li&gt;Finally, the &lt;em&gt;promise&lt;/em&gt; is resolved with &lt;code&gt;promise.get()&lt;/code&gt;. Whenever, the service had read and processed the message, and it has leaved the result in other queue and, with this method, it is read.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So it seems complicated&amp;hellip; but it could be even more.&lt;/p&gt;
&lt;p&gt;Anyways, I&amp;rsquo;ve saved a video to see it all:&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/Lf4Q7K6Ab_g&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h3 id=&#34;everything-together-is-easier&#34;&gt;Everything together is easier&lt;/h3&gt;
&lt;p&gt;You can put it all together in the same file, and everything become easier. This is not always possible and can give problems (like every change implies to reboot both client and service), but is very educational:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Celery full example: publisher/subscriber to request a multiplication&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; celery &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Celery
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# RabbitMQ&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#app = Celery(&amp;#39;tasks&amp;#39;, broker=&amp;#39;amqp://guest@localhost//&amp;#39;, backend=&amp;#39;amqp&amp;#39;)&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Redis&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;app &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Celery(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tasks&amp;#39;&lt;/span&gt;, broker&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;redis://localhost:6379/0&amp;#39;&lt;/span&gt;, backend&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;redis://localhost:6379/0&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@app.task&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;multiply&lt;/span&gt;(a, b):
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; b
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;():
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;    promise &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; multiply&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;delay(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(promise&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get())
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18&lt;/span&gt;    main()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we are running a task method directly, so we get the task.&lt;/p&gt;
&lt;p&gt;And now we have a very complicated way to multiply two numbers :)&lt;/p&gt;
&lt;h2 id=&#34;tools&#34;&gt;Tools&lt;/h2&gt;
&lt;p&gt;As I said before, &lt;a href=&#34;https://www.celeryproject.org/&#34;&gt;Celery&lt;/a&gt; gives you tools and syntactic sugar.&lt;/p&gt;
&lt;p&gt;First of all, we&amp;rsquo;ll see &lt;em&gt;partials&lt;/em&gt;. They are functions with some parameters already set.&lt;/p&gt;
&lt;p&gt;It is very easy to create the &lt;em&gt;partial&lt;/em&gt; &lt;code&gt;duplicate&lt;/code&gt; by forcing the first parameter of &lt;code&gt;multiply&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Celery full example: multiply two numbers with partials&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; celery &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Celery
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# RabbitMQ&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#app = Celery(&amp;#39;tasks&amp;#39;, broker=&amp;#39;amqp://guest@localhost//&amp;#39;, backend=&amp;#39;amqp&amp;#39;)&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Redis&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;app &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Celery(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tasks&amp;#39;&lt;/span&gt;, broker&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;redis://localhost:6379/0&amp;#39;&lt;/span&gt;, backend&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;redis://localhost:6379/0&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@app.task&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;multiply&lt;/span&gt;(a, b):
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; b
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;():
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;    duplicate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; multiply&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;si(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;    promise &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; duplicate&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;delay(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(promise&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get())
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19&lt;/span&gt;    main()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
:start-line: 12
:end-line: 16
:number-lines: 13&lt;/p&gt;
&lt;p&gt;Yeah, partials are built with method &lt;code&gt;.si&lt;/code&gt;, despite we can use &lt;code&gt;.s&lt;/code&gt; too. The fist one is &lt;em&gt;immutable&lt;/em&gt; (that explains the &lt;code&gt;i&lt;/code&gt;). It is very difficult to explain this before explaining another &lt;a href=&#34;https://www.celeryproject.org/&#34;&gt;Celery&lt;/a&gt; tool: &lt;code&gt;Chains&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.celeryproject.org/&#34;&gt;Celery&lt;/a&gt; allows to chain tasks, so the result of one is the first parameter of the next one. Why the first one? It works so. It is a fucking shit, but works so.&lt;/p&gt;
&lt;p&gt;Sometimes we will require chained tasks just to set an order, so we can ignore the previous result. Here is when we can use the immutable functions, because they won&amp;rsquo;t use the previous task result.&lt;/p&gt;
&lt;p&gt;I suppose you have noticed I use &amp;ldquo;functions&amp;rdquo; or &amp;ldquo;services&amp;rdquo; equally.&lt;/p&gt;
&lt;p&gt;But too much talk; let&amp;rsquo;s concat something:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Celery example: multiply with chains&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; celery &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Celery
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# RabbitMQ&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#app = Celery(&amp;#39;tasks&amp;#39;, broker=&amp;#39;amqp://guest@localhost//&amp;#39;, backend=&amp;#39;amqp&amp;#39;)&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Redis&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;app &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Celery(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tasks&amp;#39;&lt;/span&gt;, broker&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;redis://localhost:6379/0&amp;#39;&lt;/span&gt;, backend&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;redis://localhost:6379/0&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@app.task&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;multiply&lt;/span&gt;(a, b):
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; b
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; celery &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; chain
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;():
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;    duplicate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; multiply&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;s(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17&lt;/span&gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18&lt;/span&gt;    task &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; chain(multiply&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;s(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;), multiply&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;s(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;))
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19&lt;/span&gt;    promise &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; task&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;delay()
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(promise&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get())
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23&lt;/span&gt;    main()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As I said before, &lt;a href=&#34;https://www.celeryproject.org/&#34;&gt;Celery&lt;/a&gt; gives syntactic sugar, so it can be rewritten to:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Celery example: multiply with chains using pipes (syntactic sugar)&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; celery &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Celery
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# RabbitMQ&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#app = Celery(&amp;#39;tasks&amp;#39;, broker=&amp;#39;amqp://guest@localhost//&amp;#39;, backend=&amp;#39;amqp&amp;#39;)&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Redis&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;app &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Celery(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tasks&amp;#39;&lt;/span&gt;, broker&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;redis://localhost:6379/0&amp;#39;&lt;/span&gt;, backend&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;redis://localhost:6379/0&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@app.task&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;multiply&lt;/span&gt;(a, b):
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; b
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;():
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;    duplicate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; multiply&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;s(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;    task &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; multiply&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;s(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; multiply&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;s(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17&lt;/span&gt;    promise &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; task&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;delay()
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(promise&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get())
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21&lt;/span&gt;    main()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And here is where fun starts: we have a &lt;strong&gt;canvas&lt;/strong&gt;, that is, a task workflow. Believe ir or not, if you launch several &lt;em&gt;workers&lt;/em&gt; in different hosts and all of them are connected to the same &lt;em&gt;broker&lt;/em&gt;, each operation could run in a different host.&lt;/p&gt;
&lt;p&gt;But&amp;hellip; Why the &lt;em&gt;canvas&lt;/em&gt; if all the operations run sequentially? Because we can process them concurrently with &lt;code&gt;Groups&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Celery example: several multiplications with chains and groups (canvas)&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; celery &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Celery
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# RabbitMQ&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#app = Celery(&amp;#39;tasks&amp;#39;, broker=&amp;#39;amqp://guest@localhost//&amp;#39;, backend=&amp;#39;amqp&amp;#39;)&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Redis&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;app &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Celery(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tasks&amp;#39;&lt;/span&gt;, broker&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;redis://localhost:6379/0&amp;#39;&lt;/span&gt;, backend&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;redis://localhost:6379/0&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@app.task&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;multiply&lt;/span&gt;(a, b):
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; b
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; celery &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; group
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;():
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;    duplicate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; multiply&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;s(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17&lt;/span&gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18&lt;/span&gt;    task &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; group(
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19&lt;/span&gt;        multiply&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;s(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; multiply&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;s(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;),
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20&lt;/span&gt;        multiply&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;s(&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; multiply&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;s(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;),
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21&lt;/span&gt;        multiply&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;s(&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; duplicate,
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22&lt;/span&gt;    )
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23&lt;/span&gt;    promise &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; task&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;delay()
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(promise&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get())
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27&lt;/span&gt;    main()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There is even more syntactic sugar, like &lt;code&gt;chords&lt;/code&gt;, &lt;code&gt;maps&lt;/code&gt;, &lt;code&gt;starmaps&lt;/code&gt; and &lt;code&gt;chunks&lt;/code&gt;, but we won&amp;rsquo;t browse them. This is an introductory post. &lt;a href=&#34;https://celery.readthedocs.org/en/latest/userguide/canvas.html&#34;&gt;You can read more about Canvas&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;the-beat&#34;&gt;The Beat&lt;/h3&gt;
&lt;p&gt;Other important tool in &lt;a href=&#34;https://www.celeryproject.org/&#34;&gt;Celery&lt;/a&gt; is the &lt;strong&gt;Beat&lt;/strong&gt;. It is a beat or a periodic signal. We can start it in the worker with &lt;code&gt;--beat&lt;/code&gt; option. While &lt;a href=&#34;https://github.com/celery/celery/issues/1495&#34;&gt;Beat exclusiveness&lt;/a&gt; is not added, it is important to run just one or we will receive more than one &lt;em&gt;beat&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;This &lt;em&gt;beat&lt;/em&gt; allows us to run periodic tasks.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s see a small example: we are going to multiply the hour by 2 every 10 seconds:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Celery beat example: periodic date operation&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; celery &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Celery
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; celery &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; group
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# RabbitMQ&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#app = Celery(&amp;#39;tasks&amp;#39;, broker=&amp;#39;amqp://guest@localhost//&amp;#39;, backend=&amp;#39;amqp&amp;#39;)&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Redis&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;app &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Celery(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tasks&amp;#39;&lt;/span&gt;, broker&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;redis://localhost:6379/0&amp;#39;&lt;/span&gt;, backend&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;redis://localhost:6379/0&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@app.task&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;add_days&lt;/span&gt;(days):
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;now() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;timedelta(days&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;days)
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;app&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;conf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;update(
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;    CELERYBEAT_SCHEDULE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17&lt;/span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;multiply-each-10-seconds&amp;#39;&lt;/span&gt;: {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18&lt;/span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;task&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tasks.add_days&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19&lt;/span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;schedule&amp;#39;&lt;/span&gt;: datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;timedelta(seconds&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;),
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20&lt;/span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;args&amp;#39;&lt;/span&gt;: (&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, )
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21&lt;/span&gt;        },
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22&lt;/span&gt;    },
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And here you have the video:&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/qTXJUnV0oHU&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Again, I&amp;rsquo;m going to stop here; I can only show a little about it. You can read more about &lt;a href=&#34;https://celery.readthedocs.org/en/latest/userguide/periodic-tasks.html&#34;&gt;periodic tasks&lt;/a&gt; if you are interested in.&lt;/p&gt;
&lt;h3 id=&#34;warning-pickle&#34;&gt;Warning: pickle&lt;/h3&gt;
&lt;p&gt;Perhaps you see a warning like &lt;code&gt;warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))&lt;/code&gt;. This is because we are using the &lt;a href=&#34;https://docs.python.org/3.4/library/pickle.html&#34;&gt;pickle&lt;/a&gt; serializer, which is deprecated. You can avoid it by adding:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Celery beat example: periodic date operation&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; celery &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Celery
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; celery &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; group
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# RabbitMQ&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#app = Celery(&amp;#39;tasks&amp;#39;, broker=&amp;#39;amqp://guest@localhost//&amp;#39;, backend=&amp;#39;amqp&amp;#39;)&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Redis&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;app &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Celery(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tasks&amp;#39;&lt;/span&gt;, broker&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;redis://localhost:6379/0&amp;#39;&lt;/span&gt;, backend&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;redis://localhost:6379/0&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@app.task&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;add_days&lt;/span&gt;(days):
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;now() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;timedelta(days&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;days)
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;app&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;conf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;update(
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;    CELERYBEAT_SCHEDULE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17&lt;/span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;multiply-each-10-seconds&amp;#39;&lt;/span&gt;: {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18&lt;/span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;task&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tasks.add_days&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19&lt;/span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;schedule&amp;#39;&lt;/span&gt;: datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;timedelta(seconds&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;),
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20&lt;/span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;args&amp;#39;&lt;/span&gt;: (&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, )
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21&lt;/span&gt;        },
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22&lt;/span&gt;    },
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23&lt;/span&gt;    CELERY_ACCEPT_CONTENT &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;json&amp;#39;&lt;/span&gt;],
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;complex-environments&#34;&gt;Complex environments&lt;/h2&gt;
&lt;p&gt;Obviously, I&amp;rsquo;ve talked just about basic &lt;a href=&#34;https://www.celeryproject.org/&#34;&gt;Celery&lt;/a&gt;. We&amp;rsquo;ve used just a queue to communicate. As long as &lt;a href=&#34;https://www.rabbitmq.com&#34;&gt;RabbitMQ&lt;/a&gt; allows queue operations, &lt;a href=&#34;https://www.celeryproject.org/&#34;&gt;Celery&lt;/a&gt; too.&lt;/p&gt;
&lt;p&gt;You can:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;assign different queues to perform different tasks, so not all workers listen all requests or to assign different workers to different queues.&lt;/li&gt;
&lt;li&gt;route messages between queues.&lt;/li&gt;
&lt;li&gt;send messages to all queues (&lt;strong&gt;topic&lt;/strong&gt;).&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I&amp;rsquo;m not going to explain it deeply, but I&amp;rsquo;m going to describe the message path. This information is required to understand how routing works (found at &lt;a href=&#34;https://celery.readthedocs.org/en/latest/userguide/routing.html#exchanges-queues-and-routing-keys&#34;&gt;Exchanges, queues and routing keys&lt;/a&gt;):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Message is sent. It is leaved in an &lt;strong&gt;EXCHANGE&lt;/strong&gt;. If it doesn&amp;rsquo;t exist, &lt;a href=&#34;https://www.celeryproject.org/&#34;&gt;Celery&lt;/a&gt; will create it.&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;EXCHANGE&lt;/strong&gt; routes the message to one or more queues, depending on its configuration. If queues doesn&amp;rsquo;t exist, &lt;a href=&#34;https://www.celeryproject.org/&#34;&gt;Celery&lt;/a&gt; will care.&lt;/li&gt;
&lt;li&gt;The message waits in the queue until a consumer takeExchanges it. At this moment, the message is blocked to avoid other consumers to take it.&lt;/li&gt;
&lt;li&gt;After processing it, consumer sends an &lt;strong&gt;ACK&lt;/strong&gt; and the message is finally removed.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;By default, &lt;a href=&#34;https://www.celeryproject.org/&#34;&gt;Celery&lt;/a&gt; creates queues with the &lt;em&gt;exchange&lt;/em&gt; name and binds them in a direct way, that is, every message that gets the &lt;em&gt;exchange&lt;/em&gt; is routed to that queue.&lt;/p&gt;
&lt;p&gt;You can play with routings and create really complex architectures, so any message arrives to its target depending on the operation.&lt;/p&gt;
&lt;h2 id=&#34;more-information&#34;&gt;More information&lt;/h2&gt;
&lt;p&gt;The post &lt;a href=&#34;https://abhishek-tiwari.com/post/amqp-rabbitmq-and-celery-a-visual-guide-for-dummies&#34;&gt;AMQP, RabbitMQ and Celery - A Visual Guide For Dummies&lt;/a&gt; has beginner level, but I like it a lot because it explains everything with images. &lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-use-celery-with-rabbitmq-to-queue-tasks-on-an-ubuntu-vps&#34;&gt;How To Use Celery with RabbitMQ to Queue Tasks on an Ubuntu VPS&lt;/a&gt; is good too, and the PyCon slides &lt;a href=&#34;https://www.imankulov.name/posts/celery-for-internal-api.html&#34;&gt;Celery for Internal API in SOA infrastructure&lt;/a&gt; too.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.caktusgroup.com/blog/2014/06/23/scheduling-tasks-celery/&#34;&gt;Getting Started Scheduling Tasks with Celery&lt;/a&gt; is about configuring periodic tasks in a dynamic way by using &lt;a href=&#34;https://pypi.python.org/pypi/django-celery&#34;&gt;DJCelery&lt;/a&gt;, quite interesting to use it with &lt;a href=&#34;https://www.djangoproject.com/&#34;&gt;Django&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In order to understand it under the hood, I recommend &lt;a href=&#34;https://www.rabbitmq.com/tutorials/amqp-concepts.html&#34;&gt;AMQP 0-9-1 Model Explained&lt;/a&gt;, where &lt;a href=&#34;https://www.amqp.org/&#34;&gt;AMQP&lt;/a&gt; protocol is explained. It is very interesing to try complex routings. &lt;a href=&#34;https://rajith.2rlabs.com/2007/10/13/amqp-in-10-mins-part3-flexible-routing-model/&#34;&gt;AMQP in 10 mins : Part3 – Flexible Routing Model&lt;/a&gt; talks about that too, but is easier and just explains the basic concepts.&lt;/p&gt;
&lt;p&gt;If you want to participate in a project using &lt;a href=&#34;https://www.celeryproject.org/&#34;&gt;Celery&lt;/a&gt;, I can cheer you to help me with &lt;a href=&#34;https://github.com/djcron-project/&#34;&gt;DJCron&lt;/a&gt;, a wrapper over &lt;a href=&#34;https://pypi.python.org/pypi/django-celery&#34;&gt;DJCelery&lt;/a&gt; that allows to configure distributed tasks dinamically, adding some extra features over  &lt;a href=&#34;https://pypi.python.org/pypi/django-celery&#34;&gt;DJCelery&lt;/a&gt;.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>What is an Engineer?</title>
      <link>https://magmax.org/en/blog/que-es-ingeniero/</link>
      <pubDate>Tue, 21 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/en/blog/que-es-ingeniero/</guid>
      <description>
        
          &lt;p&gt;In this article I will talk about what Engineering means to me.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;d like to ask any reader that, before reading this article, use a couple of minutes to answer the question: &lt;em&gt;&amp;ldquo;What does &amp;lsquo;to be an Engineer&amp;rsquo; mean?&amp;quot;&lt;/em&gt;. After this small exercise, I suggest to write a short answer down in a piece of paper.&lt;/p&gt;
&lt;p&gt;After doing that, you can read the article. If it likes you or not, compare my answer with yours. Finally, try to define it again and, if you want, share your definition as a comment.&lt;/p&gt;
&lt;p&gt;I hope you like this post. I hope it to make you to think.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/poetry.jpg&#34;/&gt; 
&lt;/figure&gt;

&lt;h1 id=&#34;history&#34;&gt;History&lt;/h1&gt;
&lt;p&gt;It was upon a time&amp;hellip; a happy student who was finishing Computer Science Engineering. That was me, obviously. And due to I was finishing, I started to browse about some jobs.&lt;/p&gt;
&lt;p&gt;It scaries at first. So I started to learn about job interviews, reading about what questions could I found and which ones were the best answers. This is commonly known as &amp;ldquo;cheating&amp;rdquo; :D&lt;/p&gt;
&lt;p&gt;One of those questions was &lt;em&gt;&amp;ldquo;What an Engineer is?&amp;quot;&lt;/em&gt;. That was a good one, as you already know if, truely, you have tried to answer it. With that question there was an answer too: &lt;strong&gt;An Engineer is a person who solves problems&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;In that moment it seemed genial. What a simple and accurate answer!&lt;/p&gt;
&lt;h1 id=&#34;a-new-answer&#34;&gt;A new answer&lt;/h1&gt;
&lt;p&gt;but I think I&amp;rsquo;ve found another answer to the same question. What is more: I think that saying &lt;em&gt;&amp;ldquo;An Engineer is the person who solves problems&amp;rdquo;&lt;/em&gt; defines more an &lt;em&gt;Idiot&lt;/em&gt; than an Engineer. I&amp;rsquo;ve been that idiot for too long (and maybe someone thinks I still do XD).&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m going to prove it: A person who solves problems can see, at the end of the day, a heap of solved problems and other heap of problems to be solved. Two options can happen here: the heap of problems to be solved can grow or decrease.&lt;/p&gt;
&lt;p&gt;The first option shows a incompetent person, because he won&amp;rsquo;t able to finish all those problems. The second option is that man&amp;rsquo;s bosses see him solving problems and giving him more problems, until the poor man is grouped with incompetent people.&lt;/p&gt;
&lt;p&gt;So that answer is not enough for me. Maybe I choose a bad career or there is another way.&lt;/p&gt;
&lt;p&gt;Because of that, I think that &lt;strong&gt;An Engineer is the person who solves problems &lt;em&gt;before&lt;/em&gt; them to appear&lt;/strong&gt;. That hint is very important.&lt;/p&gt;
&lt;p&gt;This way, the Engineer will found a lot of things done at the end of the day. There will appear more problems, that is unvoidable, but a good Engineer will have tried to avoid their impact. I mean, the really difference between an Engineer and an Idiot is &lt;strong&gt;to think in advance&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&#34;consecuences&#34;&gt;Consecuences&lt;/h2&gt;
&lt;p&gt;This new definition has a lot of consecuences for me. To start with, it is important to think in advance to problems. But&amp;hellip; How can this be done?&lt;/p&gt;
&lt;p&gt;There are two ways: either you continue on being an idiot and trust your luck and/or fortune-tellers, or you take measurements. Literally.&lt;/p&gt;
&lt;p&gt;You cannot know if anythink goes wrongly if you do not know when it goes smoothly. So the first thing to be done is just &lt;strong&gt;measure&lt;/strong&gt;. You have to draw a line between what is normal and what is not, so you can be warned when something leaves its normal status.&lt;/p&gt;
&lt;p&gt;If the line is wrong, probably you will waste your work. This is a little price you have to pay while you are adjusting it. But when the line is adjusted, you will have more time to react when things leave their normal status until they become a true problem.&lt;/p&gt;
&lt;p&gt;To this advantage you have to add another no less important: to know when something is out of its normal status will allow us to identify the cause more efficiently.&lt;/p&gt;
&lt;p&gt;Some times, the cause will be admissible: a change in the product behave can generate a result change. These cases allow us to update the &amp;ldquo;normality&amp;rdquo; definition an to modify our alerts.&lt;/p&gt;
&lt;p&gt;Our measurements system can broke too. This is not avoidable.&lt;/p&gt;
&lt;p&gt;How many measurements should I take? As many as possible. Whe a problem appears, the more data you have, the faster you can evaluate why did it started and the less time you will waste to find the solution.&lt;/p&gt;
&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;
&lt;p&gt;We can see some examples everyday:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When you go to the doctor, they measure the blood preasure to check if is &lt;em&gt;normal&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Trafic cameras control trafic jams, so people can drive &lt;em&gt;normally&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Whenever a ragged boy enters a shop, he is watched, because he is not &lt;em&gt;normal&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;If your car sounds &lt;em&gt;unusual&lt;/em&gt;, you carry it to the shop before it to get broken.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;How do you know in these cases when it is &lt;em&gt;&amp;ldquo;normal&amp;rdquo;&lt;/em&gt;? Is it something just known and that&amp;rsquo;s all?&lt;/p&gt;
&lt;p&gt;No. None of these cases are because of randomly. Neither a future-teller is saying it.&lt;/p&gt;
&lt;p&gt;What happens here is that, conscious or not, some limits have been set and, when the threshold is passed, there is a warning and someone takes care.&lt;/p&gt;
&lt;h1 id=&#34;planning&#34;&gt;Planning&lt;/h1&gt;
&lt;p&gt;Another definition I&amp;rsquo;ve readed is that &lt;em&gt;&amp;ldquo;An Engineer is someone who plans&amp;rdquo;&lt;/em&gt;. This is quite beautiful, but&amp;hellip; What does to plan mean?&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve &amp;ldquo;planned&amp;rdquo; a lot of times. I&amp;rsquo;ve enumerated any requierd step to finish a job; then I&amp;rsquo;ve estimated how long will each task take; I&amp;rsquo;ve started solving it task by task and&amp;hellip; I&amp;rsquo;ve never been right.&lt;/p&gt;
&lt;p&gt;Some hidden problems have always appeared. Tasks were larger I expected. And this happens because of something: to estimate is synonym of intuit. An estimation can only be exact whenver the job is finished.&lt;/p&gt;
&lt;p&gt;So, in my opinion, an Engineer who estimates it is just a future-teller. To make it really useful, something more is required.&lt;/p&gt;
&lt;p&gt;And that &amp;ldquo;something more&amp;rdquo; are measurements again. They are some limits again. Those limtes which tell us when a task is finished. And &lt;strong&gt;a task is finished when it is finished&lt;/strong&gt;. I mean: if it is &lt;em&gt;almost finished&lt;/em&gt;, then it is not at all.&lt;/p&gt;
&lt;p&gt;The only way to know when a task is finished is when some limits have been set beforehand.&lt;/p&gt;
&lt;p&gt;So &amp;ldquo;planning&amp;rdquo; is not to put a task after another and predict how long are going to take any of them. It is, in addition, to define when each of them are finished. And this is required to know when the whole job is finished.&lt;/p&gt;
&lt;p&gt;This planification should take in mind new problems, because they will appear. And the measurements to avoid them too!! This is the risk planification.&lt;/p&gt;
&lt;p&gt;If all these are part of &amp;ldquo;planification&amp;rdquo;, then I agree the definition: An Engineer is the person who plans, where planning takes in mind not only task length, but the project and each task scope, and the risk evaluation, and the solution to these risks.&lt;/p&gt;
&lt;p&gt;Damn, uh?&lt;/p&gt;
&lt;h1 id=&#34;the-end&#34;&gt;The end&lt;/h1&gt;
&lt;p&gt;Before reading this part, please, do the first exercise again: write down your Engineer definition in a piece of paper.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I do not want to modify your result with my answer&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Probably your answer will be as valid (or more) than mine.&lt;/p&gt;
&lt;p&gt;After all this, if we had to define in a short sentence what an Engineer means, I think I&amp;rsquo;d say that &lt;em&gt;An Engineer is the person who learns about the past, evaluates the present and uses those data to foresee the future&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Any comment will be welcome; even more if they contain your answers.&lt;/p&gt;
&lt;p&gt;Greetings for everyone.&lt;/p&gt;
&lt;p&gt;And thank you ;)&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Gashlycode Tinies</title>
      <link>https://magmax.org/en/blog/gashlycode-tinies/</link>
      <pubDate>Sat, 01 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/en/blog/gashlycode-tinies/</guid>
      <description>
        
          &lt;p&gt;I&amp;rsquo;m following the &lt;a href=&#34;https://www.coursera.org/course/softwaresec&#34;&gt;Software Security&lt;/a&gt; course at &lt;a href=&#34;https://www.coursera.org&#34;&gt;Coursera&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this course, they explain how an adversary can take advantage of code defects and how to defend from them. I&amp;rsquo;ve looking for some like this for long time.&lt;/p&gt;
&lt;p&gt;At the end of one of the videos there is a kind of poetry I liked. But I didn&amp;rsquo;t found it in Internet. So I&amp;rsquo;ve copied it here. It gathers all kind of code defects we should avoid because an adversary can try to use them.&lt;/p&gt;
&lt;p&gt;So here you are: &amp;ldquo;Gashlycode Tinies&amp;rdquo; by &lt;a href=&#34;https://www.cs.cornell.edu/andru/&#34;&gt;Andrew Myers&lt;/a&gt;, inspired by the &amp;ldquo;&lt;a href=&#34;https://en.wikipedia.org/wiki/The_Gashlycrumb_Tinies&#34;&gt;Gashlycrumb Tinies&lt;/a&gt;&amp;rdquo; (1963) by &lt;a href=&#34;https://en.wikipedia.org/wiki/Edward_Gorey&#34;&gt;Edward Gorey&lt;/a&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/poetry.jpg&#34;
         alt=&#34;GashlyCode tinies&#34;/&gt; 
&lt;/figure&gt;

&lt;h2 id=&#34;gashlycode-tinies&#34;&gt;Gashlycode Tinies&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;A&lt;/strong&gt; is for Amy whose &lt;strong&gt;malloc was one byte short&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;B&lt;/strong&gt; is for Basil who &lt;strong&gt;used a quadratic sort&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;C&lt;/strong&gt; is for Chick who &lt;strong&gt;checked floats for equality&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;D&lt;/strong&gt; is for Desmond who &lt;strong&gt;double-freed memory&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;E&lt;/strong&gt; is for Ed whose &lt;strong&gt;exceptions weren&amp;rsquo;t handled&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;F&lt;/strong&gt; is for Franny whose &lt;strong&gt;stack pointers dangled&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;G&lt;/strong&gt; is for Glenda whose &lt;strong&gt;reads and writes raced&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;H&lt;/strong&gt; is for Hans who &lt;strong&gt;forgot the base case&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;I&lt;/strong&gt; is for Ivan who &lt;strong&gt;did not initialize&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;J&lt;/strong&gt; is for Jenny who &lt;strong&gt;did not know Least Surprise&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;K&lt;/strong&gt; is for Kate whose &lt;strong&gt;inheritance depth&lt;/strong&gt; might shock&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;L&lt;/strong&gt; is for Larry who &lt;strong&gt;never released a lock&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;M&lt;/strong&gt; is for Meg who used &lt;strong&gt;negatives as unsigned&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;N&lt;/strong&gt; is for Ned with &lt;strong&gt;behavior left undefined&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;O&lt;/strong&gt; is for Olive whose index was &lt;strong&gt;off by one&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;P&lt;/strong&gt; is for Pat who ignored &lt;strong&gt;buffer overrun&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Q&lt;/strong&gt; is for Quentin whose &lt;strong&gt;numbers had overflows&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;R&lt;/strong&gt; is for Rhoda whose code left the &lt;strong&gt;rep exposed&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;S&lt;/strong&gt; is for Sam who &lt;strong&gt;skipped retesting after wait()&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;T&lt;/strong&gt; is for Tom who &lt;strong&gt;lacked TCP_NODELAY&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;U&lt;/strong&gt; is for Una whose &lt;strong&gt;functions were most verbose&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;V&lt;/strong&gt; is for Vic who &lt;strong&gt;substracted when floats were close&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;W&lt;/strong&gt; is for Winnie who &lt;strong&gt;aliased arguments&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;X&lt;/strong&gt; is for Xerxes who &lt;strong&gt;thought type casts made good sense&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Y&lt;/strong&gt; is for Yorick whose &lt;strong&gt;interface was too wide&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Z&lt;/strong&gt; is for Zack whose &lt;strong&gt;code nulls where often spied&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;some-words&#34;&gt;Some words&lt;/h2&gt;
&lt;p&gt;There are a couple of them I do not catch :D So do not surprise if you ask me and I cannot answer you.&lt;/p&gt;
&lt;p&gt;Finally, just say that I really recommend that course.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Why Python rocks</title>
      <link>https://magmax.org/en/blog/why-python-rocks/</link>
      <pubDate>Fri, 22 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/en/blog/why-python-rocks/</guid>
      <description>
        
          &lt;p&gt;After writting the article &lt;a href=&#34;https://magmax.org/en/blog/why-java-rocks/&#34;&gt;Why Java rocks&lt;/a&gt;, I have no other option than writting why Python rocks.&lt;/p&gt;
&lt;p&gt;Before starting, I might advise you that Python is my favourite language. And this is like search your best friends defects.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/python.png&#34;
         alt=&#34;Python&#34;/&gt; 
&lt;/figure&gt;

&lt;h2 id=&#34;python-rocks&#34;&gt;Python Rocks&lt;/h2&gt;
&lt;h3 id=&#34;dynamic-typing&#34;&gt;Dynamic typing&lt;/h3&gt;
&lt;p&gt;Opposite to people&amp;rsquo;s opinion, Python is strongly typed. But it is dynamically typed also. You cannot modify the type of a variable, but you can reuse the same variable to point to&amp;hellip; another thing.&lt;/p&gt;
&lt;h3 id=&#34;dynamic-inheritance&#34;&gt;Dynamic inheritance&lt;/h3&gt;
&lt;p&gt;In addition, it follows the &lt;strong&gt;duck typing&lt;/strong&gt; principle: &amp;ldquo;If it looks like a duck, swims like a duck, and quacks like a duck, then it probably is a duck&amp;rdquo;. This simplifies the inheritance management, because it is not necessary to inherit from anything. If only it has the required methods implemented, then it matches the interface. That&amp;rsquo;s all.&lt;/p&gt;
&lt;h3 id=&#34;objects-are-first-class-citizens&#34;&gt;Objects are first class citizens&lt;/h3&gt;
&lt;p&gt;What means that any object can be used as a parameter of any method.&lt;/p&gt;
&lt;h3 id=&#34;everything-is-an-object&#34;&gt;Everything is an object&lt;/h3&gt;
&lt;p&gt;Whatever: basic types, a method, a class&amp;hellip; Everything is an object. If you mix this with the previous feature, everything can be used as a parameter of a function. Or can be stored in a variable, an array, a hash, &amp;hellip;&lt;/p&gt;
&lt;h3 id=&#34;hashes-and-arrays-are-built-ins&#34;&gt;Hashes and arrays are built-ins&lt;/h3&gt;
&lt;p&gt;You can instanciate a hash or an array directly, without any reserved words or difficult API structures.&lt;/p&gt;
&lt;h3 id=&#34;wide-api&#34;&gt;Wide API&lt;/h3&gt;
&lt;p&gt;Standard Python has everything you can need, since command line managers to web servers, passing over threads management, configuration files management, XML readers, other language parsers, TK graphical interfaces,&amp;hellip; whatever you want.&lt;/p&gt;
&lt;h3 id=&#34;command-line-interpreter&#34;&gt;Command line interpreter&lt;/h3&gt;
&lt;p&gt;The command line interpreter is a marvel. Even more if you use any interpreter &lt;strong&gt;with steroids&lt;/strong&gt;, like &lt;a href=&#34;https://ipython.org/&#34;&gt;ipython&lt;/a&gt; or &lt;a href=&#34;https://bpython-interpreter.org/&#34;&gt;bpython&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;zip-support-built-in&#34;&gt;Zip support built-in&lt;/h3&gt;
&lt;p&gt;Zip support is native. You can store anything in a zip and try to execute it with python, and it will look for the file &lt;strong&gt;&lt;strong&gt;main&lt;/strong&gt;.py&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&#34;structured&#34;&gt;Structured&lt;/h3&gt;
&lt;p&gt;As far as it is strongly indented, document indentation should be perfectly readable.&lt;/p&gt;
&lt;h3 id=&#34;expected-and-homogeneous&#34;&gt;Expected and homogeneous&lt;/h3&gt;
&lt;p&gt;When you are a newbie in the language and you learn the basic functionality, whatever you want to do you &lt;em&gt;know how&lt;/em&gt;. This is because it is homogeneous, and everything is executed in the most expected way.&lt;/p&gt;
&lt;p&gt;Usually there is only a right way to do things. If you try another way, it would be more hard (until you realize of it).&lt;/p&gt;
&lt;h3 id=&#34;web-oriented&#34;&gt;Web oriented&lt;/h3&gt;
&lt;p&gt;From its base. And there are a load of platforms to develop for the web.&lt;/p&gt;
&lt;h3 id=&#34;properties&#34;&gt;Properties&lt;/h3&gt;
&lt;p&gt;Forgive getters/setters. That is not &lt;em&gt;pythonic&lt;/em&gt;. In python we use public vars. If you want to modify its usage afterwards, it is enough to upgrade them to &lt;strong&gt;properties&lt;/strong&gt;, but its external usage will be the same.&lt;/p&gt;
&lt;h3 id=&#34;public&#34;&gt;Public&lt;/h3&gt;
&lt;p&gt;Everything is public. The only private things are by convention, so they are accesible too.&lt;/p&gt;
&lt;h3 id=&#34;small&#34;&gt;Small&lt;/h3&gt;
&lt;p&gt;Whatever you want to do is small. Since the own compiler and interpreter that requires about 20 Mb. Everything is easy with Python.&lt;/p&gt;
&lt;h3 id=&#34;fast&#34;&gt;Fast&lt;/h3&gt;
&lt;p&gt;Speedy. So in its execution as in its development.&lt;/p&gt;
&lt;h2 id=&#34;python-do-not-rocks&#34;&gt;Python do not rocks&lt;/h2&gt;
&lt;h3 id=&#34;global-interpreter-lock-gil&#34;&gt;Global Interpreter Lock (GIL)&lt;/h3&gt;
&lt;p&gt;It is a &lt;em&gt;mutex&lt;/em&gt; that avoids that several Python threads may be executed simultaneously. This can cause horrible performance problems and, what is more, it cannot take advantage of all system resources: multiprocess systems are strongly limited.&lt;/p&gt;
&lt;h3 id=&#34;network-library&#34;&gt;Network library&lt;/h3&gt;
&lt;p&gt;Standard Python has a network library too complex and few &lt;em&gt;pythonic&lt;/em&gt; in its API. Fortunatelly, we have &lt;a href=&#34;https://www.gevent.org/&#34;&gt;GEvent library&lt;/a&gt; and &lt;a href=&#34;https://docs.python-requests.org/en/latest/index.html&#34;&gt;requests library&lt;/a&gt;, that solve the proble, but they are out of standard API.&lt;/p&gt;
&lt;h3 id=&#34;package-systems&#34;&gt;Package systems&lt;/h3&gt;
&lt;p&gt;Despite all Python advantages, the package system is depresing: &lt;a href=&#34;https://packages.python.org/distribute/easy_install.html&#34;&gt;easy_install&lt;/a&gt; is not so &amp;ldquo;&lt;em&gt;easy&lt;/em&gt;&amp;rdquo;, and there are problems to retrieve a fixed version of a package. There are &lt;a href=&#34;https://farmdev.com/thoughts/76/the-python-packaging-problem/&#34;&gt;some more problems&lt;/a&gt;, but I think that it is enough with what I said.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: now we have &lt;a href=&#34;https://pypi.python.org/pypi/pip&#34;&gt;pip&lt;/a&gt; that seems to be easy to use and looks like the standard package management system.&lt;/p&gt;
&lt;h3 id=&#34;the-hateful-self-var&#34;&gt;The hateful &lt;em&gt;self&lt;/em&gt; var&lt;/h3&gt;
&lt;p&gt;Usually it is hateful to explicitly pass the &lt;em&gt;self&lt;/em&gt; variable as first parameter for every method. But this feature allows you to use several oparations that are uglier in other languages or, they cannot be used at all.&lt;/p&gt;
&lt;h3 id=&#34;indented&#34;&gt;Indented!&lt;/h3&gt;
&lt;p&gt;A lot of people finds the strongly type as a problems. It is a mixed bag for me. Globally I like it, but I have to admit that it is a disadvantage some times.&lt;/p&gt;
&lt;h3 id=&#34;there-is-no-ide&#34;&gt;There is no IDE&lt;/h3&gt;
&lt;p&gt;It is quite difficult to build an IDE for a language which can modify its methods in run time. But there are some of them good enough. Despite of them, I use my lovely Emacs.&lt;/p&gt;
&lt;h3 id=&#34;good-for-scripts-but-nothing-more&#34;&gt;Good for scripts but nothing more&lt;/h3&gt;
&lt;p&gt;Somple people argue that, but I do not think so. I think that BitBucket is made with Python, and Google uses it too.&lt;/p&gt;
&lt;h3 id=&#34;method-overload&#34;&gt;Method overload&lt;/h3&gt;
&lt;p&gt;Along it is not typed, it is impossible to manage method overload. But it has an easy default valuated system for parameters that is versatile enouth.&lt;/p&gt;
&lt;h2 id=&#34;end&#34;&gt;End&lt;/h2&gt;
&lt;p&gt;There are a lot of reasons to use Python and very few to not doing it. It is so beautiful!&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Why Java Rocks</title>
      <link>https://magmax.org/en/blog/why-java-rocks/</link>
      <pubDate>Sat, 26 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/en/blog/why-java-rocks/</guid>
      <description>
        
          &lt;p&gt;Some days ago I browsed a Kinisoftware slideshow and he said that &amp;ldquo;Java rules&amp;rdquo;. He couldn&amp;rsquo;t explain why Java rules at the end, so I decided to do it in his place.&lt;/p&gt;
&lt;p&gt;But at the end I will explain why &lt;em&gt;Java &lt;em&gt;does not&lt;/em&gt; rule&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I hope that Kinisoftware can read this and criticate it with all his soul. Kini: This is for you!&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/java.png&#34;
         alt=&#34;Java&#34;/&gt; 
&lt;/figure&gt;

&lt;h2 id=&#34;java-does-rule&#34;&gt;Java does rule&lt;/h2&gt;
&lt;h3 id=&#34;static-typing&#34;&gt;Static typing&lt;/h3&gt;
&lt;p&gt;The first thing you realize about Java is its static typing. This kind of typing has some advantages: it is more dificult to break anything and it can be used as documentation.&lt;/p&gt;
&lt;p&gt;And Static Typing allows some things like:&lt;/p&gt;
&lt;h3 id=&#34;method-overloading&#34;&gt;Method overloading&lt;/h3&gt;
&lt;p&gt;Two functions with different parameters can be distinguised by their arguments, because of the type or the number of them. So, every call will be processed by the method that exactly matches with the calling arguments.&lt;/p&gt;
&lt;p&gt;Using different parameters to select the method to be used avoids loads of unnecessary conditions and it is easier to follow the Single Responsability Principle (RSP): each method works only with one data type and other method with another type.&lt;/p&gt;
&lt;h3 id=&#34;polimorfism&#34;&gt;Polimorfism&lt;/h3&gt;
&lt;p&gt;We can overwrite a method in a child class, so it can behave in a different way than its parent.&lt;/p&gt;
&lt;h3 id=&#34;compiled&#34;&gt;Compiled&lt;/h3&gt;
&lt;p&gt;During the compilation stage, it performs some checks that are not necessary to be performed while the program is running, like argument validation. This should mean a faster and more reliable code.&lt;/p&gt;
&lt;h3 id=&#34;binary-and-packed&#34;&gt;Binary and packed&lt;/h3&gt;
&lt;p&gt;Compiled code is binary (bytecode), what makes easier to distribute the program. In addition, it can be packed in JARs or WARs, to make its distribution even easier.&lt;/p&gt;
&lt;p&gt;These tools make the code organization easier too.&lt;/p&gt;
&lt;h3 id=&#34;ides&#34;&gt;IDEs&lt;/h3&gt;
&lt;p&gt;You can find high quality IDEs. In fact, static typing allows the IDEs to be right with their proposals.&lt;/p&gt;
&lt;h3 id=&#34;checkers&#34;&gt;Checkers&lt;/h3&gt;
&lt;p&gt;There are a load of programs that allows different kind of analysis.&lt;/p&gt;
&lt;h3 id=&#34;libraries&#34;&gt;Libraries&lt;/h3&gt;
&lt;p&gt;Java&amp;rsquo;s standard library is wide, but there are a lot of libraries that allows you to make it even bigger, like Apache Commons.&lt;/p&gt;
&lt;h3 id=&#34;web-oriented&#34;&gt;Web oriented&lt;/h3&gt;
&lt;p&gt;There are lots of &lt;em&gt;frameworks&lt;/em&gt; to write web programs: struts, spring, JSF,&amp;hellip;&lt;/p&gt;
&lt;h3 id=&#34;documentation&#34;&gt;Documentation&lt;/h3&gt;
&lt;p&gt;Documentation uses to be quite good, and it can be embedded inside the IDE itself.&lt;/p&gt;
&lt;h3 id=&#34;speed&#34;&gt;Speed&lt;/h3&gt;
&lt;p&gt;Opposite to what it has been said about Java, it is fast. Very fast. The main problem usually is the JVM load.&lt;/p&gt;
&lt;p&gt;Version 1.4 was horrible, but using it to compare with other options is like comparing it working in a 386.&lt;/p&gt;
&lt;h3 id=&#34;sublanguages&#34;&gt;Sublanguages&lt;/h3&gt;
&lt;p&gt;It is very easy to add other interpreted languages to our Java programs. In fact, Java has an API to allow this.&lt;/p&gt;
&lt;p&gt;Because of this, there are loads of interpreters: IronPython, Groovy, Clojure,&amp;hellip; Standard Java already contains a JavaScript interpreter (Rinho).&lt;/p&gt;
&lt;h3 id=&#34;memory-management&#34;&gt;Memory management&lt;/h3&gt;
&lt;p&gt;Java performs an efficient memory management, with cycle detections and every optimization you can imaginate.&lt;/p&gt;
&lt;h2 id=&#34;java-does-not-rule&#34;&gt;Java does not rule&lt;/h2&gt;
&lt;h3 id=&#34;static-typing-1&#34;&gt;Static typing&lt;/h3&gt;
&lt;p&gt;Static typing makes more difficult to build generic things. You cannot make a generic method without creating a class for each data type, and a common interface for the whole thing.&lt;/p&gt;
&lt;p&gt;In addition, only one public class is allowed in each file, what means you need at east 4 files (the main one, the interface and a couple of specializations).&lt;/p&gt;
&lt;h3 id=&#34;methods-overload&#34;&gt;Methods overload&lt;/h3&gt;
&lt;p&gt;Despite you can overload methods, it fails from time to time, because you can use an object that matches different prototypes. Example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;method&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;String s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{}&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;method&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Integer i&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{}&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;caller&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5&lt;/span&gt;   Object o &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Integer&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;5&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6&lt;/span&gt;   method&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;o&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// The compiler will not know which method should be called.
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;operator-overload&#34;&gt;Operator overload&lt;/h3&gt;
&lt;p&gt;Java do not support operator overload. This is a pity, because it is easier to understand an operator than a method call:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;a &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; b
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;equals&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;a &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; b
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;b&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;interpreter&#34;&gt;Interpreter&lt;/h3&gt;
&lt;p&gt;-It has no interpreter shell- The interpreter shell available, &lt;a href=&#34;https://beanshell.org/&#34;&gt;beanshell&lt;/a&gt;, is not a standard Java component. It would be quite useful to make proof of concepts or little programs.&lt;/p&gt;
&lt;h3 id=&#34;initial-complexity&#34;&gt;Initial complexity&lt;/h3&gt;
&lt;p&gt;The minimal program is very complex: it requires a public class, a static and public method, with a fixed structure and a fixed name, that manages an static array. This is one of the reasons because Java is criticated as a language to learn to write programs.&lt;/p&gt;
&lt;h3 id=&#34;ides-1&#34;&gt;IDEs&lt;/h3&gt;
&lt;p&gt;It is very easy to fall in the IDEs trap and use its high capabilites for everything. So, we forget that we are importing too many classes or making a mess of architecture.&lt;/p&gt;
&lt;h3 id=&#34;distribution&#34;&gt;Distribution&lt;/h3&gt;
&lt;p&gt;Code distribution can be our worst enemy, because it is very easy to create cyclic dependencies that programs like Maven cannot solve.&lt;/p&gt;
&lt;h3 id=&#34;compilation&#34;&gt;Compilation&lt;/h3&gt;
&lt;p&gt;Compilation is a slow process and it does not apply code optimizations. This is something I do not understand, because I thought it was one of the better advantages.&lt;/p&gt;
&lt;p&gt;It is true that there are other programs that allows you to optimize the &lt;em&gt;bytecode&lt;/em&gt;, but I do not understand why the Java compiler is too slow to perform a &amp;ldquo;simple&amp;rdquo; code translation.&lt;/p&gt;
&lt;h3 id=&#34;memory&#34;&gt;Memory&lt;/h3&gt;
&lt;p&gt;Despite Java performs a lot of checks, you cannot negate that Java programs require a lot of requirements.&lt;/p&gt;
&lt;h3 id=&#34;hosting&#34;&gt;Hosting&lt;/h3&gt;
&lt;p&gt;Java Hosting requires a complete virtual machine, what makes its price over 60€.&lt;/p&gt;
&lt;p&gt;In pay per use systems, Java may be expensive.&lt;/p&gt;
&lt;h3 id=&#34;easy&#34;&gt;Easy&lt;/h3&gt;
&lt;p&gt;Almost everything is XML based. XML is easy for the machine, but requires too much resources to be processed and is not so easy for human beings.&lt;/p&gt;
&lt;p&gt;In addition, the only fact of opening a file is too complex. Last Java versions added the &lt;em&gt;FileReader&lt;/em&gt; type, that makes this task easier, but there are a lot of APIs that still require an &lt;em&gt;Stream&lt;/em&gt;, making the &lt;em&gt;FileReader&lt;/em&gt; type not useful and forcing you to use the older way.&lt;/p&gt;
&lt;p&gt;Another issue are dates: it is a pain to work with them.&lt;/p&gt;
&lt;p&gt;And getters/setters: how long should we fight with them? I do not understand why I have to complicate a class when it can be easier.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Some examples of widely spread Java utilities that use XML&lt;/em&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;&lt;a href=&#34;https://struts.apache.org/2.3.4/docs/home.html&#34;&gt;Struts&lt;/a&gt;&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&amp;ldquo;&lt;a href=&#34;https://maven.apache.org/guides/getting-started/maven-in-five-minutes.html&#34;&gt;Maven&lt;/a&gt;&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&amp;ldquo;&lt;a href=&#34;https://ant.apache.org/ivy/history/latest-milestone/tutorial.html&#34;&gt;Ivy&lt;/a&gt;&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&amp;ldquo;&lt;a href=&#34;https://ant.apache.org/manual/index.html&#34;&gt;Ant&lt;/a&gt;&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&amp;ldquo;&lt;a href=&#34;https://tomcat.apache.org/&#34;&gt;TomCat&lt;/a&gt;&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;deprecated&#34;&gt;Deprecated&lt;/h3&gt;
&lt;p&gt;There are a load of deprecated classes in the API, e.g. when we work with dates. Even more: there are a lot of modern machines that allows to run Java code, but they only allow old versions, like 1.4 or 1.5.&lt;/p&gt;
&lt;h3 id=&#34;incompetence&#34;&gt;Incompetence&lt;/h3&gt;
&lt;p&gt;Despite there are huge professionals in Java world, it seems that everything is so easy that incompetence is encouraged. Maybe this is the mean reason why big corporations prefer Java to other languages.&lt;/p&gt;
&lt;p&gt;Java allows a very appropiate use, applying patterns, reusing, etc. But big corporations prefer to have monkeys typing code and it seems that Java is the right thing to do that.&lt;/p&gt;
&lt;p&gt;Please, if you use Java, don&amp;rsquo;t be a monkey.&lt;/p&gt;
&lt;h3 id=&#34;files&#34;&gt;Files&lt;/h3&gt;
&lt;p&gt;It is terrible to see how the amount of files is increased when we work with Java. Usually it is dificult to follow so many files without an IDE.&lt;/p&gt;
&lt;p&gt;It is very easy to find developers trying to overload one class functionality only to try to avoid another new file. For sure: object orientation can only be understood when you apply the Single Responsability Principle.&lt;/p&gt;
&lt;h2 id=&#34;the-end&#34;&gt;The End&lt;/h2&gt;
&lt;p&gt;There are loads of reasons to use and to not use Java. I only tried to put them together here. I&amp;rsquo;m sure I&amp;rsquo;m forgetting a lot of them.&lt;/p&gt;
&lt;p&gt;If you have any new, please, tell me. Do not worry if you are backbiting yourself: it is always good to know your tools scope.&lt;/p&gt;
&lt;p&gt;And it is exactly why the next article will be &amp;ldquo;Why Python Rocks&amp;rdquo;.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Constructors as simple as you can</title>
      <link>https://magmax.org/en/blog/constructores-simples/</link>
      <pubDate>Mon, 12 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/en/blog/constructores-simples/</guid>
      <description>
        
          &lt;p&gt;This week I realized about the difference between an ugly constructor and a pretty one. It is curious how easy doing it well is and how cheap it is, so I am going to share my point with you, waiting your comments.&lt;/p&gt;
&lt;p&gt;Since I began to work, I have done lots of ugly things, so do not face me up if you find something mine done in a different way :D The real goal is to improve yourself day after day!&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/patterns.png&#34;
         alt=&#34;Patterns&#34;/&gt; 
&lt;/figure&gt;

&lt;h3 id=&#34;throwing-exceptions&#34;&gt;Throwing exceptions&lt;/h3&gt;
&lt;p&gt;A constructor that throws exceptions is something really ugly. A constructor should prepare the object to be used, not to do its thing. And if it do not do any real job, it should not throw any exception.&lt;/p&gt;
&lt;p&gt;When I say that it do not launch exceptions it does not mean to capture them: I&amp;rsquo;m saying that it do not raise them because it do not need them. Every activity done by the constructor must be so simple that it cannot fail: initializations and nothing more. No operations. Complex things must be placed on methods.&lt;/p&gt;
&lt;p&gt;There is nothing uglier than a constructor that throws exceptions. It is the last thing you hope and it is the last thing you want other people to find.&lt;/p&gt;
&lt;p&gt;When the constructor has exceptions, this must be the least code to instantiate it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Example&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Example&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;throws&lt;/span&gt; exception &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// [...]
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;    Example example &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Example&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Exception e&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;null-pointer-exception&#34;&gt;Null pointer exception&lt;/h3&gt;
&lt;p&gt;If a constructor do no operation, it cannot access any invalid pointer. Constructors should only do assignments, and nothing more.&lt;/p&gt;
&lt;h3 id=&#34;constructors-with-parameters&#34;&gt;Constructors with parameters&lt;/h3&gt;
&lt;p&gt;From time to time, an object requires a parameter to work. In these cases, it is right to require it in the constructor.&lt;/p&gt;
&lt;p&gt;When the number of parameters is too high (that is, TWO), then we should look
another way to do it. If the constructor is requiring so many parameters, it is
possible that it be rapping the &lt;a href=&#34;https://en.wikipedia.org/wiki/Single_responsibility_principle&#34;&gt;Single Responsability Principle&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;Another of my old habits that I saw a lot is to have a constructor with N parameters, allowing to initializate each of its private attributes. Experience showed me that it is a very bad habit&amp;hellip; almost in all cases.&lt;/p&gt;
&lt;p&gt;Using Java, it is a bad habit from every point of view. Which one is the parameter order? If I have 3 parameters&amp;hellip; Have I to try the three unique parameter combinations, at least two with two arguments and anotherone with the three ones? And what if I need the fourth private attribute? How many combinations should I do?&lt;/p&gt;
&lt;p&gt;Using other languages, like Python, when arguments can be named, our code is not affected by previous assertion. Despite of that, we will have another problem: what if I do not need one of the arguments or if I need to change its name?&lt;/p&gt;
&lt;p&gt;For example&amp;hellip; With the next piece of code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Example&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; value1&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; value2&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; String juntaLaTrocola&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; String gamusino&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Example&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{}&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Example&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; value1&lt;span style=&#34;color:#f92672&#34;&gt;){}&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Example&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; b&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{}&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Example&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;String juntaLaTrocola&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{}&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Example&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;String gamusino&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; String &lt;span style=&#34;color:#a6e22e&#34;&gt;juntaLaTrocola&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{}&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I have lots of questions&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The third constructor, shoud I use first the &lt;em&gt;value1&lt;/em&gt; or &lt;em&gt;value2&lt;/em&gt;?&lt;/li&gt;
&lt;li&gt;Why is not possible to build an object only with &lt;em&gt;gamusino&lt;/em&gt;?&lt;/li&gt;
&lt;li&gt;Why cannot combine numbers and strings? Is it because the developer was tired (just like in this case)? Is it because I must not? Is it because they were added later?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In addition, if you inherit that class, you have to overwrite all of these methods!!!&lt;/p&gt;
&lt;p&gt;Examples? &lt;a href=&#34;https://docs.oracle.com/javase/6/docs/api/index.html&#34;&gt;JDialog&lt;/a&gt;  has 16 different constructors.&lt;/p&gt;
&lt;h3 id=&#34;tired-constructors&#34;&gt;Tired constructors&lt;/h3&gt;
&lt;p&gt;Some time ago I implemented a constructor that was parsing a whole XML file. It looked horrible, but I couldn&amp;rsquo;t find another way of doing it better. Anybody see any logic in this matter? Now I do not.&lt;/p&gt;
&lt;p&gt;When we have a constructor doing so many work, how can we improve our code? We cannot use the pattern &lt;em&gt;a method a class&lt;/em&gt;, because we will have a class with a constructor that will do, again, all the work. And if it does not, why have we two classes? We could use the second one instead the first class.&lt;/p&gt;
&lt;p&gt;It is not so difficult to find: Java API has methods that launches exceptions or make lots of work (&lt;em&gt;NOTE:&lt;/em&gt; searching some examples, I found no one launching esceptions, but I know I saw them; did I find them in third party code?):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;RMIConnectorServer&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;JMXServiceURL url&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; Map&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color:#f92672&#34;&gt;,?&amp;gt;&lt;/span&gt; environment&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; RMIServerImpl rmiServerImpl&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; MBeanServer mbeanServer&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;JDialog&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Window owner&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; String title&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; Dialog&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ModalityType&lt;/span&gt; modalityType&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; GraphicsConfiguration gc&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;the-solution-factories&#34;&gt;The solution: Factories&lt;/h2&gt;
&lt;p&gt;Some times I need two constructors because there are severan ways to use the object. For example: I have a class that is connected to a database and can be used in two different ways: with a real database or a memory one.&lt;/p&gt;
&lt;p&gt;Here I have a problem. One of the constructors will need an argument and the other one, none. It is not logical to use another system to build the object&amp;hellip; Maybe.&lt;/p&gt;
&lt;p&gt;After doing in this way again and again, I found a better way to do it: By using a method that makes the object. So, I can differ between one build steps and the others. That is: I will have the method &lt;em&gt;createInMemory&lt;/em&gt; and &lt;em&gt;createInfFile&lt;/em&gt;. Optionally I will be able to transform the constructor as private to avoid is incorrect use (but I do not like too much this approach).&lt;/p&gt;
&lt;p&gt;With so easy transformation, I get constructor that is not raising any exception and, in addition, I have a beautiful way to build the object with some instructions, being more verbose when I have to modify it.&lt;/p&gt;
&lt;p&gt;Another advantage: If I need to add more &amp;ldquo;constructors&amp;rdquo;, like a remote database, it will be enough to add more factories: &lt;em&gt;createRemote&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;An example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;DataAccess&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;DataAccess&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{}&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; DataAccess &lt;span style=&#34;color:#a6e22e&#34;&gt;createInMemory&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;throws&lt;/span&gt; SQLException&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;    DataAccess result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; DataAccess&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;    result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setConnectionString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;in memory&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;    result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;buildDatabase&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; result&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; DataAccess &lt;span style=&#34;color:#a6e22e&#34;&gt;createMySql&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;throws&lt;/span&gt; SQLException&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;    DataAccess result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; DataAccess&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;    result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setConnectionString&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mysql&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(!&lt;/span&gt;result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;hasDatabase&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;        result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;buildDatabase&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; result&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;abstract-factories&#34;&gt;Abstract factories&lt;/h3&gt;
&lt;p&gt;I think it is very important to write code that can grow, without any limit when
it is born. Using factories you can easily evolve it into an &lt;a href=&#34;https://es.wikipedia.org/wiki/Abstract_Factory_(patr%C3%B3n_de_dise%C3%B1o)&#34;&gt;Abstract Factory&lt;/a&gt;, giving it more functionality with baby changes.&lt;/p&gt;
&lt;h3 id=&#34;tests&#34;&gt;Tests&lt;/h3&gt;
&lt;p&gt;When a complex constructor is being used, you have lots of drawbacks to test it. But when the constructor is simple and the complexity is inside the operations, it is easier to test it, because you can build the object inside the &lt;em&gt;setUp&lt;/em&gt; method being sure that it is not going to fail. But when you use complex constructors, there are no way to test it.&lt;/p&gt;
&lt;p&gt;If any operation (method) raises an exception, the operation is telling you something. If it is the constructor the one that throws it, you cannot be sure about the operation that was been performed in that moment. This is what makes tests difficult and makes very hard to &lt;em&gt;mock&lt;/em&gt; the object.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;As our classes have to be complex, do not get the code dirty since the very begining and let&amp;rsquo;s try with simple constructos. When the constructor is the one who makes the job, which ones are the methods responsabilities? Let&amp;rsquo;s delegate that job.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Do not comment. Assert it!</title>
      <link>https://magmax.org/en/blog/asegura/</link>
      <pubDate>Sat, 11 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/en/blog/asegura/</guid>
      <description>
        
          &lt;p&gt;Today I have discovered lots of things about this great unknown &lt;em&gt;assert&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;It happens that I had a very strong debugging tool too close from myself and I hadn&amp;rsquo;t used it.&lt;/p&gt;
&lt;p&gt;Trying to fix this problem, I write this article, but I am not going to write
anything that is not already written at &lt;a href=&#34;https://download.oracle.com/javase/6/docs/technotes/guides/language/assert.html&#34;&gt;Java Assert Documentation&lt;/a&gt;  or &lt;a href=&#34;https://docs.python.org/release/2.5.2/ref/assert.html&#34;&gt;Python
Documentation&lt;/a&gt;.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/test.jpg&#34;
         alt=&#34;Test&#34;/&gt; 
&lt;/figure&gt;

&lt;h2 id=&#34;the-more-basic&#34;&gt;The more basic&lt;/h2&gt;
&lt;p&gt;First step is to know how to use it. You can use it in two ways: with one or two parameters. The second one will be a text to be shown with the exception when the first one do not match.&lt;/p&gt;
&lt;p&gt;Using python:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;assert&lt;/span&gt; expression
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;assert&lt;/span&gt; expression1, expression2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And using Java:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;assert&lt;/span&gt; expression;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;assert&lt;/span&gt; expression1 : expression2;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It is important to highlight that, if &lt;code&gt;expression1&lt;/code&gt; is not evaluated as true, second one will not be executed. usually, this second expression must return a string.&lt;/p&gt;
&lt;h2 id=&#34;do-not-use-assert&#34;&gt;Do not use Assert!!&lt;/h2&gt;
&lt;p&gt;You are not going to use a pneumatic hammer to tighten a screw, so you cannot
use &lt;code&gt;assert&lt;/code&gt; everywhere.&lt;/p&gt;
&lt;p&gt;You must not use it in next cases:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Public Methods&lt;/em&gt;: This is an aesthetic point, because it would be horrible to find an &amp;ldquo;Assertion Error&amp;rdquo;. It is better to find a &amp;ldquo;Some error happened&amp;rdquo;, so it is better to use a comparation and an exception. In addition, you can &lt;em&gt;disable&lt;/em&gt; asserts, so you can break off checking the public method input.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;To do useful stuff&lt;/em&gt; inside a method, because asserts can be disabled and it would break off doing that job.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;use-assert&#34;&gt;Use Assert!!&lt;/h2&gt;
&lt;p&gt;Usually, we tend to write comments like &amp;ldquo;Everything OK&amp;rdquo;, &amp;ldquo;It must not get here&amp;rdquo;, etc. This kind of comments is a problem because they can become lies and, in the other hand, nobody is checking them.&lt;/p&gt;
&lt;p&gt;In addition, you need too much letters to say the same (comment compared with the equivalent &lt;em&gt;assert&lt;/em&gt;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# value must be greater than five&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;assert&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// value must be greater thatn five
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;assert&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; 5&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When you have a switch, it is very common to forgive the default case, because you are not going to arrive that place. Maybe. What happens if anybody writes another option? We can be sure to manage them:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;switch&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;var&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; value1&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; do_stuff_1&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; value2&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; do_stuff_2&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; valueN&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; do_stuff_N&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8&lt;/span&gt;   default: &lt;span style=&#34;color:#66d9ef&#34;&gt;assert&lt;/span&gt; False&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;You must not be here!&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;preconditions-and-postconditions&#34;&gt;Preconditions and Postconditions&lt;/h2&gt;
&lt;p&gt;One of my favourite uses is to check inputs and outputs. For example, we have a function that returns the factorial of a given number, and it must be sure that input is bigger than 1 (and not negative). If it is not a public method:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;factorial&lt;/span&gt; (n):
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;assert&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Invalid value:&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; n;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; factorial (n&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can assure we didn&amp;rsquo;t leave an invalid value:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; List &lt;span style=&#34;color:#a6e22e&#34;&gt;method&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;  ArrayList result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// Do lots of stuff, with ifs, method calls, etc.
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;assert&lt;/span&gt; result &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Not initialized value&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; result&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With Java, you can have some &lt;em&gt;synchronized&lt;/em&gt; and &lt;em&gt;no synchronized&lt;/em&gt; methods calling between them. It may be the root of every &lt;em&gt;deathlock&lt;/em&gt;, that are very difficult to detect, because they are waiting for themselves to leave the lock. It is like to search your glasses with your glasses put on.&lt;/p&gt;
&lt;p&gt;This case is really easy to detect with an &lt;code&gt;assert&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;synchronized&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;synchronized_method&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;  not_syncronized_method&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;synchronized&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;not_synchronized_method&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;assert&lt;/span&gt; Thread&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;holdsLock&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// do some stuff
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;disabling&#34;&gt;Disabling&lt;/h2&gt;
&lt;p&gt;In the last term, this assertions can be deactivated when you have a production enviroment, so it does not mind if you do &amp;ldquo;expensive&amp;rdquo; stuff. When you disable them, it is like they are not written.&lt;/p&gt;
&lt;p&gt;Python &lt;em&gt;ENABLEs&lt;/em&gt; them by default. You need to use &lt;code&gt;-O&lt;/code&gt; option to disable them:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;$ cat assert.py
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;assert False, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Asserts enabled&amp;#34;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;$ python assert.py
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;Traceback &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;most recent call last&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;:
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5&lt;/span&gt;  File &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;assert.py&amp;#34;&lt;/span&gt;, line 1, in
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6&lt;/span&gt;    assert False, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Asserts enabled&amp;#34;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7&lt;/span&gt;AssertionError: Asserts enabled
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8&lt;/span&gt;$ python -O assert.py
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;9&lt;/span&gt;$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Java &lt;em&gt;DISABLEs&lt;/em&gt; them by default, so you can activate them by module, method,
etc. The easiest way is using &lt;code&gt;-ea&lt;/code&gt; option to enable every assertion.&lt;/p&gt;
&lt;p&gt;Use them lovely!!&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>XML vs JSON (en)</title>
      <link>https://magmax.org/en/blog/xml-vs-json/</link>
      <pubDate>Thu, 02 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/en/blog/xml-vs-json/</guid>
      <description>
        
          &lt;p&gt;Lately I am seeing lots of comparatives between JSON and XML. I do not want to be less than them, so I investigated a little to enter in this kind of comparatives.&lt;/p&gt;
&lt;p&gt;Sadly, I realized that they are not comparable. To compare XML with JSON is just like compare an OpenOffice document with a text file. They are completely different things.&lt;/p&gt;
&lt;p&gt;A JSON file is a set of grouped data. Nothing more. It allows a hierarchical structure, but you only have objects, vectors, vars and values.&lt;/p&gt;
&lt;p&gt;An XML file is lots of things more. It is a set of structured data. It can be queried (xpath), checks (DTD, XML Schema), viaualization (CSS), process (XSL), etc.&lt;/p&gt;
&lt;p&gt;But lots of people continue on comparing them. Let&amp;rsquo;s see their arguments:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Updated 2012/02/03:&lt;/em&gt; Applying some changes, thanks to Manuel Rivero. Thank you very much!&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/xml.png&#34;
         alt=&#34;XML&#34;/&gt; 
&lt;/figure&gt;

&lt;h2 id=&#34;size&#34;&gt;Size&lt;/h2&gt;
&lt;p&gt;It is very common to say that JSON is smaller than XML, so it is better to share data in networks.&lt;/p&gt;
&lt;p&gt;I calculated it, and a JSON file is, more or less, 3/4 of an XML file (comparing &amp;ldquo;equivalent&amp;rdquo; files, because you can find lots of examples of JSON files that have not the same hierarchy that its &amp;ldquo;equal&amp;rdquo; in XML), so it seems they are right.&lt;/p&gt;
&lt;p&gt;Despite of this, if you want to save space, it is better to use a binary format or a comprised JSON/XML. As far as they are text files, it is possible that both of them will be comprised a lot, giving to you very similar sizes.&lt;/p&gt;
&lt;p&gt;In addition, XML can have inner references and entities, so you can use macros; with JSON you cannot. What is more, XML supports outter files references -which can be already in the target host, and they do not need to be sent again-, so it can be quicklier to send, in theory.&lt;/p&gt;
&lt;p&gt;Another thing to say is that a JSON file always must be coded as little endian UTF-16, because it was thought only to use with javascript/java, but XML can be coded in every system. This way, depending on the content, XML can be much smaller than JSON.&lt;/p&gt;
&lt;h2 id=&#34;speed&#34;&gt;Speed&lt;/h2&gt;
&lt;p&gt;Lots of sites say that JSON, being smaller than XML, is quicklier to be processed.&lt;/p&gt;
&lt;p&gt;That is not true. JSON, as far as has less characteristics than XML, must be quicklier to be processed.&lt;/p&gt;
&lt;p&gt;But it is not possible to use Firefox as a tester (I saw it), because the process speed depends on the library you use.&lt;/p&gt;
&lt;p&gt;The problem in this comparation is that it is very dangerous and is not reliable because, as I said before, we are comparing things that are not comparable. How much does the JSON structure check cost? How much is the price of re-write, again and again, this checker? With XML it is very easy, because you have only to say which XML Schema to use and our library will do the work.&lt;/p&gt;
&lt;h2 id=&#34;variety&#34;&gt;Variety&lt;/h2&gt;
&lt;p&gt;Like everything in live, XML was built with a goal and JSON was built with another one totally different. XML is a way to structure data, while JSON is a way to share data between a language that should be easy (javascript) and another language (java).&lt;/p&gt;
&lt;p&gt;Despite of this, like we found lots of usages for XML with time, like SOAP, it is possible that JSON has lots of usages.&lt;/p&gt;
&lt;h2 id=&#34;personal-opinion&#34;&gt;Personal Opinion&lt;/h2&gt;
&lt;p&gt;My advise is that both of them are valid, but it depends on why you are going to use them. As long as you do not use an OpenOffice file or a TXT file for everything, it is trivial to think that you must not use XML or JSON for everything.&lt;/p&gt;
&lt;p&gt;By the way, everything that you can do with JSON can be done with XML, but not in the other way. Nobody must ignore that XML has metadata (attributes) while that does not exists in JSON. This characteristic can be simulated with JSON by using data, but it is much pretty to use XML attributes.&lt;/p&gt;
&lt;p&gt;Finally, I think that JSON is a good choice to very little data structures -they can have lots of data, but structure is small-, while XML can hold structures much more complex.&lt;/p&gt;
&lt;p&gt;And I think that everything tries to get complex, so a little data structure tries to grow, and to change a JSON to XML can be less funny we want&amp;hellip;&lt;/p&gt;
&lt;p&gt;So, I like XML. This only means that I will try to use XML, but it is perfectly reasonable that, sometimes, I find JSON to fit better.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Python: Assignments with default values</title>
      <link>https://magmax.org/en/blog/python-asignaciones/</link>
      <pubDate>Thu, 26 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/en/blog/python-asignaciones/</guid>
      <description>
        
          &lt;p&gt;Some time ago, Manolowar showed me the operator [&amp;ldquo;Elvis]  from &lt;a href=&#34;https://groovy.codehaus.org/&#34;&gt;Groovy&lt;/a&gt; .&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/python.png&#34;
         alt=&#34;Python&#34;/&gt; 
&lt;/figure&gt;

&lt;p&gt;This operator, written like: &lt;code&gt;?:&lt;/code&gt; is called in this way because it looks like an emoticon with toupee, just like Elvis Presley. It can be used like in C or Java (separated) or all together. When it is all together, it means something like: &amp;ldquo;If value is false, assign me it, and if not, assign me this other one&amp;rdquo;. Here you are an example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;Integer i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;?:&lt;/span&gt; 0&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here we want to assign value of &amp;ldquo;I&amp;rdquo; to &amp;ldquo;A&amp;rdquo;. This is a problem, because &amp;ldquo;I&amp;rdquo; admits nulls but &amp;ldquo;A&amp;rdquo; does not. With this easy way I solved the problem.&lt;/p&gt;
&lt;p&gt;But&amp;hellip; Isn&amp;rsquo;t this article about &lt;em&gt;Python&lt;/em&gt;?&lt;/p&gt;
&lt;p&gt;Yes, it does. Yesteray David told me about the way of doing just this with &lt;em&gt;Python&lt;/em&gt; and, IMHO, it is more pretty. You only have to use the &amp;ldquo;&lt;em&gt;OR&lt;/em&gt;&amp;rdquo; operator.&lt;/p&gt;
&lt;p&gt;Opposite I was thinking till now, &amp;ldquo;OR&amp;rdquo; in Python does not return a boolean value; it evals the expression and returns the first result that is not false. So, we can find:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; None
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And &amp;ldquo;A&amp;rdquo; will be 7, because &amp;ldquo;I&amp;rdquo; is false and the last evaluated value that is not false is 7.&lt;/p&gt;
&lt;p&gt;The advantage of using this is that it can be concatenated. Example (do not at home):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; [] &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; {} &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; False &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Everything else is false&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Which one is the resulting value in this case?&lt;/p&gt;
&lt;p&gt;As you can see, every condition is false but the last one, so the final A value will be &amp;ldquo;Everything else is false&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Use it carefully!!!&lt;/p&gt;
&lt;h2 id=&#34;notes&#34;&gt;Notes&lt;/h2&gt;
&lt;p&gt;I have been very careful trying to say that it searchs the first &lt;a href=&#34;https://docs.python.org/release/2.5.2/lib/truth.html&#34;&gt;that is not false&amp;rdquo;. This do not mean &amp;ldquo;the first that is true&amp;rdquo;, because &amp;ldquo;truth&amp;rdquo; is True. It is the very first that do not match &amp;ldquo;a false condition&lt;/a&gt; .&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Django: Building a basic site with Admin</title>
      <link>https://magmax.org/en/blog/django-sitio-basico/</link>
      <pubDate>Fri, 20 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/en/blog/django-sitio-basico/</guid>
      <description>
        
          &lt;p&gt;Moving my site I realized that I have&amp;rsquo;t wrote any post about Django. I was sure enough to have been done it. So I must solve this problem XD&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/django.jpg&#34;
         alt=&#34;Django&#34;/&gt; 
&lt;/figure&gt;

&lt;h2 id=&#34;what-is-that&#34;&gt;What is that?&lt;/h2&gt;
&lt;p&gt;Django is a framework to build web applications. It is centered on the backend,
offering you templates to use in the frontend, but it is possible that you need
another additional framework for this layer, just like &lt;a href=&#34;https://jquery.com/&#34;&gt;JQuery&lt;/a&gt; , &lt;a href=&#34;https://dojotoolkit.org/&#34;&gt;Dojo&lt;/a&gt; ,
&lt;a href=&#34;https://mootools.net/&#34;&gt;Mootools&lt;/a&gt; , &lt;a href=&#34;https://www.prototypejs.org/&#34;&gt;Prototype&lt;/a&gt; , etc.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;We can install it by using &lt;a href=&#34;https://pypi.python.org/pypi/setuptools&#34;&gt;easyinstall&lt;/a&gt; , althought it has already a &lt;a href=&#34;https://www.debian.org/&#34;&gt;Debian&lt;/a&gt;
package. You can &lt;a href=&#34;https://magmax.org/blog/virtualenv/&#34;&gt;isolate the Django installation&lt;/a&gt;, in order to clone it easily.&lt;/p&gt;
&lt;h2 id=&#34;creation&#34;&gt;Creation&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s see how to build a little CMS. It is going to contain posts and nothing more. With this goal, the first step will be telling to Django about creating the site:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;$ django-admin startproject myblog
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;$ cd myblog
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;$ python manage.py startapp blog
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;$ tree
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;.
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;|-- blog
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;|   |-- __init__.py
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;|   |-- models.py
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;|   |-- tests.py
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;|   &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;-- views.py
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;|-- __init__.py
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;|-- manage.py
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;|-- settings.py
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;-- urls.py
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; directory, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; files
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17&lt;/span&gt;$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Before continuing on, let&amp;rsquo;s configure our database, modifying &lt;code&gt;settings.py&lt;/code&gt; file, where we must write the database to use. By the way, we will update the installed applications to use &amp;ldquo;admin&amp;rdquo; and our new module.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;DATABASES &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;default&amp;#39;&lt;/span&gt;: {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ENGINE&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;django.db.backends.sqlite3&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NAME&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;database.db&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;USER&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;PASSWORD&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;HOST&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;PORT&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;    }
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;TEMPLATE_DIRS &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/absolute_path/&amp;#39;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;)
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;INSTALLED_APPS &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;django.contrib.auth&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;django.contrib.contenttypes&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;django.contrib.sessions&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;django.contrib.sites&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;django.contrib.messages&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;django.contrib.staticfiles&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;django.contrib.admin&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;blog&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Leave everything else untouched.&lt;/p&gt;
&lt;p&gt;Now we can run the server, but it is going to do very few things:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;$ python manage.py syncdb
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;Creating tables ...
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;Creating table auth_permission
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;Creating table auth_group_permissions
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;Creating table auth_group
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;Creating table auth_user_user_permissions
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;Creating table auth_user_groups
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;Creating table auth_user
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;Creating table auth_message
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;Creating table django_content_type
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;Creating table django_session
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;Creating table django_site
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;You just installed Django&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s auth system, which means you don&amp;#39;&lt;/span&gt;t have any superusers defined.
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;Would you like to create one now? &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;yes/no&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: yes
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;Username &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Leave blank to use &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;miguel&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: admin
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17&lt;/span&gt;E-mail address: admin@example.com
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18&lt;/span&gt;Password:
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19&lt;/span&gt;Password &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;again&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;:
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20&lt;/span&gt;Superuser created successfully.
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21&lt;/span&gt;Installing custom SQL ...
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22&lt;/span&gt;Installing indexes ...
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23&lt;/span&gt;No fixtures found.
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24&lt;/span&gt;$ python manage.py runserver
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25&lt;/span&gt;Validating models...
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; errors found
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28&lt;/span&gt;Django version 1.3, using settings &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;myblog.settings&amp;#39;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29&lt;/span&gt;Development server is running at https://127.0.0.1:8000/
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30&lt;/span&gt;Quit the server with CONTROL-C.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And we can open the site, that can be found at &lt;a href=&#34;https://127.0.0.1:8000&#34;&gt;https://127.0.0.1:8000&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;the-model&#34;&gt;The model&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s edit the model (&lt;code&gt;blog/models.py&lt;/code&gt;), and write a very basic model:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; django.db &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; models
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Post&lt;/span&gt;(models&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Model):
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;    title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; models&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;CharField(max_length&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;)
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5&lt;/span&gt;    body &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; models&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;TextField()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;As you can see, we will have a title and a body. It is not necessary anything else right now.&lt;/p&gt;
&lt;h2 id=&#34;urls&#34;&gt;URLs&lt;/h2&gt;
&lt;p&gt;Now we are going to update the file &lt;code&gt;urls.py&lt;/code&gt;. This file is going to be used to
allow django to decide what to do with each URL that is requested. That is the
reason it works with regular expressions, allowing it to identify which service
or HTML must process for each case. We need to uncomment django-admin lines
(&lt;code&gt;urls.py&lt;/code&gt; file):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; django.conf.urls.defaults &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; patterns, include, url
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; django.contrib &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; admin
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;admin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;autodiscover()
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5&lt;/span&gt;urlpatterns &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; patterns(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6&lt;/span&gt;    url(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;^admin/&amp;#39;&lt;/span&gt;, include(admin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;site&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;urls)),
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7&lt;/span&gt;    url(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;^blog/&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;myblog.blog.views.list&amp;#39;&lt;/span&gt;),
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;administration&#34;&gt;Administration&lt;/h2&gt;
&lt;p&gt;We are going to configure the administration tool, to allow us to edit our
entries. We are going to use the file &lt;code&gt;blog/admin.py&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; myblog.blog.models &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Post
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; django.contrib &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; admin
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;admin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;site&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;register(Post)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;the-view&#34;&gt;The View&lt;/h2&gt;
&lt;p&gt;In the URLs file we can write that, when the URL &lt;code&gt;blog/&lt;/code&gt; is found, we will see
&lt;code&gt;blog.views.list&lt;/code&gt;. It is not defined yet, and we will do it in file
&amp;lsquo;&lt;code&gt;admin/views.py&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; django.shortcuts &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; render_to_response
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; blog.models &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Post
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(request):
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; render_to_response(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;blog/list.html&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6&lt;/span&gt;                              {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;post_list&amp;#39;&lt;/span&gt;: Post&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;objects&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;all()})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With this step we have just made a dependency: &lt;code&gt;blog/list.html&lt;/code&gt;. In this case,
we will need to build a template. Templates are something away from our project,
and they are isolated of it. When you build a Django site, modules are installed
in a place, each of them installed as isolated as it can be possible from
others. If it is possible, they must have no dependency with the others (if it
is possible, I said). It will be templates which give our project the
homogeneity and join all the &lt;em&gt;site&lt;/em&gt;. We wrote a path for &lt;em&gt;TEMPLATE_DIRS&lt;/em&gt; in
the &amp;lsquo;settings.py&amp;rsquo; file. You must create the file &lt;code&gt;blog/list.html&lt;/code&gt; there:&lt;/p&gt;
&lt;p&gt;We are using the variable &lt;code&gt;post_list&lt;/code&gt; in our template, looping on it and rendering it how we want.&lt;/p&gt;
&lt;h2 id=&#34;how-to-use-it&#34;&gt;How to use it&lt;/h2&gt;
&lt;p&gt;Everything is done!! Hmmm&amp;hellip; And what&amp;rsquo;s next?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Lista de Posts&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;Lista de Posts&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;{% if post_list %}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;   &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;ul&lt;/span&gt;&amp;gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;     {% for post in post_list %}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;     &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;{{ post.title }}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;     {% endfor %}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;   &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;ul&lt;/span&gt;&amp;gt;{% else %}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;   &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;No blogs found.&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;{% endif %}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Well, we are going to use it. First of all, let&amp;rsquo;s assure our database is updated and let&amp;rsquo;s run the server:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;$ python manage.py syncdb
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;Creating tables ...
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;Installing custom SQL ...
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;Installing indexes ...
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;No fixtures found.
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;$ python manage.py runserver
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;Validating models...
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; errors found
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;Django version 1.3, using settings &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;myblog.settings&amp;#39;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;Development server is running at https://127.0.0.1:8000/
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;Quit the server with CONTROL-C.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now everything is working. We can open the URL that the message was saying to
us: &lt;a href=&#34;https://127.0.0.1:8000&#34;&gt;https://127.0.0.1:8000&lt;/a&gt; , what carries us to a wonderful &amp;ldquo;page not found&amp;rdquo; &lt;em&gt;error&lt;/em&gt;. As far as we have debugging option enabled, we can read what happened: The requested URL does not match any defined patterns.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s try the admin interface: &lt;a href=&#34;https://127.0.0.1:8000/admin&#34;&gt;https://127.0.0.1:8000/admin&lt;/a&gt; . It will ask us the password (that we choose when we did first &amp;ldquo;syncdb&amp;rdquo;) and we enter as administrators. We should see three blocks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Auth&lt;/li&gt;
&lt;li&gt;Blog&lt;/li&gt;
&lt;li&gt;Sites&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you can see them it is because you did everything right. Create a couple of posts in the &amp;ldquo;Blog&amp;rdquo; module. It is not difficult enough.&lt;/p&gt;
&lt;p&gt;All these stuff related to the admin interface has been created automatically by using &amp;ldquo;django-admin&amp;rdquo; module.&lt;/p&gt;
&lt;p&gt;Do you have 2-3 posts? All right. Let&amp;rsquo;s see the view:
&lt;a href=&#34;https://127.0.0.1:8000/blog&#34;&gt;https://127.0.0.1:8000/blog&lt;/a&gt; . There is nothing to say here but we must be seeing our blog :D&lt;/p&gt;
&lt;h2 id=&#34;more-information&#34;&gt;More information&lt;/h2&gt;
&lt;p&gt;As you can imagine, &lt;a href=&#34;https://docs.djangoproject.com/en/1.3/intro/tutorial01/&#34;&gt;the wonderful django tutorial&lt;/a&gt;  :D.&lt;/p&gt;
&lt;h2 id=&#34;goodbyes&#34;&gt;Goodbyes&lt;/h2&gt;
&lt;p&gt;If I see this issues are interesting, maybe some day I will continue with this little manual. There are a lot of things to be done now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To paginate entries if there are a lot&lt;/li&gt;
&lt;li&gt;To create a CRUD interface to avoid to edit posts from admin interface&lt;/li&gt;
&lt;li&gt;To give some color to the site.&lt;/li&gt;
&lt;li&gt;Add tags to our posts.&lt;/li&gt;
&lt;li&gt;Sort them by publishing date.&lt;/li&gt;
&lt;li&gt;Manage users&lt;/li&gt;
&lt;li&gt;Add some tests&lt;/li&gt;
&lt;li&gt;[Think whatever you want and write it here]&lt;/li&gt;
&lt;/ul&gt;

        
      </description>
    </item>
    
    <item>
      <title>Kohana module</title>
      <link>https://magmax.org/en/blog/kohana-module/</link>
      <pubDate>Fri, 13 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/en/blog/kohana-module/</guid>
      <description>
        
          &lt;p&gt;I have just build my first Kohana module. It is a mess right now, but it is only a try that become to something. It is possible that I must to rewrite it completely.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://bitbucket.org/magmax/kohana-defaultsite&#34;&gt;You can get the code to test it&lt;/a&gt; , but it can be changed quickly and it can be not behind compatible.&lt;/p&gt;
&lt;p&gt;This module allows to generate dinamically views for our model and controller.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/php.png&#34;
         alt=&#34;PHP&#34;/&gt; 
&lt;/figure&gt;

&lt;p&gt;Steps to use it are next ones:&lt;/p&gt;
&lt;p&gt;Make the &amp;ldquo;modules/defaultsite&amp;rdquo; folder and download there my module.&lt;/p&gt;
&lt;p&gt;Edit the file bootstrap.php, keyword &amp;ldquo;kohana::modules&amp;rdquo;, and add the line: &amp;lsquo;defaultsite&amp;rsquo; =&amp;gt; MODPATH.&amp;lsquo;defaultsite&amp;rsquo;&lt;/p&gt;
&lt;p&gt;Now the fun begins: we are going to make our site.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create your database.&lt;/li&gt;
&lt;li&gt;Create your model. It is just like ever.&lt;/li&gt;
&lt;li&gt;Create your controller: just the same as ever with Kohana, but inheriting from Controller_Default. Writing the constructor is enough.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That&amp;rsquo;s all. You can access your site.&lt;/p&gt;
&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;
&lt;h3 id=&#34;bbdd&#34;&gt;BBDD&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;IF&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;EXISTS&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;kohana&amp;#39;&lt;/span&gt;.&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;example1&amp;#39;&lt;/span&gt; (
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt; INT(&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; AUTO_INCREMENT,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;text&amp;#39;&lt;/span&gt; VARCHAR(&lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DEFAULT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; ,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;number&amp;#39;&lt;/span&gt; INT(&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DEFAULT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; ,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;file&amp;#39;&lt;/span&gt; BLOB &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DEFAULT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; ,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt; DATE &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DEFAULT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; ,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;boolean&amp;#39;&lt;/span&gt; TINYINT(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DEFAULT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; ,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;example2_id&amp;#39;&lt;/span&gt; INT(&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; ,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;) ,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;INDEX&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fk_example1_example21&amp;#39;&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;example2_id&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ASC&lt;/span&gt;) ,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;CONSTRAINT&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fk_example1_example21&amp;#39;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;FOREIGN&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;example2_id&amp;#39;&lt;/span&gt; )
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;REFERENCES&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;kohana&amp;#39;&lt;/span&gt;.&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;example2&amp;#39;&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt; )
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DELETE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NO&lt;/span&gt; ACTION
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;UPDATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NO&lt;/span&gt; ACTION)
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;ENGINE &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; InnoDB
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DEFAULT&lt;/span&gt; CHARACTER &lt;span style=&#34;color:#66d9ef&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; utf8
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;COLLATE&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; utf8_swedish_ci;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;IF&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;EXISTS&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;kohana&amp;#39;&lt;/span&gt;.&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;example2&amp;#39;&lt;/span&gt; (
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt; INT(&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; AUTO_INCREMENT,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;title&amp;#39;&lt;/span&gt; VARCHAR(&lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DEFAULT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; ,
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;) )
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24&lt;/span&gt;ENGINE &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; InnoDB
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DEFAULT&lt;/span&gt; CHARACTER &lt;span style=&#34;color:#66d9ef&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; utf8;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;modelexample2php&#34;&gt;model/example2.php&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;php&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;defined&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SYSPATH&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;die&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;No Direct Script Access&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Model_Example2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ORM&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;{
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; $_table_name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;example2&amp;#39;&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; __toString ()
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;title&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt; }
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;controllerexample2php&#34;&gt;controller/example2.php&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;php&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;defined&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SYSPATH&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;die&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;No Direct Script Access&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Controller_Example2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Controller_Default&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;{
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; __construct(&lt;span style=&#34;color:#a6e22e&#34;&gt;Kohana_Request&lt;/span&gt; $request)
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;parent&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;__construct&lt;/span&gt;($request, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;example2&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8&lt;/span&gt; }
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;9&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;explaining&#34;&gt;Explaining&lt;/h2&gt;
&lt;p&gt;In this point, you can admin &amp;ldquo;type 2&amp;rdquo; elements.&lt;/p&gt;
&lt;p&gt;In my host, I have to access &lt;code&gt;/index.php/example2&lt;/code&gt; to admin it. As you can see, pages are very simple, but completely functional.&lt;/p&gt;
&lt;p&gt;Index is dinamically generated and it allows you to delete, update or create new items.&lt;/p&gt;
&lt;p&gt;You can change columns, but I&amp;rsquo;m going to skip that because it is only a scaffold.&lt;/p&gt;
&lt;p&gt;If you want to see the other table functionality, it is necessary to add some values.&lt;/p&gt;
&lt;h3 id=&#34;modelexample1php&#34;&gt;model/example1.php&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;php&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;defined&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SYSPATH&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;die&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;No Direct Script Access&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Model_Example1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ORM&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;{
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; $_table_name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;example1&amp;#39;&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; $_belongs_to &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;array&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;example1&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;array&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;model&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;example2&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;foreign_key&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;example2_id&amp;#39;&lt;/span&gt;));
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;9&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;controllerexample1php&#34;&gt;controller/example1.php&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;php&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;defined&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SYSPATH&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;die&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;No Direct Script Access&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Controller_Example1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Controller_Default&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;{
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; __construct(&lt;span style=&#34;color:#a6e22e&#34;&gt;Kohana_Request&lt;/span&gt; $request)
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;parent&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;__construct&lt;/span&gt;($request, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;example1&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8&lt;/span&gt; }
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;9&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;explaining-1&#34;&gt;Explaining&lt;/h3&gt;
&lt;p&gt;If we add some &amp;ldquo;tipo Example1&amp;rdquo; items, we will see that the different types of buttons are sensitive to the selected type: texts are &lt;em&gt;textarea&lt;/em&gt;, dates use jquery to show a calendar, &lt;em&gt;BLOB&lt;/em&gt; show an input file filed (ouch, it is a scaffold yet) and foreign keys are shown like a combobox with all its items.&lt;/p&gt;
&lt;h2 id=&#34;final&#34;&gt;Final&lt;/h2&gt;
&lt;p&gt;Nowadays it is only a scaffold, because I have been 2 weeks with Kohana and my PHP knowledge is too poor. Help is needed!!&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Code Retreat Global Day: Retrospective</title>
      <link>https://magmax.org/en/blog/coderetreat-global-day/</link>
      <pubDate>Sun, 04 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/en/blog/coderetreat-global-day/</guid>
      <description>
        
          &lt;p&gt;Yesterday was the day.&lt;/p&gt;
&lt;p&gt;I had been waiting for it for a long time. Lots of people join together all
around the world to improve their skills as Developers.&lt;/p&gt;
&lt;p&gt;I had the chance of attending the Madrid meeting. It was carried on by Enrique
Comba. There I found a lot of people that I met first time in another Code
Retreat, a year ago. I met new people too.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/gdcr.png&#34;
         alt=&#34;Global Day of Code Retreat&#34;/&gt; 
&lt;/figure&gt;

&lt;p&gt;My first thought was that I must not to be there. I already have been practising
the &amp;lsquo;kata&amp;rsquo; and I already knew the result. But some time later, realize that the
solution doesn&amp;rsquo;t matter. It is the people who matters. It is more important to
speak with them, to think with them. It doesn&amp;rsquo;t matters if you get the answer.
The real important thing is that you met another people, and each of them allows
you to see the same problem from another perspective.&lt;/p&gt;
&lt;p&gt;I learnt a lot. I realize I was trying to solve the problem by my own, without
my mate. In another team, we didn&amp;rsquo;t write a lot of code, but we could think
about the mistery of life. In another one, the same happened, but about the
abstraction of the problem.&lt;/p&gt;
&lt;p&gt;It was a very short day, and it was a very important opportunity to meet some
people who does mind about our job, about computer programming.&lt;/p&gt;
&lt;p&gt;And I feel lucky for having been there.&lt;/p&gt;
&lt;p&gt;Thank you all, organization teams, mates, friends. Thank you for your comments
or your thoughts, for your your words.&lt;/p&gt;
&lt;p&gt;See you soon.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Netbeans and Templates</title>
      <link>https://magmax.org/en/blog/netbeans-and-templates/</link>
      <pubDate>Mon, 13 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/en/blog/netbeans-and-templates/</guid>
      <description>
        
          &lt;p&gt;We are going to see how to use Netbeans templates, trying to stablish the license in spite of current header. It will be done in two easy steps.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/java.png&#34;
         alt=&#34;Java&#34;/&gt; 
&lt;/figure&gt;

&lt;h2 id=&#34;first-steps&#34;&gt;First steps.&lt;/h2&gt;
&lt;p&gt;The first thing to do is to add the license we want. We open the menu: &amp;ldquo;Tool-&amp;gt;Templates&amp;rdquo;, opening the Template Manager. Only to see how is it, we can open the file &amp;ldquo;Java-&amp;gt;Java Class&amp;rdquo;. If it has not been edited, it is something like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt;assign licenseFirst &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/*&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt;assign licensePrefix &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; * &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt;assign licenseLast &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; */&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt;include &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;../Licenses/license-${project.license}.txt&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; package&lt;span style=&#34;color:#f92672&#34;&gt;??&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!= &amp;#34;&amp;#34;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;${&lt;/span&gt;package&lt;span style=&#34;color:#f92672&#34;&gt;};&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; *
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; * @author ${user}
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; */&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;name&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is the way to express what is going to be written in the file &lt;code&gt;../Licenses/license-${project.license}.txt&lt;/code&gt; as a comment in the header of our files.&lt;/p&gt;
&lt;p&gt;But&amp;hellip; Where is that file?&lt;/p&gt;
&lt;h2 id=&#34;set-the-license-of-our-proyect&#34;&gt;Set the license of our proyect&lt;/h2&gt;
&lt;p&gt;This file depends on our project. As all things that depends on our proyect, it will be in the proyect properties. It&amp;rsquo;s a pity, but I haven&amp;rsquo;t found any fast way to find the file, so we can open the file view and open the file &lt;code&gt;nbproject/project.properties&lt;/code&gt; or we can open it with any other editor different from Netbeans.&lt;/p&gt;
&lt;p&gt;You will see it is an INI file, and adding the next line is enought:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;project.license=gpl3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can add any string you like, things like &amp;ldquo;gpl3&amp;rdquo;, &amp;ldquo;apache&amp;rdquo;, &amp;ldquo;my_enterprise&amp;rdquo; (I recommend you not using spaces) etc. But remember the string you type here because we will use it.&lt;/p&gt;
&lt;h2 id=&#34;create-the-license-file&#34;&gt;Create the license file.&lt;/h2&gt;
&lt;p&gt;The license file is another template, so we come back to templates: &lt;code&gt;../Licenses/license-${project.license}.txt&lt;/code&gt;, and create the file &lt;code&gt;license-${project.license}.txt&lt;/code&gt; inside the folder &lt;em&gt;Licenses&lt;/em&gt;. Remember that Netbeans will substitute &lt;code&gt;${project.license}&lt;/code&gt; by the value we wrote in the previous point.&lt;/p&gt;
&lt;h2 id=&#34;final&#34;&gt;Final&lt;/h2&gt;
&lt;p&gt;So it seems a difficult way, it has some advantages. We can create the templates we use usually: GPL, Apache, our enterprise, etc. And when they are created, we indicate which one to use in each proyect. So simple. By the way we will have modified a lot of templates at the same time (that is the reason to not editing the template) and we will find that every new file has the license.&lt;/p&gt;
&lt;p&gt;Of course, we can use variables in the license file that are stablished in the file &lt;code&gt;nbproject/project.properties&lt;/code&gt; or the environment ones, such as &lt;code&gt;${user}&lt;/code&gt;, that will be substituted by the user name who is editing the file or &lt;code&gt;${name}&lt;/code&gt; with the name of the file without its extension, or any other variable on our proyect.&lt;/p&gt;
&lt;p&gt;Good luck!&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Doing things</title>
      <link>https://magmax.org/en/blog/hacer-cosas/</link>
      <pubDate>Sun, 12 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/en/blog/hacer-cosas/</guid>
      <description>
        
          &lt;p&gt;I hate listenig things like &amp;ldquo;Madrid is much better than my town, because they organize a lot of things&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;This is a complete conceptual error. The problem is not that few things were organized in your town; the problem is that you are not organizing them.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/poetry.jpg&#34;/&gt; 
&lt;/figure&gt;

&lt;p&gt;It is too easy complaining about other people who does nothing, but the first step is to focus on the things you do.&lt;/p&gt;
&lt;p&gt;It is so easy to complain about the difficulty of it, but it is difficult for other people too.&lt;/p&gt;
&lt;p&gt;Another excuse is to say that there is no interested people, but you didn&amp;rsquo;t try to check if it is true or not.&lt;/p&gt;
&lt;p&gt;There is an error to think that the first step is to join a lot of people and to begin doing things. This is a beautiful way to find another person to delegate the work. You must to be more proactive.&lt;/p&gt;
&lt;p&gt;The real correct way of doing things is to do them with good mood. If you have an idea, take it into practice. If it works, you will be successfull; if it doesn&amp;rsquo;t, you will be able to look after and be proud to have make the try. If somebody likes it, he will follow you. If somebody see decission and good mood, he will have them too.&lt;/p&gt;
&lt;p&gt;We must organize more activities there where there are no one !!&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>EasyTag: a graphical interface to managing your music files&#39; tags</title>
      <link>https://magmax.org/en/blog/easytag/</link>
      <pubDate>Wed, 23 Jun 2010 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/en/blog/easytag/</guid>
      <description>
        
          &lt;p&gt;Please, if you have not done it, read the &lt;a href=&#34;https://magmax.org/en/blog/debaday/&#34;&gt;Debaday article&lt;/a&gt;. Thank you.&lt;/p&gt;
&lt;p&gt;This article of debaday site, by &lt;a href=&#34;https://www.villageidiotsavant.com/&#34;&gt;Dominique Cimafranca&lt;/a&gt;, were posted at &lt;a href=&#34;https://debaday.debian.net/2008/09/14/mythtv-a-personal-tv-recorder/&#34;&gt;https://debaday.debian.net/2008/09/14/mythtv-a-personal-tv-recorder/&lt;/a&gt; on 25/08/2008.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/debian.png&#34;
         alt=&#34;Debaday&#34;/&gt; 
&lt;/figure&gt;

&lt;p&gt;&lt;a href=&#34;https://easytag.sourceforge.net/&#34;&gt;EasyTag&lt;/a&gt; is a graphical utility to edit the descriptive &lt;a href=&#34;https://en.wikipedia.org/wiki/ID3&#34;&gt;ID3
tags&lt;/a&gt; for your music files. One will think primarily of MP3 files, but it also
does other formats, such as Ogg, FLAC, MP4/AAC, MusePack, Monkey&amp;rsquo;s Audio files
and WavPack files (APE tag).&lt;/p&gt;
&lt;p&gt;EasyTag&amp;rsquo;s screen real estate is divided into three windows. The left window shows you the directories of your file system. The middle window shows you the music files in your currently selected directory. The right window is further subdivided into top and bottom information boxes: the top shows you the technical information about the file (bit rate, frequency, mode, size, and time), and the bottom shows you the actual ID3 fields.&lt;/p&gt;
&lt;p&gt;The ID3 fields are pretty complete as they let you fill in all the relevant info you could want to put in, e.g., title, artist, album, year, genre, personal comments. You can also attach a photo to the file.&lt;/p&gt;
&lt;p&gt;Once you start up EasyTag, it will search your home directory for any and all music format files. This behavior is either helpful or annoying; if it&amp;rsquo;s the latter, you can simply stop the search and go to the directory of your choice. It will resume the search from there.&lt;/p&gt;
&lt;h3 id=&#34;tagging-files&#34;&gt;Tagging files&lt;/h3&gt;
&lt;p&gt;There are three ways to tag music files with EasyTag:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Manually.&lt;/li&gt;
&lt;li&gt;Automatically with the “Fill Tag” scanner.&lt;/li&gt;
&lt;li&gt;Automatically via CDDB, which is a database for software applications to look up audio CD information over the Internet.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Manual tagging is pretty much self-explanatory (and tedious.)&lt;/p&gt;
&lt;p&gt;Automatic Fill Tag relies on the filenames of your music files to automatically fill in the ID3 entries. EasyTag has a couple dozen formats that cover almost every imaginable case.&lt;/p&gt;
&lt;p&gt;Automatic CDDB tagging only works if files are sorted per album and if the actual CDDB entry exists. You don&amp;rsquo;t actually have to have the CD on hand: you can search for the album ID through EasyTag. Once found, it will label the files for you.&lt;/p&gt;
&lt;p&gt;All in all, a great way to manage and maintain information on your music files.&lt;/p&gt;
&lt;h3 id=&#34;availability&#34;&gt;Availability&lt;/h3&gt;
&lt;p&gt;EasyTag is available in &lt;a href=&#34;https://packages.debian.org/easytag&#34;&gt;Debian since at least Sarge&lt;/a&gt; and in &lt;a href=&#34;https://packages.ubuntu.com/easytag&#34;&gt;Ubuntu (universe)
since Dapper.&lt;/a&gt;&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Mythtv: A personal TV recorder</title>
      <link>https://magmax.org/en/blog/mythtv/</link>
      <pubDate>Sun, 06 Jun 2010 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/en/blog/mythtv/</guid>
      <description>
        
          &lt;p&gt;Please, if you have not done it, read the &lt;a href=&#34;https://magmax.org/en/blog/debaday/&#34;&gt;Debaday article&lt;/a&gt;. Thank you.&lt;/p&gt;
&lt;p&gt;This article of debaday site, by Karl Erlandson, were posted at &lt;a href=&#34;https://debaday.debian.net/2008/09/14/mythtv-a-personal-tv-recorder/&#34;&gt;https://debaday.debian.net/2008/09/14/mythtv-a-personal-tv-recorder/&lt;/a&gt; on 14/09/2008.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/debian.png&#34;
         alt=&#34;Debian&#34;/&gt; 
&lt;/figure&gt;

&lt;p&gt;No one likes to sit at home and wait for their favorite show to come on anymore and many have turned to buying hardware to record them for later viewing. Popular solutions to this problem include the expensive and proprietary TiVo and cable/satellite boxes with built-in TV recorders.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.mythtv.org/index.php&#34;&gt;MythTV&lt;/a&gt; aims to solve these problems without the need to rent a cable box ($15/month) or buy a TiVo (~$200). An older computer can be used and all that needs to be purchased is a simple TV card, which can be found for under $30 on eBay. An HDTV card will cost you more, and will also require a more recent computer. If your TV card doesn&amp;rsquo;t come with a remote control, a controller will have to be purchased separately.&lt;/p&gt;
&lt;p&gt;As of last year, the TV guide info used for MythTV in North America is no longer
free. Unfortunately, if you live in the USA or Canada, you now have to pay a
subscription fee if you want to access the TV guide info, but the cost is
negligible at $20/year and going down with every new subscriber. There is a free
trial period &lt;a href=&#34;https://www.schedulesdirect.com/&#34;&gt;available&lt;/a&gt;. If you live in
another country, you may find TV listings for your country in
&lt;a href=&#34;https://wiki.xmltv.org/index.php/Main_Page&#34;&gt;XMLTV&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;p&gt;What MythTV gives you that those other boxes don&amp;rsquo;t is freedom, it&amp;rsquo;s open source so you can do whatever you want with your machine. For example, you can set it to automatically skip commercials (a feature that surprisingly works!).&lt;/p&gt;
&lt;p&gt;MythTV can be divided into two main programs, the Backend and the Frontend. The Backend refers to the program that actually records programs and must be installed on a computer that has a TV tuner. The Frontend program allows you to view content from the Backend. Importantly, the Frontend program can be installed on the Backend or as a stand-alone program on any computer. With a Frontend only install, you can watch what you&amp;rsquo;ve recorded in any room of your house. They will also have the ability to watch live TV (with options to pause, rewind, fast forward).&lt;/p&gt;
&lt;p&gt;MythTV also offers many recording options with the ability to record a show
daily, weekly, once, only in a certain timeslot, etc. Since it is open source,
various improvements have been added. &lt;a href=&#34;https://www.gossamer-threads.com/lists/mythtv/users/217986&#34;&gt;An interesting
plugin&lt;/a&gt; was developed that overcomes the problem of recording sports when games go on longer than scheduled. This program actually checks the web to see if the game it is recording has gone into extra time and adjusts the recording time to end later.&lt;/p&gt;
&lt;p&gt;MythTV will organize your music and video libraries and allow all that downloaded content to be played on your home entertainment system. Album and DVD art can be automatically downloaded from IMDB. I have to say that the music system could use a lot of work.&lt;/p&gt;
&lt;p&gt;Other options include the ability to schedule your recordings over the internet, watch your shows over the internet, display weather alerts, and notify you of new emails on screen.&lt;/p&gt;
&lt;h2 id=&#34;availability&#34;&gt;Availability&lt;/h2&gt;
&lt;p&gt;MythTV is not available as a Debian package due to licensing/legal issues, but
it is on &lt;a href=&#34;https://www.debian-multimedia.org/&#34;&gt;debian-multimedia&lt;/a&gt;. To enable this
repository, add this to your /etc/apt/sources.list:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;deb https://www.debian-multimedia.org/ stable main
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;(instead of stable, put “testing” or “unstable” if you use that flavors of
Debian). Now run apt-get update. The MythTV wiki provides instructions to
install it in &lt;a href=&#34;https://www.mythtv.org/wiki/index.php/Installing_MythTV_on_Debian_Etch&#34;&gt;Debian stable
(Etch)&lt;/a&gt;,
&lt;a href=&#34;https://www.mythtv.org/wiki/index.php/Installing_MythTV_SVN_on_Debian_Sid&#34;&gt;Debian unstable
(Sid)&lt;/a&gt;
and &lt;a href=&#34;https://www.mythtv.org/wiki/index.php/Ubuntu_Installation_Guides&#34;&gt;Ubuntu&lt;/a&gt;.
The Ubuntu community has its own set of &lt;a href=&#34;https://help.ubuntu.com/community/MythTV&#34;&gt;installation
instructions&lt;/a&gt;. I found the
&lt;a href=&#34;https://www.knoppmythwiki.org/?id=HowTo&#34;&gt;KnoppMythWiki&lt;/a&gt; very useful in setting up
my machine. They also offer a MythTV distribution.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Remind: a text based agenda and todolist manager</title>
      <link>https://magmax.org/en/blog/remind/</link>
      <pubDate>Thu, 03 Jun 2010 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/en/blog/remind/</guid>
      <description>
        
          &lt;p&gt;Please, if you have not done it, read the &lt;a href=&#34;https://magmax.org/en/blog/debaday/&#34;&gt;Debaday article&lt;/a&gt;. Thank you.&lt;/p&gt;
&lt;p&gt;This article of debaday site, by Olivier Schwander, were posted at &lt;a href=&#34;https://debaday.debian.net/2008/11/16/remind-a-text-based-agenda-and-todolist-manager/&#34;&gt;https://debaday.debian.net/2008/11/16/remind-a-text-based-agenda-and-todolist-manager/&lt;/a&gt; on 16/11/2008.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/debian.png&#34;
         alt=&#34;Debian&#34;/&gt; 
&lt;/figure&gt;

&lt;p&gt;There are lots of different tools for managing your time: Mozilla has a standalone solution: &lt;a href=&#34;https://www.mozilla.org/projects/calendar/sunbird/&#34;&gt;Sunbird&lt;/a&gt; and another one based on Thunderbird: &lt;a href=&#34;https://www.mozilla.org/projects/calendar/lightning/&#34;&gt;Lighting&lt;/a&gt;, KDE has &lt;a href=&#34;https://kontact.kde.org/&#34;&gt;Korganizer&lt;/a&gt; and Gnome has the young &lt;a href=&#34;https://code.google.com/p/gnome-agenda/&#34;&gt;gnome-agenda&lt;/a&gt; and the very popular &lt;a href=&#34;https://projects.gnome.org/evolution/&#34;&gt;Evolution&lt;/a&gt;, and we must not forget the most famous web based tool: Google Calendar.&lt;/p&gt;
&lt;p&gt;All these applications are based on a graphical user interface, and use either &lt;a href=&#34;https://en.wikipedia.org/wiki/ICalendar&#34;&gt;iCalendar&lt;/a&gt; or the older &lt;a href=&#34;https://en.wikipedia.org/wiki/VCalendar#vCalendar_1.0&#34;&gt;vCalendar&lt;/a&gt; as the data formats.&lt;/p&gt;
&lt;p&gt;What about people who prefer console based interfaces and want to edit the data with their favourite text editors? The best solution is &lt;a href=&#34;https://www.roaringpenguin.com/products/remind&#34;&gt;remind&lt;/a&gt;: it uses an easy but powerful language for describing events. A simple example, this event happens every Tuesday at 13:00 and lasts one hour:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;REM Tue AT 13:00 DURATION 1:00 MSG Group meeting
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You always forget your appointments? Remind can help you:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;REM Tue +1 AT 13:00 +120 *5 DURATION 1:00 MSG Group meeting
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It will begin to bother you one day before the date, and will display warnings two hours before, every five minutes. The language is really powerful, and is able to express arbitrary complex date calculations (first Monday of a month, excluding holidays, moon phases). To look at the events of the day, simply run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;$ remind
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;Reminders for Thursday, 10th July, 2008 (today):
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;Write Debaday post today at 3:00pm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Remind can import and export iCalendar files, and generate HTML and Postscript from your calendar. You can choose to have reminders sent by email, or showed by a pop-up window but you&amp;rsquo;ll need to start remind with some special arguments for that, see the &lt;a href=&#34;https://wiki.43folders.com/index.php/Remind_FAQ#How_can_I_generate_popup_windows_to_warn_me_of_timed_reminders.3F&#34;&gt;Remind FAQ&lt;/a&gt; at the &lt;a href=&#34;https://wiki.43folders.com/index.php/Remind&#34;&gt;43folders wiki&lt;/a&gt; which has a lot of useful tips for remind.&lt;/p&gt;
&lt;p&gt;You can also use it through user-friendly interfaces: &lt;a href=&#34;https://packages.debian.org/tkremind&#34;&gt;tkremind&lt;/a&gt;, a Tk based
front-end, but it hides some of the power from remind; and
&lt;a href=&#34;https://packages.debian.org/wyrd&#34;&gt;wyrd&lt;/a&gt;, a curses based interface which eases
the editing of events and lets you use all of the power of remind.&lt;/p&gt;
&lt;h2 id=&#34;availability&#34;&gt;Availability&lt;/h2&gt;
&lt;p&gt;Remind has been available in &lt;a href=&#34;https://packages.debian.org/remind&#34;&gt;Debian since Sarge&lt;/a&gt; (perhaps even longer), and in &lt;a href=&#34;https://packages.ubuntu.com/remind&#34;&gt;Ubuntu since Dapper&lt;/a&gt;.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Tellico: collection manager for books, bideos, music, and a whole lot more</title>
      <link>https://magmax.org/en/blog/tellico/</link>
      <pubDate>Wed, 02 Jun 2010 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/en/blog/tellico/</guid>
      <description>
        
          &lt;p&gt;Please, if you have not done it, read the &lt;a href=&#34;https://magmax.org/en/blog/debaday/&#34;&gt;Debaday article&lt;/a&gt;. Thank you.&lt;/p&gt;
&lt;p&gt;This article of debaday site, by Dean Serenevy, were posted at &lt;a href=&#34;https://debaday.debian.net/2009/01/04/tellico-collection-manager-for-books-videos-music-and-a-whole-lot-more/&#34;&gt;https://debaday.debian.net/2009/01/04/tellico-collection-manager-for-books-videos-music-and-a-whole-lot-more/&lt;/a&gt; on 04/01/2009.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/debian.png&#34;
         alt=&#34;Debian&#34;/&gt; 
&lt;/figure&gt;

&lt;p&gt;You&amp;rsquo;ve heard of book and movie collection organizers, but Robby Stephenson&amp;rsquo;s
&lt;a href=&#34;https://www.periapsis.org/tellico/&#34;&gt;tellico&lt;/a&gt; is a general purpose collection manager. This application can be used
to store information about arbitrary collections of whatever tickles your
fancy. Tellico is available from the tellico package in &lt;a href=&#34;https://packages.debian.org/tellico&#34;&gt;Debian since
Sarge&lt;/a&gt; and in &lt;a href=&#34;https://packages.ubuntu.com/tellico&#34;&gt;Ubuntu since Dapper&lt;/a&gt;. Tellico is a KDE application, but
works fine in other desktop environments.&lt;/p&gt;
&lt;h2 id=&#34;the-basics&#34;&gt;The Basics&lt;/h2&gt;
&lt;p&gt;Like any good book or movie collection application, tellico presents the user with a multi-pane window that groups entries by some customizable criterion (I&amp;rsquo;ve grouped by director below), lists entries by some fields (customizable), and shows thumbnails.&lt;/p&gt;
&lt;p&gt;Selecting a list entry shows a more detailed view and a larger thumbnail. Clicking the image in this view launches your image editor.&lt;/p&gt;
&lt;p&gt;Most of the built-in collection types include search sources to make adding new entries easy. Tellico has default search sources for &lt;a href=&#34;https://www.amazon.com/&#34;&gt;Amazon.com&lt;/a&gt; (US, Japan, Germany, United Kingdom, France, and Canada), &lt;a href=&#34;https://www.imdb.com/&#34;&gt;IMDb&lt;/a&gt; (movie database), &lt;a href=&#34;https://www.loc.gov/z3950/&#34; title=&#34;bibliographic database&#34;&gt;z39.50 servers&lt;/a&gt; (bibliographic database), SRU servers (bibliographic database), &lt;a href=&#34;https://www.pubmed.gov/&#34;&gt;PubMed&lt;/a&gt; (Medicine bibliography), &lt;a href=&#34;https://www.crossref.org/&#34;&gt;CrossRef.org&lt;/a&gt; (bibliographic database developed by a consortium of publishers), and some others. You can also write your own script that performs the search and returns entries in a supported format.&lt;/p&gt;
&lt;p&gt;The search box will filter results based on regular expression queries. &lt;a href=&#34;https://www.periapsis.org/tellico/doc/filter-dialog.html&#34;&gt;Complex filters&lt;/a&gt; can be named and will be saved with the collection file.&lt;/p&gt;
&lt;h2 id=&#34;beyond-books-and-movies&#34;&gt;Beyond Books and Movies&lt;/h2&gt;
&lt;p&gt;Tellico&amp;rsquo;s built-in list of &lt;a href=&#34;https://www.periapsis.org/tellico/doc/collection-types.html&#34;&gt;collection templates&lt;/a&gt; is already quite impressive. It provides default templates for books, bibliographies, videos, music, video games, coins, stamps, trading cards, comic books, and wines. However, users are free to modify, add, or remove fields in these collections or even create custom collections with arbitrary fields.&lt;/p&gt;
&lt;p&gt;For example, I keep a collection of &lt;a href=&#34;https://en.wikipedia.org/wiki/Arrangement_of_hyperplanes&#34;&gt;hyperplane arrangement&lt;/a&gt; examples in a custom tellico file. Tellico happily keeps a fully group-able and search-able record of my coefficient fields, polynomials, and other fields.&lt;/p&gt;
&lt;p&gt;Editing a custom entry looks just like editing a standard record type. Fields are grouped by customizable categories.&lt;/p&gt;
&lt;p&gt;Modifying the collection fields is wonderfully simple. Your fields may be any of severall &lt;a href=&#34;https://www.periapsis.org/tellico/doc/details.html#field-types&#34;&gt;field types&lt;/a&gt; including: text, paragraph, choice, checkbox, table, URL, date, and image. &lt;a href=&#34;https://www.periapsis.org/tellico/doc/fields-dialog.html#field-properties&#34;&gt;import&lt;/a&gt; and &lt;a href=&#34;https://www.periapsis.org/tellico/doc/exporting.html&#34;&gt;export&lt;/a&gt; data to and from many sources (Bibtex, CSV, PDF metadata, Alexandria, …).&lt;/p&gt;
&lt;p&gt;Fields may be auto-formatted as names or titles if you wish. You can also control whether the field should support auto-completion (using existing entries in your collection), multiple values, or whether the field should appear in the grouping combo box.&lt;/p&gt;
&lt;p&gt;The paragraph field type supports basic HTML markup (used here in my bibliography collection). The red letters are KDE’s spell-check attempting to be useful.&lt;/p&gt;
&lt;p&gt;I use the table field type in my recipe collection.&lt;/p&gt;
&lt;h2 id=&#34;beyond-the-application&#34;&gt;Beyond the Application&lt;/h2&gt;
&lt;p&gt;Tellico can &lt;a href=&#34;https://www.periapsis.org/tellico/doc/exporting.html&#34;&gt;export&lt;/a&gt; data to and from many sources (Bibtex, CSV, PDF metadata, Alexandria, &amp;hellip;). It can export your collections (even custom collections) to HTML and generate HTML reports in several styles. Tellico even has limited support for &lt;a href=&#34;https://www.periapsis.org/tellico/doc/citations.html&#34;&gt;sending citations to OpenOffice.org Writer&lt;/a&gt; (though I have never used this feature).&lt;/p&gt;
&lt;p&gt;Moreover, since Tellico stores its data in a &lt;a href=&#34;https://www.periapsis.org/tellico/doc/hacking.html#file-format&#34;&gt;fully documented&lt;/a&gt; XML file you can write XSLT or use any XML parser to transform the data file however you like.&lt;/p&gt;
&lt;p&gt;Tellico supports &lt;a href=&#34;https://www.periapsis.org/tellico/doc/loan-dialog.html&#34;&gt;loan tracking&lt;/a&gt; for any collection type. It also translated into more than ten languages.&lt;/p&gt;
&lt;h2 id=&#34;the-not-so-good&#34;&gt;The not so good&lt;/h2&gt;
&lt;p&gt;Tellico is somewhat laggy when loading hundreds or thousands of images from disk and occasionally when switching from thumbnail view to entry view. However, switching between entries is always fine and collections with fewer images are quick and responsive.&lt;/p&gt;
&lt;h2 id=&#34;alternatives&#34;&gt;Alternatives&lt;/h2&gt;
&lt;p&gt;There are many special-purpose collection managers (most of which are listed on
the &lt;a href=&#34;https://www.periapsis.org/tellico/&#34;&gt;tellico homepage&lt;/a&gt; but tellico is one of the earlier general purpose
managers. Some applications (such as &lt;a href=&#34;https://www.gcstar.org/&#34;&gt;GCstar&lt;/a&gt; are becoming more general-purpose
as they mature. Others (such as &lt;a href=&#34;https://www.stuffkeeper.org/&#34;&gt;Stuffkeeper&lt;/a&gt; are simply younger applications
and are not yet stable. Tellico is a well-designed application and therefore
can give even the special-purpose collection managers a run for their money.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>bash-completion: the greatest things since bash completion</title>
      <link>https://magmax.org/en/blog/bash-completion/</link>
      <pubDate>Wed, 26 May 2010 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/en/blog/bash-completion/</guid>
      <description>
        
          &lt;p&gt;Please, if you have not done it, read the &lt;a href=&#34;https://magmax.org/en/blog/debaday/&#34;&gt;Debaday article&lt;/a&gt;. Thank you.&lt;/p&gt;
&lt;p&gt;This article of debaday site, by &amp;ldquo;Andre Masella&amp;rdquo;, were posted at &lt;a href=&#34;https://debaday.debian.net/2009/03/01/bash-completion-the-greatest-things-since-bash-completion&#34;&gt;https://debaday.debian.net/2009/03/01/bash-completion-the-greatest-things-since-bash-completion&lt;/a&gt; on 01/03/2009.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/debian.png&#34;
         alt=&#34;Debaday&#34;/&gt; 
&lt;/figure&gt;

&lt;p&gt;Pressing the tab key in bash to auto-complete a file name is one of the most time saving tricks especially when dealing with very long file names. Unfortunately, file name completion is not always the right behavior. Take Subversion for example. The first argument to svn is the sub-command to use. The file name is also restricted: &lt;code&gt;svn add&lt;/code&gt; only takes files &lt;em&gt;not&lt;/em&gt; under revision control and &lt;code&gt;svn rm&lt;/code&gt; only takes files that &lt;em&gt;are&lt;/em&gt; under revision control.&lt;/p&gt;
&lt;p&gt;This is where the bash-completion package steps in. After installing it with a quick &lt;code&gt;apt-get install bash-completion&lt;/code&gt;, a few lines need to be uncommented in &lt;code&gt;sudo vim /etc/bash.bashrc&lt;/code&gt; and the shell restarted. After that, try this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;$ svn &amp;lt;TAB&amp;gt;&amp;lt;TAB&amp;gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;add         cl          diff        list        move        propdel     rename      unlock
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;annotate    cleanup     export      lock        mv          propedit    resolve     update
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;blame       co          -h          log         pdel        propget     resolved    --version
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5&lt;/span&gt;cat         commit      help        ls          pedit       proplist    revert
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6&lt;/span&gt;changelist  copy        --help      merge       pget        propset     rm
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7&lt;/span&gt;checkout    cp          import      mergeinfo   plist       pset        status
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8&lt;/span&gt;ci          delete      info        mkdir       praise      remove      switch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ta-da! Smarter completion for subversion.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash-completion&lt;/code&gt; will alter the behavior of most commands to limit the display
to relevant files. For example, mpg321 will only display MP3 files in the list.
Programs like &lt;code&gt;rmmod&lt;/code&gt;, &lt;code&gt;iwconfig&lt;/code&gt;, &lt;code&gt;ifup&lt;/code&gt;, and &lt;code&gt;lvm&lt;/code&gt; will display relevant
choices that are not files at all. Even bash’s &lt;code&gt;fg&lt;/code&gt; and &lt;code&gt;bg&lt;/code&gt; will now
tab-complete with job identifiers.Completion for man is useful as it will
auto-complete only man pages that exist and allows you to incrementally narrow
your search by providing the beginning of the man page name, just like with
regular files.&lt;/p&gt;
&lt;p&gt;Occasionally, it doesn’t behave as expected. Particularly, sometimes a file with the &amp;ldquo;wrong&amp;rdquo; extension will be filtered out by bash-completion. For example, if you save an image for certain Internet forums, the file will sometime lack an extension. bash-completion will then filter out that file because it does not have the right extension. This can also happen if the capitalization is unusual. For example, bash-completion will suggest files that end in .mp3 or .MP3 for mpg321, but not .Mp3. In that case, either rename the file or insert # at the beginning of the line. The # makes bash think this line is a comment and bash-completion returns to regular file name completion. Once finished, remove the # and run the command.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash-completion&lt;/code&gt; is available in
&lt;a href=&#34;https://packages.debian.org/bash-completion&#34;&gt;Debian&lt;/a&gt; and
&lt;a href=&#34;https://packages.ubuntu.com/bash-completion&#34;&gt;Ubuntu&lt;/a&gt;. If it isn’t available, it
is very easy to install from
&lt;a href=&#34;https://www.caliban.org/bash/index.shtml#completion&#34;&gt;source&lt;/a&gt;.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>vnstat: a console-based network traffic monitor</title>
      <link>https://magmax.org/en/blog/vnstat/</link>
      <pubDate>Wed, 26 May 2010 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/en/blog/vnstat/</guid>
      <description>
        
          &lt;p&gt;Please, if you have not done it, read the &lt;a href=&#34;https://magmax.org/en/blog/debaday/&#34;&gt;Debaday article&lt;/a&gt;. Thank you.&lt;/p&gt;
&lt;p&gt;This article of debaday site, by &amp;ldquo;András Horváth&amp;rdquo;:https://log69.com/index_en.html, were posted at &lt;a href=&#34;https://debaday.debian.net/2009/02/08/vnstat-a-console-based-network-traffic-monitor/&#34;&gt;https://debaday.debian.net/2009/02/08/vnstat-a-console-based-network-traffic-monitor/&lt;/a&gt; on 08/02/2009.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/debian.png&#34;
         alt=&#34;Debian&#34;/&gt; 
&lt;/figure&gt;

&lt;p&gt;There are many command-line utilities in the Unix / Linux world that collect network traffic statistics for a chosen interface.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://humdi.net/vnstat/&#34;&gt;vnstat&lt;/a&gt; is different because statistics are collected permanently. It keeps the data in files so traffic monitoring is resumed at reboot. vnstat can be useful in situations when you need to know the exact amount of traffic that goes through the interface for a period longer than the computer is on. For example when you have a mobile 3G internet connection or an xDSL connection that has traffic limit per month, then you can easily check how much traffic you generated.&lt;/p&gt;
&lt;p&gt;vnstat can be run without root privileges because it collects data from the kernel’s proc filesystem. It doesn’t have a daemon service, it is simply run by cron periodically. In Debian, the installation creates a cron job where a &lt;code&gt;vnstat -u&lt;/code&gt; command is run every 5 minutes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# /etc/cron.d/vnstat: crontab entries for the vnstat package&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;0-55/5 *        * * *   root    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -x /usr/bin/vnstat &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;ls /var/lib/vnstat/ | wc -l&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; -ge &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; /usr/bin/vnstat -u; &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Initially, you have to create the database with this command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;vnstat -u -i wlan1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After creating the database, the statistics can be viewed by running vnstat without any further parameters. Thanks to the cron job, the statistic is updated every 5 minutes. It even remembers the interface name to list:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;$ vnstat
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;Database updated: Tue Jan &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt; 15:40:01 &lt;span style=&#34;color:#ae81ff&#34;&gt;2009&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;        wlan1
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;           received:       2.18 GB &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;81.3%&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;        transmitted:     512.85 MB &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;18.7%&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;              total:       2.68 GB
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;                        rx     |     tx     |  total
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;        -----------------------+------------+-----------
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;        yesterday     95.14 MB |   12.19 MB |  107.32 MB
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;            today     11.33 MB |    4.47 MB |   15.80 MB
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;        -----------------------+------------+-----------
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;        estimated        &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; MB |       &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; MB |      &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; MB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Some command line options allow you to view statistics for specific periods of time. For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--days&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;$ vnstat --days
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt; wlan1  /  daily
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;    day         rx      |     tx      |  total
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;------------------------+-------------+----------------------------------------
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;   18.01.       &lt;span style=&#34;color:#ae81ff&#34;&gt;231&lt;/span&gt; kB  |     &lt;span style=&#34;color:#ae81ff&#34;&gt;115&lt;/span&gt; kB  |     &lt;span style=&#34;color:#ae81ff&#34;&gt;346&lt;/span&gt; kB
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;   19.01.    611.72 MB  |   58.16 MB  |  669.88 MB   %%%%%%%%%%%%%%%%%::
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;   20.01.    400.53 MB  |  200.70 MB  |  601.23 MB   %%%%%%%%%%%%%%:::::
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;   21.01.      5.87 MB  |    1.56 MB  |    7.43 MB
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;   22.01.    417.97 MB  |  108.94 MB  |  526.91 MB   %%%%%%%%%%%%%%::::
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;   23.01.    365.24 MB  |   41.78 MB  |  407.02 MB   %%%%%%%%%%%%::
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;   24.01.    150.00 MB  |   13.42 MB  |  163.43 MB   %%%%%%
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;   25.01.    170.17 MB  |   71.52 MB  |  241.70 MB   %%%%%%:::
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;   26.01.     95.14 MB  |   12.19 MB  |  107.32 MB   %%%%
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;   27.01.     11.36 MB  |    4.51 MB  |   15.87 MB
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17&lt;/span&gt;------------------------+-------------+----------------------------------------
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18&lt;/span&gt; estimated       &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; MB  |       &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; MB  |      &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; MB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--weeks&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;$ vnstat --weeks
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;        wlan1  /  weekly
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;                            rx      |       tx      |    total
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;        ----------------------------+---------------+--------------
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;          last &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; days      1.19 GB  |    253.93 MB  |      1.44 GB
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;            last week      2.07 GB  |    496.08 MB  |      2.56 GB
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;         current week    106.52 MB  |     16.71 MB  |    123.23 MB
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;        ----------------------------+---------------+--------------
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;            estimated       &lt;span style=&#34;color:#ae81ff&#34;&gt;456&lt;/span&gt; MB  |        &lt;span style=&#34;color:#ae81ff&#34;&gt;68&lt;/span&gt; MB  |       &lt;span style=&#34;color:#ae81ff&#34;&gt;524&lt;/span&gt; MB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--months&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;$ vnstat --months
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt; wlan1  /  monthly
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5&lt;/span&gt;   month         rx      |      tx      |   total
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6&lt;/span&gt;-------------------------+--------------+--------------------------------------
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7&lt;/span&gt;  Jan &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;       2.18 GB  |   512.90 MB  |     2.68 GB   %%%%%%%%%%%%%:::
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8&lt;/span&gt;-------------------------+--------------+--------------------------------------
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;9&lt;/span&gt; estimated      2.53 GB  |      &lt;span style=&#34;color:#ae81ff&#34;&gt;596&lt;/span&gt; MB  |     3.12 GB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--top10&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;$ vnstat --top10
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt; wlan1  /  top &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;   &lt;span style=&#34;color:#75715e&#34;&gt;#       day         rx      |     tx      |  total&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;-------------------------------+-------------+---------------------------------
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;    19.01.09    611.72 MB  |   58.16 MB  |  669.88 MB   %%%%%%%%%%%%%%%%::
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;    20.01.09    400.53 MB  |  200.70 MB  |  601.23 MB   %%%%%%%%%%%:::::
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;    22.01.09    417.97 MB  |  108.94 MB  |  526.91 MB   %%%%%%%%%%%:::
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;    23.01.09    365.24 MB  |   41.78 MB  |  407.02 MB   %%%%%%%%%:
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;    25.01.09    170.17 MB  |   71.52 MB  |  241.70 MB   %%%%::
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;    24.01.09    150.00 MB  |   13.42 MB  |  163.43 MB   %%%%
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;    26.01.09     95.14 MB  |   12.19 MB  |  107.32 MB   %%
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;    21.01.09      5.87 MB  |    1.56 MB  |    7.43 MB
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;    18.01.09       &lt;span style=&#34;color:#ae81ff&#34;&gt;231&lt;/span&gt; kB  |     &lt;span style=&#34;color:#ae81ff&#34;&gt;115&lt;/span&gt; kB  |     &lt;span style=&#34;color:#ae81ff&#34;&gt;346&lt;/span&gt; kB
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;-------------------------------+-------------+---------------------------------
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--live&lt;/code&gt; gives real-time statistics about the packets currently going through the interface:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;$ vnstat --live -i wlan1
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;Monitoring wlan1...    &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;press CTRL-C to stop&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;   rx:     113.40 kB/s    &lt;span style=&#34;color:#ae81ff&#34;&gt;99&lt;/span&gt; p/s            tx:      28.42 kB/s    &lt;span style=&#34;color:#ae81ff&#34;&gt;96&lt;/span&gt; p/s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;pros-and-cons&#34;&gt;Pros and cons&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pros:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Permanent network traffic statistic that is not forgotten.&lt;/li&gt;
&lt;li&gt;Very lightweight solution, no daemon service is running in the background (automatically run from cron periodically).&lt;/li&gt;
&lt;li&gt;Easy to install and use. In vnstat, everything can be done from the command line and it clearly shows how many megabytes have you send/receive in a given day or month.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Internet or remote traffic cannot be separated from local network traffic if it all goes through the interface being monitored.&lt;/li&gt;
&lt;li&gt;It works for a single host, but it doesn’t scale very well. If you need to monitor a lot of hosts and need detailed graphs, there are better alternatives, such as &lt;a href=&#34;https://munin.projects.linpro.no/&#34;&gt;munin&lt;/a&gt; or &lt;a href=&#34;https://ganglia.info/&#34;&gt;ganglia&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;availability&#34;&gt;Availability&lt;/h2&gt;
&lt;p&gt;There are official packages available in both &amp;ldquo;Debian&amp;rdquo;:https://packages.debian.org/vnstat and &amp;ldquo;Ubuntu (Universe)&amp;quot;:https://packages.ubuntu.com/vnstat for a long time now.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Debaday</title>
      <link>https://magmax.org/en/blog/debaday/</link>
      <pubDate>Wed, 19 May 2010 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/en/blog/debaday/</guid>
      <description>
        
          &lt;p&gt;Once upon a time, there were a web page very interesting titled &lt;a href=&#34;https://debaday.debian.net/&#34;&gt;Debian Package
of the Day&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;All of their articles were lost. I&amp;rsquo;m trying to recover as much as I can. They may be incomplete.&lt;/p&gt;
&lt;p&gt;Please, if you have any of them or you were the author of it, &lt;a href=&#34;mailto:miguelangel.garcia@gmail.com?Subject=%5Bdebaday%5D%20%5Bwww.magmax.org%5D%20About%20articles.&#34;&gt;tell me&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Thank you a lot.&lt;/p&gt;
&lt;p&gt;Really the idea began before of that. Here you can see the first post at Debaday, titled &amp;ldquo;Hello, World&amp;rdquo;, by &amp;ldquo;lucas&amp;rdquo;:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/debian.png&#34;
         alt=&#34;Debaday&#34;/&gt; 
&lt;/figure&gt;

&lt;p&gt;I&amp;rsquo;ve decided to try to resurrect Debian Package a Day. It was &lt;a href=&#34;https://debaday.livejournal.com/&#34;&gt;originally
created by Andrew Sweger&lt;/a&gt;, then David Moreno Garza gave it another try, but both
blogs stopped after some time. &lt;a href=&#34;https://potd.redsymbol.net/&#34;&gt;Another blog&lt;/a&gt; is still active, but autogenerates
its entries using the packages&#39; descriptions, so it&amp;rsquo;s less interesting.&lt;/p&gt;
&lt;p&gt;So here is a third attempt. To prevent this blog from following its ancestors, here is what changes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I&amp;rsquo;ll try to make this a collaborative work by having a team of editors. If you&lt;/li&gt;
&lt;li&gt;can dedicate time on a regular basis to this, please join the team. If you&lt;/li&gt;
&lt;li&gt;can&amp;rsquo;t, please send us new entries about the packages you use. Read the&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://debaday.debian.net/contribute/&#34;&gt;Contribute&lt;/a&gt; page for more info.&lt;/li&gt;
&lt;li&gt;The posting frequency will depend on how much entries we have in the queue. We will target a posting frequency of twice a week, so we won&amp;rsquo;t get kicked out of Planet Debian and Planet Ubuntu :-)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Everything is not totally read yet:&lt;/p&gt;
&lt;p&gt;We have to wait until DNS propagates our new name (if you can read this, it&amp;rsquo;s probably OK now).&lt;/p&gt;
&lt;p&gt;We have to get on Planet Debian and Planet Ubuntu.&lt;/p&gt;
&lt;p&gt;Someone has to &lt;a href=&#34;https://debaday.debian.net/contribute&#34;&gt;submit an entry&lt;/a&gt; we can publish, or we could write one. But it would be so much better to start the collaborative way :-)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Update (08/12/06)&lt;/em&gt;: Debian Package of the Day won&amp;rsquo;t be added on Planet Debian:
a recent discussion concluded that non-personal blogs should not be on Planet
Debian. So you have to subscribe directly to &lt;a href=&#34;https://debaday.debian.net/feed&#34;&gt;its feed&lt;/a&gt; (if you read Planet Ubuntu, you probably don’t need to, since it was added there).&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Fonty Python</title>
      <link>https://magmax.org/en/blog/debaday-fonty-python/</link>
      <pubDate>Wed, 19 May 2010 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/en/blog/debaday-fonty-python/</guid>
      <description>
        
          &lt;p&gt;Please, if you have not done it, read &lt;a href=&#34;https://magmax.org/en/blog/debaday/&#34;&gt;the Debaday article&lt;/a&gt;. Thank you.&lt;/p&gt;
&lt;p&gt;This article of debaday site, by &amp;ldquo;Donn Ingle&amp;rdquo;, were posted at &lt;a href=&#34;https://debaday.debian.net/2009/02/22/fonty-python-manage-your-fonts/&#34;&gt;https://debaday.debian.net/2009/02/22/fonty-python-manage-your-fonts/&lt;/a&gt; on 22/02/2009.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://savannah.nongnu.org/projects/fontypython/&#34;&gt;Fonty Python&lt;/a&gt; is available from the fontypython package in both Debian and
Ubuntu in Universe. Fonty is a wxPython app so will work in any desktop
environment. It also has a command-line interface which avoids the gui.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/debian.png&#34;
         alt=&#34;Debaday&#34;/&gt; 
&lt;/figure&gt;

&lt;h2 id=&#34;what-the-font&#34;&gt;What the font?&lt;/h2&gt;
&lt;p&gt;As a graphic designer, one is called-upon to create artwork for many things. Fonts change from one client to another, from one job to another. If busy enough, then one can soon amass a vast pile of font files. Some are downloaded from the net as freeware, others are purchased, others are supplied by the clients for their work.&lt;/p&gt;
&lt;p&gt;These font-files are stored somewhere, independently of the system fonts managed by the Debian package manager, possibly sorted in whatever fashion you prefer. It&amp;rsquo;s crazy to have these fonts all installed at the same time. Besides whatever that may do to your computer&amp;rsquo;s speed, it has one gigantic drawback: it clutters up font-selection boxes. Have you ever tried to find a font in a list of 500 fonts? Bleh.&lt;/p&gt;
&lt;p&gt;What you need is a way to &lt;em&gt;herd fonts&lt;/em&gt; and that&amp;rsquo;s what Fonty does.&lt;/p&gt;
&lt;h2 id=&#34;bring-out-yer-fonts&#34;&gt;Bring out yer fonts!&lt;/h2&gt;
&lt;p&gt;Fonty will let you gather your fonts and structure them into &amp;ldquo;collections&amp;rdquo;  &amp;ndash; or what I call &amp;ldquo;Pogs&amp;rdquo; &amp;ndash;  a place to keep tyPOGraphy (well, why not?)&lt;/p&gt;
&lt;p&gt;Think of Pogs as &amp;ldquo;groups&amp;rdquo;, &amp;ldquo;bags&amp;rdquo;, &amp;ldquo;cases&amp;rdquo;, &amp;ldquo;boxes&amp;rdquo;  &amp;ndash; that kind of thing. It&amp;rsquo;s an oddball word invented to describe a bunch of font files.&lt;/p&gt;
&lt;h2 id=&#34;ye-olde-basic-idea&#34;&gt;Ye olde basic idea&lt;/h2&gt;
&lt;p&gt;You visually gather fonts into Pogs. You then install a Pog and all the fonts within it are active on the system. You finish your work and then uninstall the Pog.&lt;/p&gt;
&lt;p&gt;Your fonts &lt;em&gt;never move&lt;/em&gt; from where they live (so don&amp;rsquo;t worry). Neither are copies of your fonts made; only &lt;em&gt;links&lt;/em&gt; to the original files are used to install the fonts into your home .fonts subdirectory.&lt;/p&gt;
&lt;p&gt;For example, you might have a Pog called &amp;ldquo;logoZoo&amp;rdquo; into which you place all the TTFs you need to design a logo for a Zoo. After that, when you need to work with them, you simply install the &amp;ldquo;logoZoo&amp;rdquo; Pog and start your design app. All those fonts will now appear in Inkscape or The Gimp, and other apps. Do your work as normal, and forget about fonts.&lt;/p&gt;
&lt;p&gt;When you are done designing, you uninstall &amp;ldquo;logoZoo&amp;rdquo; and all those fonts go away. The links to the original files are removed from your home .fonts directory, effectively uninstalling each font.&lt;/p&gt;
&lt;p&gt;Fonty is also great for just looking at fonts wherever they are on your computer, without having to install them first. Fonty also has a command-line, allowing very quick use. You can install or remove pogs without having to start the entire gui, which is neat.&lt;/p&gt;
&lt;h2 id=&#34;quick-tour&#34;&gt;Quick tour&lt;/h2&gt;
&lt;p&gt;The layout of Fonty is supposed to be as simple as possible. I stayed away from context-menus and drag and drop because I find them hard to use. The flow is left-to-right with the sources of fonts on the left and their &amp;ldquo;targets&amp;rdquo; on the right.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Point 1: You choose a Source Folder (or Source Pog) on the left.&lt;/li&gt;
&lt;li&gt;Point 2 &amp;amp; 3: You then see the fonts in the middle. You can page or Point or search around (Points 5,7). You click the fonts you want to use.&lt;/li&gt;
&lt;li&gt;Point 4: On the right, you choose a Pog, or make a new one.&lt;/li&gt;
&lt;li&gt;Point 6: Once you have a Target Pog selected, you can place fonts that you ticked into it.&lt;/li&gt;
&lt;li&gt;Point 8: On the bottom-right you then Install or Uninstall Pogs as you need them.&lt;/li&gt;
&lt;li&gt;There is a settings box (ctrl+s) where you can change the sample text and sizes.&lt;/li&gt;
&lt;li&gt;Check the help too  &amp;ndash;  it&amp;rsquo;s full of tips and quite short.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;bad-fonts&#34;&gt;Bad fonts&lt;/h2&gt;
&lt;p&gt;Some fonts are simply bad to the bone. Fonty relies on freetype and PIL to open and draw the glyphs, and when this fails so does Fonty. I have put a lot of effort into catching this, but it does not always work. When a font crashes Fonty, you should get a popup box telling you which one did the deed. You really ought to remove that font! Some fonts cannot be displayed, and Fonty will show that by using coloured bars in the display area.&lt;/p&gt;
&lt;p&gt;There is also a menu item (File &amp;gt; Check Fonts) that you can point at a given directory and scan it for fonts that will crash Fonty. Use this when you want to cull all the fonts that are bad.&lt;/p&gt;
&lt;h2 id=&#34;font-flavours&#34;&gt;Font Flavours&lt;/h2&gt;
&lt;p&gt;Originally, Fonty could only show TTF files. Since then I have expanded it to include OTF, Type1 and TTC files. As far as I can tell, being only seminiscient, this all works.&lt;/p&gt;
&lt;h2 id=&#34;i18n&#34;&gt;i18n&lt;/h2&gt;
&lt;p&gt;Fonty speaks your language; or it will if you translate it. There are a few translations available and you can join the project to contribute others.&lt;/p&gt;
&lt;h2 id=&#34;fonty-needs-help&#34;&gt;Fonty needs help&lt;/h2&gt;
&lt;p&gt;With Python heading for version 3 and all kinds of other changes, Fonty is falling behind. She still works quite well, but I cannot spend the time I want to on her. If there&amp;rsquo;s anyone out there who wants to stick a fork in her and run  &amp;ndash; please do.&lt;/p&gt;
&lt;p&gt;I hope to find some time this year to have another go; fix some bugs and include a few translations I have been sent, but I can&amp;rsquo;t be relied upon.&lt;/p&gt;
&lt;p&gt;You can check out the &lt;a href=&#34;https://savannah.nongnu.org/projects/fontypython/&#34;&gt;author&amp;rsquo;s home page for Fonty and the project home page&lt;/a&gt;.&lt;/p&gt;

        
      </description>
    </item>
    
  </channel>
</rss>
