<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming on El blog de MagMax</title>
    <link>https://magmax.org/tags/programming/</link>
    <description>Recent content in programming on El blog de MagMax</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 09 Feb 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://magmax.org/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Principios básicos de programación</title>
      <link>https://magmax.org/blog/principios-basicos-de-programacion/</link>
      <pubDate>Mon, 09 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/blog/principios-basicos-de-programacion/</guid>
      <description>
        
          &lt;p&gt;A menudo nos centramos tanto en cosas complejas que nos olvidamos de lo básico.&lt;/p&gt;
&lt;p&gt;Precisamente por eso, voy a comenzar una serie de posts comenzando desde cero.&lt;/p&gt;
&lt;p&gt;En este caso, explicaré lo más básico de la programación. Y temo que esto es sólo teoría y además es independiente del lenguaje.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/programming.jpg&#34;/&gt; 
&lt;/figure&gt;

&lt;h2 id=&#34;qué-es-un-lenguaje-de-programación&#34;&gt;Qué es un lenguaje de programación&lt;/h2&gt;
&lt;p&gt;¿Conocéis la receta de la &lt;a href=&#34;https://magmax.org/blog/tarta-manzana/&#34;&gt;tarta de manzana&lt;/a&gt;? Tal y como se explica en el post resultaría difícil de entender para un ordenador. No nos engañemos: al contrario de lo que se piensa, los ordenadores son tontos.&lt;/p&gt;
&lt;p&gt;Vamos a resumir la receta con pasos sencillos:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Calentar el molde con algo de mantequilla&lt;/li&gt;
&lt;li&gt;Mezclar harina, azúcar, leche y huevos en un recipiente y batir con la batidora.&lt;/li&gt;
&lt;li&gt;Huntar de mantequilla todo el molde&lt;/li&gt;
&lt;li&gt;Pelar 4 manzanas y echarlas en el molde.&lt;/li&gt;
&lt;li&gt;Rociar con la mezcla.&lt;/li&gt;
&lt;li&gt;Meter en el horno durante 45 minutos.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;De momento todo fácil, ¿Verdad? Bueno, pues éste es nuestro &lt;strong&gt;programa&lt;/strong&gt;. Un &lt;strong&gt;programa&lt;/strong&gt; no es más que un conjunto de &lt;strong&gt;instrucciones&lt;/strong&gt; dadas al procesador, que es el cerebro del ordenador. Y, como vemos, es como una receta de cocina.&lt;/p&gt;
&lt;p&gt;A menudo, en nuestro programa se dan muchas cosas por sobreentendidas. Por ejemplo, &amp;ldquo;calentar el molde con algo de mantequilla&amp;rdquo; tiene numerosas implicaciones:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Coger un molde.&lt;/li&gt;
&lt;li&gt;Coger la mantequilla.&lt;/li&gt;
&lt;li&gt;Echar mantequilla en el molde.&lt;/li&gt;
&lt;li&gt;Abrir la tapa del horno.&lt;/li&gt;
&lt;li&gt;Meter el molde.&lt;/li&gt;
&lt;li&gt;Cerrar la tapa del horno.&lt;/li&gt;
&lt;li&gt;Encender el horno.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Podemos decir que es un programa en sí mismo. Ésto es lo que se considera un &lt;strong&gt;programa de bajo nivel&lt;/strong&gt;, ya que está todo explicado, mientras que la frase inicial podría considerarse una &lt;strong&gt;instrucción de alto nivel&lt;/strong&gt;. Podemos decir, por tanto, que:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Una &lt;strong&gt;instrucción de alto nivel&lt;/strong&gt; se compone de un &lt;strong&gt;programa de bajo nivel&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Para el procesador el nivel más bajo que existe se llama &lt;strong&gt;código máquina&lt;/strong&gt;. Por lo tanto, un lenguaje tendrá un nivel más bajo cuanto más se parezca un lenguaje al &lt;em&gt;código máquina&lt;/em&gt;, que es totalmente numérico.&lt;/p&gt;
&lt;p&gt;Por encima del &lt;em&gt;código máquina&lt;/em&gt; está el &lt;strong&gt;código ensamblador&lt;/strong&gt;, que es poco más que hacer legible por humanos el &lt;em&gt;código máquina&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Y por encima, los distintos lenguajes: &lt;a href=&#34;https://es.wikipedia.org/wiki/C_(lenguaje_de_programaci%C3%B3n)&#34;&gt;C&lt;/a&gt;, &lt;a href=&#34;https://es.wikipedia.org/wiki/C%2B%2B&#34;&gt;C++&lt;/a&gt;, &lt;a href=&#34;https://www.java.com/&#34;&gt;Java&lt;/a&gt;, &lt;a href=&#34;https://python.org&#34;&gt;Python&lt;/a&gt;, &lt;a href=&#34;https://www.ruby-lang.org/es/&#34;&gt;Ruby&lt;/a&gt;, &amp;hellip; Por tanto, podríamos decir que:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Un lenguaje de programación es un conjunto de instrucciones para explicarle al procesador lo que debe hacer, donde cada instrucción se compone de un programa de menor nivel.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Y dado que los procesadores son bastante tontos, necesitan que &lt;strong&gt;los lenguajes sean formales&lt;/strong&gt;, es decir, que tengan tengan una estructura bien definida, no ambigua y lo más sencilla posible.&lt;/p&gt;
&lt;h2 id=&#34;herramientas-de-un-lenguaje-de-programación&#34;&gt;Herramientas de un lenguaje de programación&lt;/h2&gt;
&lt;p&gt;Aunque hay muchos lenguajes de programación, todos disponen de unas herramientas más o menos comunes. De la misma manera que hay muchas cocinas diferentes, un cocinero sabe qué es &lt;em&gt;pochar los tomates&lt;/em&gt; o &lt;em&gt;escalfar un huevo&lt;/em&gt;, independientemente de dónde se encuentren las cazuelas o los ingredientes.&lt;/p&gt;
&lt;p&gt;Veamos algunas de ellas:&lt;/p&gt;
&lt;h3 id=&#34;constantes&#34;&gt;Constantes&lt;/h3&gt;
&lt;p&gt;Una &lt;strong&gt;constante&lt;/strong&gt; es un valor que nunca cambia, al que le damos un nombre. En nuestra tarta de manzana, podemos decir que vamos a usar 4 huevos, y después referirnos a ellos como &lt;em&gt;&amp;ldquo;los huevos&amp;rdquo;&lt;/em&gt;, sin necesidad ya de indicar cuántos son. Podríamos formalizarlo así:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;NÚMERO_DE_HUEVOS &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;En programación hay numerosas convenciones, y en casi todos los lenguajes de programación se utilizan mayúsculas y &lt;em&gt;&amp;ldquo;underscores&amp;rdquo;&lt;/em&gt; (&lt;code&gt;_&lt;/code&gt;) para los nombres de las constantes, aunque ni es imprescindible ni ocurre en todos los lenguajes.&lt;/p&gt;
&lt;h3 id=&#34;variables&#34;&gt;Variables&lt;/h3&gt;
&lt;p&gt;Una &lt;strong&gt;variable&lt;/strong&gt; es un valor que cambia con el tiempo. Las &lt;strong&gt;variables&lt;/strong&gt; nos permiten guardar datos y operar con ellos.&lt;/p&gt;
&lt;p&gt;Las variables tienen tipos, donde los más habituales son:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;números enteros&lt;/li&gt;
&lt;li&gt;números decimales&lt;/li&gt;
&lt;li&gt;letras, también llamados caracteres&lt;/li&gt;
&lt;li&gt;listas de otras variables&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Por ejemplo, una frase (que en programación llamaremos &lt;strong&gt;cadena de caracteres&lt;/strong&gt;) no es más que una lista de letras.&lt;/p&gt;
&lt;p&gt;Volvamos a nuestro ejemplo: nuestro molde podria ser una variable, que consiste en una lista de ingredientes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;mode &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lista [ harina, azúcar, leche, huevos ]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;operadores&#34;&gt;Operadores&lt;/h3&gt;
&lt;p&gt;Son las operaciones que se pueden realizar con las variables y las constantes.&lt;/p&gt;
&lt;p&gt;Hay de 3 tipos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;operadores aritméticos&lt;/strong&gt;: suma, resta, multiplicación, división, etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;operadores lógicos&lt;/strong&gt;: mayor que, menor que, igual, etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;operadores binarios&lt;/strong&gt;: que no voy a explicar ahora.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Por ejemplo, si el operador &amp;ldquo;+=&amp;rdquo; implica &amp;ldquo;añadir a una lista&amp;rdquo;, podríamos indicar el contenido del molde, pero añadiéndolos poco a poco:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;molde &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lista []
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;molde &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; harina
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;molde &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; azúcar
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;molde &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; leche
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5&lt;/span&gt;molde &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; huevos
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;condiciones&#34;&gt;Condiciones&lt;/h3&gt;
&lt;p&gt;En ocasiones hay que realizar comprobaciones, habitualmente de una variable. En estas comprobaciones hay dos partes: cuando la condición se cumple y cuando no.&lt;/p&gt;
&lt;p&gt;Habitualmente todos los lenguajes de programación siguen una estructura similar a ésta:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; condición
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;then acción_si_cumple
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; acción_si_no_cumple
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Voy a poner un ejemplo basado en la receta, aunque luego veremos que no es del todo válido:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; la mantequilla se ha derretido
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;then huntar todo el molde con la mantequilla
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;En este caso he omitido la parte de &amp;ldquo;no se cumple la condición&amp;rdquo;, ya que suele ser opcional.&lt;/p&gt;
&lt;h3 id=&#34;bucles&#34;&gt;Bucles&lt;/h3&gt;
&lt;p&gt;A veces comprobar una condición no es suficiente, y hay que comprobarla varias veces, o es necesario realizar una misma operación para distintos elementos.&lt;/p&gt;
&lt;p&gt;Un ejemplo: Hay que echar 4 huevos:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;huevos &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; x huevo
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; huevo &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; huevos, molde &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; huevo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;comentarios&#34;&gt;Comentarios&lt;/h3&gt;
&lt;p&gt;A veces nos quedan programas feos y difíciles de entender, por lo que se ponen comentarios para explicar a los humanos qué ocurre ahí. Realmente no importan, ya que el procesador los ignorará.&lt;/p&gt;
&lt;p&gt;Suele haber de dos tipos: comentario de una línea o de varias líneas. Los primeros tendrán una marca de inicio y &amp;ldquo;comentan&amp;rdquo; el resto de la línea, mientras que los segundos &amp;ldquo;comentan&amp;rdquo; todo hasta que aparezca una marca de fin.&lt;/p&gt;
&lt;p&gt;Un ejemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt; necesitamos &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; huevos
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;huevos &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; x huevo
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/*&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5&lt;/span&gt;echamos los &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; huevos
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;6&lt;/span&gt;en el molde
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*/&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; huevo &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; huevos, molde &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; huevo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Comentar bien es difícil, ya que a menudo se comenta más o menos de lo que se debería. En realidad, un buen programa no debería requerir comentarios, pero a veces vienen bien.&lt;/p&gt;
&lt;h3 id=&#34;funciones&#34;&gt;Funciones&lt;/h3&gt;
&lt;p&gt;En ocasiones hay que repetir código, quizá con pequeñísimas variaciones. Por eso se inventaron las funciones: es una manera de agrupar código y evitar repetirlo en distintas partes del programa. En muchas ocasiones, estas funciones pueden tener parámetros que alteren el comportamiento.&lt;/p&gt;
&lt;p&gt;En esta ocasión no utilizaré la metáfora de la receta de cocina, sino algo más matemático: calcular el área de un triángulo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;function area_de_triangulo(base, altura) {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; base &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; altura &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Así, después se puede invocar a esta función con distintos argumentos:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;area_de_triángulo(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)  &lt;span style=&#34;color:#f92672&#34;&gt;--&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;area_de_triángulo(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)  &lt;span style=&#34;color:#f92672&#34;&gt;--&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;el-programa&#34;&gt;El programa&lt;/h2&gt;
&lt;p&gt;Y con estas simples herramientas, podemos crear el programa. Pero aquí viene la parte difícil: hay que indicar todo con pelos y señales, sin olvidar absolutamente nada.&lt;/p&gt;
&lt;p&gt;Había pensado poner aquí el programa de la tarta de manzana completo&amp;hellip; Pero creo que no es nada pedagógico. Queda demasiado enrevesado y feo :D&lt;/p&gt;
&lt;p&gt;Alguien podrá echar de menos otras herramientas, como las &lt;strong&gt;clases&lt;/strong&gt;, &lt;strong&gt;paquetes&lt;/strong&gt;, &lt;strong&gt;módulos&lt;/strong&gt;, &lt;strong&gt;librerías&lt;/strong&gt;&amp;hellip; Pero éstas no son estándar y no me parecía bien juntarlas con las herramientas básicas. Lo contaré en otros posts.&lt;/p&gt;
&lt;h2 id=&#34;la-ejecución&#34;&gt;La ejecución&lt;/h2&gt;
&lt;p&gt;La ejecución de cualquier programa requiere dos fases: compilación y ejecución. No voy a entrar en muchos detalles ahora.&lt;/p&gt;
&lt;p&gt;Baste decir que:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Algunos lenguajes utilizan un código entre el código máquina y el código de alto nivel, y es necesario un programa que los traduzca. A este programa se le conoce como &lt;strong&gt;intérprete&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;hay algunos lenguajes interpretados, como &lt;a href=&#34;https://python.org&#34;&gt;Python&lt;/a&gt; o &lt;a href=&#34;https://www.ruby-lang.org/es/&#34;&gt;Ruby&lt;/a&gt; en los que puede parecer que no exite la fase de compilación, ya que se puede &amp;ldquo;ejecutar&amp;rdquo; el código directamente. En realidad las dos fases existen, pero ocurren de forma ajena al usuario.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;más-información&#34;&gt;Más información&lt;/h2&gt;
&lt;p&gt;En este punto sería interesante comenzar a ver cómo pueden clasificarse los lenguajes&amp;hellip; pero eso es muy aburrido.&lt;/p&gt;
&lt;p&gt;Podéis echar un ojo a mi &lt;a href=&#34;https://magmax.org/blog/python-basico/&#34;&gt;tutorial de Python básico&lt;/a&gt;, o esperar a mi siguiente post :D&lt;/p&gt;

        
      </description>
    </item>
    
  </channel>
</rss>
