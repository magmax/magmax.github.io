<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docker on El blog de MagMax</title>
    <link>https://magmax.org/tags/docker/</link>
    <description>Recent content in docker on El blog de MagMax</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 04 Apr 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://magmax.org/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Limpiando Dockers antiguos</title>
      <link>https://magmax.org/blog/limpiando-dockers-antiguos/</link>
      <pubDate>Mon, 04 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/blog/limpiando-dockers-antiguos/</guid>
      <description>En este mini-post voy a explicar cómo eliminar la basura generada por Docker. Habitualmente esto no se traducirá en liberación de espacio, pero hay veces que sí.
Veréis cómo es más fácil de lo que parece :)
  Cómo se genera la basura Hay dos tipos de cosas a borrar en Docker:
 Por un lado, están los containers que ya no están en ejecución. Estos se crean con cada docker run que ejecutemos, y puede haber varios por imagen.</description>
    </item>
    
    <item>
      <title>LAMP con Docker</title>
      <link>https://magmax.org/blog/lamp-con-docker/</link>
      <pubDate>Mon, 28 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/blog/lamp-con-docker/</guid>
      <description>Hace algún tiempo que escribí los artículos LAMP con Puppet y LAMP con Salt. Desde entonces ha llovido mucho y&amp;hellip; bueno, creo que los sistemas tipo Salt y Puppet están casi obsoletos, gracias a nuevas tecnologías como Docker.
Pero antes de criticarme por esa afirmación, ruego al lector que se lea este artículo y luego decida por sí mismo.
Igual que en los otros ejercicios, montaremos una arquitectura LAMP (Linux + Apache + MySQL + PHP) que tan de moda ha estado durante mucho tiempo.</description>
    </item>
    
    <item>
      <title>Cómo puede cambiar los despliegues Docker</title>
      <link>https://magmax.org/blog/como-puede-cambiar-los-despliegues-docker/</link>
      <pubDate>Mon, 03 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/blog/como-puede-cambiar-los-despliegues-docker/</guid>
      <description>Llevo ya bastante tiempo pensando cómo desplegar correctamente una aplicación. La idea es ser capaz de desplegar en un sistema distribuido sin DoS .
El principal problema reside en cómo sincronizar todas las máquinas para realizar el cambio en el menor tiempo posible, así como en evitar puntos de fallo y admitir rollback. Casi na.
Sin embargo, Docker facilita todo esto. Aquí explico cómo se me ha ocurrido, aunque no es nada que probablemente no se os haya pasado por la cabeza a vosotros también.</description>
    </item>
    
    <item>
      <title>Docker</title>
      <link>https://magmax.org/blog/docker/</link>
      <pubDate>Tue, 21 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/blog/docker/</guid>
      <description>La vida de un DevOps está llena de palabros raros. Uno que suena mucho últimamente es el de Docker, pero&amp;hellip; ¿qué es exactamente? ¿Por qué está tan de moda?
En este post contaré cómo lo veo yo y por qué no sólo que los Docker han venido para quedarse, sino que están revolucionando la industria.
  Qué es un Docker Un Docker es una manera de empaquetar una infraestructura.</description>
    </item>
    
  </channel>
</rss>
