<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>git - Etiqueta - El blog de MagMax</title>
        <link>https://magmax.org/tags/git/</link>
        <description>git - Etiqueta - El blog de MagMax</description>
        <generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Fri, 06 Mar 2015 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://magmax.org/tags/git/" rel="self" type="application/rss+xml" /><item>
    <title>Git: recuperación de changesets perdidos</title>
    <link>https://magmax.org/blog/git-recuperacion-de-changesets-perdidos/</link>
    <pubDate>Fri, 06 Mar 2015 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/git-recuperacion-de-changesets-perdidos/</guid>
    <description><![CDATA[Hoy me he enfrentado a un problema algo desagradable en Git: Borré un commit. Básicamente había perdido un artículo de mi blog y algunos cambios más.
En condiciones normales, esto hubiera sido una pérdida terrible. Pero en este caso Git vino al rescate.
Pondré un ejemplo para perder changeset y después recuperarlos. Si tenéis prisa, saltad directamente a la sección &ldquo;cómo recuperar un commit&rdquo; :D
  Perdiendo changesets o commits Pero&hellip; ¿Cómo puede darse esta situación?]]></description>
</item><item>
    <title>Trabajando con GitHub de forma efectiva</title>
    <link>https://magmax.org/blog/trabajando-con-github-de-forma-efectiva/</link>
    <pubDate>Fri, 20 Feb 2015 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/trabajando-con-github-de-forma-efectiva/</guid>
    <description><![CDATA[Ya me han preguntado varias veces cómo trabajar de forma efectiva con GitHub, así que he decidido dedicarle un post.
Primero contaré algunas cosas básicas, para terminar explicando cómo trabajar con forks.
Recomiendo echar un ojo a mi post sobre el Uso básico de Git antes de embarcarse en esta aventura&hellip;
  Uso básico de Git y GitHub Crear un repositorio Lo primero es crear un repositorio. Para ello nos vamos a nuestra cuenta en GitHub, pulsamos sobre new repository e indicamos el nombre, descripción y privacidad.]]></description>
</item><item>
    <title>Combinando Git y Subversion</title>
    <link>https://magmax.org/blog/combinando-git-y-subversion/</link>
    <pubDate>Sun, 13 Jul 2014 10:05:55 &#43;0200</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/combinando-git-y-subversion/</guid>
    <description><![CDATA[El otro día mi amigo Diego D. me propuso un problema. Él ya tenía una posible solución, pero quería contar también con mi opinión.
A menudo, cuando tenemos un problema no somos los únicos en enfrentarnos a él. Por eso he decidido publicar aquí mi solución, algo más elaborada de cómo se la conté a él, por supuesto.
Y éste es el problema: Nuestra empresa utiliza Git, y una subcontrata utiliza Subversion.]]></description>
</item><item>
    <title>Usando Git(3): Internals</title>
    <link>https://magmax.org/blog/usando-git3/</link>
    <pubDate>Tue, 26 Nov 2013 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/usando-git3/</guid>
    <description><![CDATA[Anteriormente vimos lo más básico de Git, en dos tutoriales separados: lo más básico de git y cómo trabajar con varias working copies.
En esta ocasión me gustaría compartir cómo funciona Git desde dentro. Y muchas veces, la mejor manera de saber cómo funciona algo es construirlo. Por esa razón vamos a diseñar nuestro propio Git.
Veremos que no es tan complejo como pueda parecer, y conocer cómo funciona nos permitirá saber qué podemos hacer.]]></description>
</item><item>
    <title>Usando Git(2): varios working copies</title>
    <link>https://magmax.org/blog/usando-git2/</link>
    <pubDate>Tue, 22 Oct 2013 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/usando-git2/</guid>
    <description><![CDATA[El el tutorial anterior, Usando Git(1), vimos cómo se inicia un proyecto en Git. En esta ocasión continuaremos con dicho proyecto, haciéndolo crecer hacia nuevos retos.
En esta ocasión dispondremos de varios working copies de la aplicación, lo que provocará que necesitemos más órdenes Git. Algunas de ellas van siendo algo avanzadas.
Trataré de introducirlas en un orden lógico, a medida que podemos ir necesitándolas.
  Recordando No viene mal repasar el dibujo que derrocha arte:]]></description>
</item><item>
    <title>Usando Git(1)</title>
    <link>https://magmax.org/blog/usando-git/</link>
    <pubDate>Fri, 18 Oct 2013 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/usando-git/</guid>
    <description><![CDATA[Es habitual encontrar manuales de Git en los que se describe la estructura interna de los changesets, los ficheros y otras tecnicidades similares. Sin embargo, el otro día nos reunimos en Agile-cr y sin quererlo me di cuenta de lo sencillo que resulta explicarlo sin hablar de nada de eso.
Así que voy a intentarlo :D
A pesar de haber escrito ya otro artículo sobre Git, creo que esta vez voy ha contarlo desde un punto de vista muy diferente: uno completamente práctico.]]></description>
</item><item>
    <title>Hg vs Git</title>
    <link>https://magmax.org/blog/comparativa-mercurial-git/</link>
    <pubDate>Mon, 27 May 2013 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/comparativa-mercurial-git/</guid>
    <description><![CDATA[Vamos con tópicos: Mercurial vs Git.
Voy a intentar desmitificar o corroborar rumores, de manera unívoca y que cualquiera pueda reproducir.
Este artículo y los siguientes admiten colaboraciones :D
  Este artículo es un coñazo Pues sí. Este artículo es un coñazo total. Por eso voy a comenzar por el final: las conclusiones. Así, los crédulos, pueden evitarse la parte de demostración y leer sólo las conclusiones. Los incrédulos pueden llegar hasta el final y comprobar que he tratado de ser todo lo objetivo posible.]]></description>
</item><item>
    <title>Guardar la configuración de tu máquina</title>
    <link>https://magmax.org/blog/home-en-git/</link>
    <pubDate>Sat, 01 Dec 2012 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/home-en-git/</guid>
    <description><![CDATA[Antes, cuando cambiaba mi PC, siempre me encontraba con el mismo problema: tener que reconfigurar todas mis aplicaciones. Gracias a GNU/Linux, descubrí que era más sencillo mantener mi home en otra partición, de manera que podía conservar esta configuración.
Ahora, por suerte o por desgracia, no trabajo en una única máquina: tengo un PC y dos portátiles; en el curro tengo mi portátil, una máquina virtual hosted donde suelo trabajar, una máquina virtual unhosted que puedo volver a crear de vez en cuando y&hellip; bueno&hellip; otras 60 máquinas en las que puedo llegar a necesitar hacer algo.]]></description>
</item><item>
    <title>Git</title>
    <link>https://magmax.org/blog/git/</link>
    <pubDate>Thu, 29 Nov 2012 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/git/</guid>
    <description><![CDATA[Tenía que ocurrir más tarde o más temprano. Y es que tenía que hablar de GIT. Es lo que tiene ser influenciado por Daniel Fanjul XD
Git es un sistema de control de versiones. Bueno, en realidad es algo más que eso. Es un sistema de ficheros sobre el que se ha construido un sistema de control de versiones.
No soy un experto, pero creo que a lo básico llego. Y, la verdad, me hacía falta este artículo antes de escribir el siguiente XD]]></description>
</item></channel>
</rss>
