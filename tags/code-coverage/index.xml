<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>code coverage on El blog de MagMax</title>
    <link>https://magmax.org/tags/code-coverage/</link>
    <description>Recent content in code coverage on El blog de MagMax</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 05 Dec 2011 00:00:00 +0000</lastBuildDate><atom:link href="https://magmax.org/tags/code-coverage/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Code Coverage o cómo engañarte a ti mismo</title>
      <link>https://magmax.org/blog/codecoverage/</link>
      <pubDate>Mon, 05 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/blog/codecoverage/</guid>
      <description>
        
          &lt;p&gt;Viene siendo muy habitual pensar que las pruebas son sinónimo de corrección y que es importante tener una gran cobertura de código. Voy a tratar de demostrar que esto no es así.&lt;/p&gt;
&lt;p&gt;Ojo&amp;hellip; con ello no digo que estén mal, sino que es necesario saber de qué estamos hablando. Yo soy partidario de un número de pruebas adecuado y de un porcentaje de cobertura&amp;hellip; suficiente.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/test.jpg&#34;
         alt=&#34;Testing&#34;/&gt; 
&lt;/figure&gt;

&lt;h2 id=&#34;si-está-probado-funciona&#34;&gt;Si está probado, funciona&lt;/h2&gt;
&lt;p&gt;Sabemos que está probado, pero&amp;hellip; ¿cubrimos todos los casos de uso? ¿Hemos cometido un error en las pruebas? ¿Se ha modificado el código después de realizar las pruebas?&lt;/p&gt;
&lt;p&gt;Pasar las pruebas no es sinónimo de correctitud. &lt;em&gt;No pasar las pruebas sí es sinónimo de error&lt;/em&gt;. El error puede estar en las pruebas o en el código, pero es una llamada de atención sobre aquéllo que debemos revisar.&lt;/p&gt;
&lt;p&gt;Si encontramos un problema no contemplado en las pruebas, deberíamos añadirlo a la batería para que no vuelva a ocurrir.&lt;/p&gt;
&lt;h2 id=&#34;cobertura-del-100&#34;&gt;Cobertura del 100%&lt;/h2&gt;
&lt;p&gt;Una cobertura de código amplia no puede ser mala. Lo malo puede ser no saber cómo interpretarlo.&lt;/p&gt;
&lt;p&gt;Nuevamente, no podemos tomar por buena la definición en positivo, sino que hay que tomarla en negativo: No significa que cada línea de código por la que pasamos esté probada. &lt;em&gt;Signfica que cada línea de código por la que no pasamos, no está probada en absoluto&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Por poner un ejemplo muy sencillo: Tenemos una simple división de tipo :
&lt;code&gt;a / b&lt;/code&gt;. En esta operación, &lt;code&gt;a&lt;/code&gt; vale 3 y &lt;code&gt;b&lt;/code&gt; vale 1. El porcentaje de cobertura
es del 100%, &lt;em&gt;pero es evidente que fallará cuando &lt;code&gt;b&lt;/code&gt; valga 0&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&#34;conclusión&#34;&gt;Conclusión&lt;/h2&gt;
&lt;p&gt;Así que las pruebas están bien, y la cobertura está bien, pero sólo si sabemos realmente lo que significan.&lt;/p&gt;
&lt;p&gt;¿Cuál es el porcentaje de cobertura adecuado? &lt;a href=&#34;https://googletesting.blogspot.com/2010/07/code-coverage-goal-80-and-no-less.html&#34;&gt;Todos sabemos que el porcentaje
bueno de cobertura es el 80%, ¡¡y no menos!!&lt;/a&gt;  (&lt;a href=&#34;https://magmax.org/blog/cobertura-80/&#34;&gt;traducido por mí, si queréis&lt;/a&gt;)&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Objetivo de cobertura de código: ¡el 80% y no menos!</title>
      <link>https://magmax.org/blog/cobertura-80/</link>
      <pubDate>Mon, 21 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/blog/cobertura-80/</guid>
      <description>
        
          &lt;p&gt;Siguiendo con las traducciones de artículos realmente interesantes con los que
me he cruzado, llego a uno bastante curioso. Yo lo leí de la web de
&lt;a href=&#34;https://googletesting.blogspot.com/&#34;&gt;googletesting&lt;/a&gt;  y es el que procedo a traducir.&lt;/p&gt;
&lt;p&gt;El autor original es Alberto Savoia, y el artículo original se titulaba
&lt;a href=&#34;https://googletesting.blogspot.com/2010/07/code-coverage-goal-80-and-no-less.html&#34;&gt;Code coverage goal: 80% and no less!&lt;/a&gt;.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/poetry.jpg&#34;/&gt; 
&lt;/figure&gt;

&lt;hr&gt;
&lt;p&gt;Inicialmente posteé (Alberto Savoia) este artículo hace unos cuantos años la web
de &lt;a href=&#34;https://www.artima.com/weblogs/viewpost.jsp?thread=204677&#34;&gt;Artima Developer&lt;/a&gt;; pero la pregunta de cuál es la cobertura de código
apropiada sigue surgiendo, así que pensé que era hora de volver a publicar &lt;a href=&#34;https://www.scribd.com/doc/69769/TheWayOfTestivus&#34;&gt;la
sabiduría de Testivus&lt;/a&gt; sobre el tema.&lt;/p&gt;
&lt;h2 id=&#34;testivus-y-la-cobertura-de-código&#34;&gt;Testivus y la Cobertura de Código&lt;/h2&gt;
&lt;p&gt;Una mañana temprano, un joven programador preguntó al gran maestro:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Estoy preparado para escribir algunas pruebas unitarias. ¿Qué cobertura de código debo conseguir?&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;El gran maestro respondió:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;No te preocupes de la cobertura, tan sólo escribe algunas buenas pruebas.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;El joven programador sonrió, saludó, y se fue.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Ese mismo día más tarde, una segunda programadora realizó la misma pregunta.&lt;/p&gt;
&lt;p&gt;El gran maestro señaló una cazuela de agua hiviendo y preguntó:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;¿Cuántos granos de arroz debería poner en esa cazuela?&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;La programadora, perpleja, replicó:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;¿Cómo podría decirlo? Depende de cuánta gente tengas que alimentar, cómo estén de hambrientos, qué otra comida vayas a servir, cuánto arroz tengas disponible, y otras cosas.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Exacto&amp;rdquo;, dijo el gran maestro.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;La segunda programadora sonrió, saludó, y se fue.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Hacia el final del día, un tercer programador llegó y realizó la misma pregunta sobre la cobertura de código.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;¡El ochenta porciento y no menos!&amp;rdquo; Replicó el maestro con voz severa, golpeando con el puño en la mesa.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;El tercer programador sonrió, saludó y se fue.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Después de todo esto, un joven aprendiz se acercó al gran maestro:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Gran maestro, hoy le he oído responder la misma pregunta sobre la cobertura de código con tres repuestas diferentes. ¿Por qué?&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;El gran maestro se levantó de su silla:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Tómate algo de té fresco conmigo y hablemos de ello&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Después de rellenar sus tazas con humeante té verde caliente, el gran maestro comenzó:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;El primer programador era novato y acaba de empezar con las pruebas. Ahora mismo tiene mucho código pero ninguna prueba. Tiene un largo camino que recorrer; centrarse en la cobertura de código en este momento sería deprimente y totalmente inútil. Es mejor que se vaya acostumbrando a escribir y ejecutar algunas pruebas. Ya se preocupará de la cobertura más adelante.&lt;/p&gt;
&lt;p&gt;La segunda programadora, por otro lado, está muy experimentada tanto en programación como en pruebas. Cuando le respondí preguntándole cuántos granos de arroz debería poner en la cazuela, le ayudé a que se diera cuenta de que la cantidad de pruebas necesaria depende de cierto número de factores, y ella sabe esos factores mejor que yo mismo -al fin y al cabo es su código. No hay una respuesta única, simple, y ella es lo suficientemente inteligente como para manejar la verdad y trabajar con eso.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Ya veo&amp;rdquo;, dijo el joven aprendiz, &amp;ldquo;pero si no hay una respuesta simple, entonces porqué le dijo al tercer programador que &amp;lsquo;El ochenta porciento y no menos&amp;rsquo;?&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;El gran maestro se rió tan fuerte y alto que su barriga, evidencia de que había bebido algo más que el té verde, se agitó arriba y abajo.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;El tercer programador sólo quería respuestas simples - incluso cuando no hay respuestas simples&amp;hellip; y al fin y al cabo no va a seguirlas de ninguna manera.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;El joven aprendiz y el canoso gran maestro terminaron de beber su té en contemplativo silencio.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Original: &lt;a href=&#34;https://googletesting.blogspot.com/2010/07/code-coverage-goal-80-and-no-less.html&#34;&gt;&amp;ldquo;Code coverage goal: 80% and no less!&amp;quot;&lt;/a&gt;, de Alberto Savoia.&lt;/p&gt;
&lt;p&gt;Traducción: &lt;a href=&#34;https://magmax.org/blog/cobertura-80/&#34;&gt;&amp;ldquo;Objetivo de cobertura de código: ¡el 80% y no menos!&amp;quot;&lt;/a&gt;, por Miguel Ángel García&lt;/p&gt;

        
      </description>
    </item>
    
  </channel>
</rss>
