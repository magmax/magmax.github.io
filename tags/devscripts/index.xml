<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>devscripts on El blog de MagMax</title>
    <link>https://magmax.org/tags/devscripts/</link>
    <description>Recent content in devscripts on El blog de MagMax</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 30 Jan 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://magmax.org/tags/devscripts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>annotate-output</title>
      <link>https://magmax.org/blog/annotate-output/</link>
      <pubDate>Fri, 30 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/blog/annotate-output/</guid>
      <description>
        
          &lt;p&gt;A menudo me sorprendo con pequeñas utilidades poco conocidas pero muy interesantes.&lt;/p&gt;
&lt;p&gt;Tal es el caso de &lt;code&gt;annotate-output&lt;/code&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/tips.jpg&#34;
         alt=&#34;Tips&#34;/&gt; 
&lt;/figure&gt;

&lt;h1 id=&#34;instalación-de-annotate-output&#34;&gt;Instalación de annotate-output&lt;/h1&gt;
&lt;p&gt;Es una pequeña utilidad que se encuentra en el paquete debian &lt;a href=&#34;https://packages.debian.org/wheezy/devscripts&#34;&gt;devscripts&lt;/a&gt;, por lo que su instalación es tan simple como:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;  apt-get install devscripts
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;para-qué-sirve&#34;&gt;Para qué sirve&lt;/h1&gt;
&lt;p&gt;Como su propio nombre indica, pone notas en la salida. Estas notas son la fecha y el tipo de salida utilizada (&lt;em&gt;stdin&lt;/em&gt; , &lt;em&gt;stdout&lt;/em&gt; o &lt;em&gt;stderr&lt;/em&gt;). Por ejemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;    $ ls
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;    appveyor.yml       dodo.py           output/                         setup.cfg
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;    AUTHORS.txt        foo/              python_dateutil-2.2-py2.7.egg/  setup.py*
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;    bower_components/  LICENSE.txt       README.rst                      tests/
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;    bower.json         logo/             requirements-extras.txt         translations/
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;    CHANGES.txt        MANIFEST.in       requirements-tests.txt          venv/
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;    CONTRIBUTING.rst   nikola/           requirements.txt
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;    docs/              Nikola.egg-info/  scripts/
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;    $ annotate-output ls
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;    17:07:57 I: Started ls
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;    17:07:57 O: appveyor.yml
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;    17:07:57 O: AUTHORS.txt
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;    17:07:57 O: bower_components
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;    17:07:57 O: bower.json
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;    17:07:57 O: CHANGES.txt
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17&lt;/span&gt;    17:07:57 O: CONTRIBUTING.rst
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18&lt;/span&gt;    17:07:57 O: docs
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19&lt;/span&gt;    17:07:57 O: dodo.py
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20&lt;/span&gt;    17:07:57 O: foo
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21&lt;/span&gt;    17:07:57 O: LICENSE.txt
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22&lt;/span&gt;    17:07:57 O: logo
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23&lt;/span&gt;    17:07:57 O: MANIFEST.in
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24&lt;/span&gt;    17:07:57 O: nikola
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25&lt;/span&gt;    17:07:57 O: Nikola.egg-info
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26&lt;/span&gt;    17:07:57 O: output
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27&lt;/span&gt;    17:07:57 O: python_dateutil-2.2-py2.7.egg
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28&lt;/span&gt;    17:07:57 O: README.rst
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29&lt;/span&gt;    17:07:57 O: requirements-extras.txt
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30&lt;/span&gt;    17:07:57 O: requirements-tests.txt
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31&lt;/span&gt;    17:07:57 O: requirements.txt
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32&lt;/span&gt;    17:07:57 O: scripts
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;33&lt;/span&gt;    17:07:57 O: setup.cfg
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;34&lt;/span&gt;    17:07:57 O: setup.py
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;35&lt;/span&gt;    17:07:57 O: tests
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;36&lt;/span&gt;    17:07:57 O: translations
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;37&lt;/span&gt;    17:07:57 O: venv
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;38&lt;/span&gt;    17:07:57 I: Finished with exitcode &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Como se puede observar, indica la hora y añade una &lt;code&gt;O&lt;/code&gt; para la salida, una &lt;code&gt;I&lt;/code&gt; para mensajes de información. Además añadiría una &lt;code&gt;E&lt;/code&gt; para la salida de error:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;    $ annotate-output ls /foo
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;    17:09:54 I: Started ls /foo
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;    17:09:54 E: ls: no se puede acceder a /foo: No existe el fichero o el directorio
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&lt;/span&gt;    17:09:54 I: Finished with exitcode &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;por-qué-me-parece-tan-interesante&#34;&gt;Por qué me parece tan interesante&lt;/h1&gt;
&lt;p&gt;En algunos casos puede ser importante cuánto tarda en ejecutar algún paso:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tareas lentas&lt;/li&gt;
&lt;li&gt;Tareas con mucha salida&lt;/li&gt;
&lt;li&gt;Tareas en background&lt;/li&gt;
&lt;li&gt;Salida de cron&lt;/li&gt;
&lt;li&gt;Mensajes de nuestro entorno de integración contínua (&lt;a href=&#34;https://jenkins-ci.org/&#34;&gt;Jenkins&lt;/a&gt;, &lt;a href=&#34;https://travis-ci.org/&#34;&gt;Travis&lt;/a&gt;, &amp;hellip;) o ejecuciones de &lt;code&gt;Make&lt;/code&gt; en general.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sabiendo la hora de ejecución podemos inferir muchas cosas: Cuánto tardó en ejecutar cierto paso, la hora de un error, &amp;hellip; O, simplemente, filtrar a posteriori la salida de error con un simple &lt;code&gt;grep&lt;/code&gt;.&lt;/p&gt;
&lt;h1 id=&#34;para-qué-más-sirve&#34;&gt;¿Para qué más sirve?&lt;/h1&gt;
&lt;p&gt;Siguiendo la filosofía &lt;em&gt;Unix&lt;/em&gt;, &amp;ldquo;pequeñas herramientas que hacen una tarea y la hacen bien&amp;rdquo;, ésta es su utilidad. A parte de poder cambiar el formato de la fecha, no permite hacer nada más.&lt;/p&gt;

        
      </description>
    </item>
    
  </channel>
</rss>
