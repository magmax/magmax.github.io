<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>nosql - Etiqueta - El blog de MagMax</title>
        <link>https://magmax.org/tags/nosql/</link>
        <description>nosql - Etiqueta - El blog de MagMax</description>
        <generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Mon, 12 May 2014 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://magmax.org/tags/nosql/" rel="self" type="application/rss+xml" /><item>
    <title>ElasticSearch y Logstash</title>
    <link>https://magmax.org/blog/elasticsearch-y-logstash/</link>
    <pubDate>Mon, 12 May 2014 00:00:00 &#43;0000</pubDate>
    <author>Miguel Ángel</author>
    <guid>https://magmax.org/blog/elasticsearch-y-logstash/</guid>
    <description><![CDATA[<p>Se han puesto de moda las bases de datos No-SQL. El tratamiento de datos masivo y el escalado horizontal (<a href="https://en.wikipedia.org/wiki/Shard_%28database_architecture%29" target="_blank" rel="noopener noreffer ">sharding</a>) están a la orden del día.</p>
<p>Gestionar granjas de servidores es cada día más común, y cada vez es todo más distribuido.</p>
<p>Esta distribución dificulta la gestión de logs y trazas: ¿Qué ocurrió para que saltara una excepción, cuando cada paso de la ejecución se realizó en una máquina diferente?</p>
<p>Es en este escenario en el que surge una solución libre con <a href="https://logstash.net/" target="_blank" rel="noopener noreffer ">Logstash</a> y <a href="https://www.elasticsearch.org/" target="_blank" rel="noopener noreffer ">ElasticSearch</a>.</p>]]></description>
</item>
<item>
    <title>Retrospectiva OpenSpace Persistencia</title>
    <link>https://magmax.org/blog/retrospective-openspace-persistence/</link>
    <pubDate>Sat, 19 Jan 2013 00:00:00 &#43;0000</pubDate>
    <author>Miguel Ángel</author>
    <guid>https://magmax.org/blog/retrospective-openspace-persistence/</guid>
    <description><![CDATA[<p>Como después de cada evento al que asisto, aquí está la retrospectiva. En este caso consiste en un OpenSpace dedicado a la Persistencia y, como está de moda, a hablar de <a href="https://es.wikipedia.org/wiki/NoSQL" target="_blank" rel="noopener noreffer ">NoSQL</a> a muerte.</p>
<p>Llegué sin tener ni idea y me voy con un montón de conceptos que tengo que revisar en casa. Es probable que haya mezclado cosas o que otras las explique fatal. Tomé mogollón de notas y es gracias a éstas que voy a escribir este artículo, pero no creo que sirvan para aprender nada, sino como guía de aquéllo que hay que aprender.</p>]]></description>
</item>
<item>
    <title>MongoDB</title>
    <link>https://magmax.org/blog/mongodb/</link>
    <pubDate>Thu, 30 Aug 2012 00:00:00 &#43;0000</pubDate>
    <author>Miguel Ángel</author>
    <guid>https://magmax.org/blog/mongodb/</guid>
    <description><![CDATA[<p>En este artículo voy a exponer un problema, como de costumbre, y a resolverlo de la manera más rápida posible. Una vez hecho esto, trataré de cambiarlo para que utilice MongoDB para la persistencia. Usaré YAGNI.</p>
<p>No soy un experto en MongoDB, sino que estoy comenzando mis primeros pinitos. Por eso voy a tratar de explicarlo como yo lo veo.</p>
<p>El problema es el siguiente: quiero un programa que me permita gestionar mi biblioteca. Algo sencillo: sólo libro y autor. Y quiero poder buscar un libro por el título.</p>
<p>La idea de este artículo partió del titulado &ldquo;<a href="https://www.carlosble.com/2012/08/diseno-emergente-tambien-para-la-base-de-datos/" target="_blank" rel="noopener noreffer ">Diseño emergente, también para la base de datos</a>&rdquo;, por <a href="https://twitter.com/carlosble" target="_blank" rel="noopener noreffer ">Carlos Blé</a>.</p>
<p>Usaré python y freshen.</p>]]></description>
</item>
</channel>
</rss>
