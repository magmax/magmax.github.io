<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>mock - Etiqueta - El blog de MagMax</title>
        <link>https://magmax.org/tags/mock/</link>
        <description>mock - Etiqueta - El blog de MagMax</description>
        <generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Wed, 17 Nov 2010 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://magmax.org/tags/mock/" rel="self" type="application/rss+xml" /><item>
    <title>Pruebas unitarias: Mocks y Stubs</title>
    <link>https://magmax.org/blog/mocks-y-stubs/</link>
    <pubDate>Wed, 17 Nov 2010 00:00:00 &#43;0000</pubDate>
    <author>Miguel Ángel</author>
    <guid>https://magmax.org/blog/mocks-y-stubs/</guid>
    <description><![CDATA[<p>Cuando estamos desarrollando, es necesario probar lo que estamos haciendo. En ocasiones esto puede resultar muy difícil (y más aún cuando no se ha hecho TDD), o muy lento.</p>
<p>En este artículo trataré de dar una introducción a la utilización de MOCKs y STUBs en estos casos.</p>
<p>En los ejemplos usaré Java y la librería <a href="https://code.google.com/p/mockito/" target="_blank" rel="noopener noreffer ">mockito</a> .</p>
<p>Voy a comenzar por plantear unas premisas: Las pruebas deben ser unitarias, rápidas e inocuas (no alteran el estado inicial).</p>]]></description>
</item>
</channel>
</rss>
