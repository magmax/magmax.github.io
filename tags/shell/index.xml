<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>shell on El blog de MagMax</title>
    <link>https://magmax.org/tags/shell/</link>
    <description>Recent content in shell on El blog de MagMax</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 07 Feb 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://magmax.org/tags/shell/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fish y Zsh</title>
      <link>https://magmax.org/blog/fish-y-zsh/</link>
      <pubDate>Sat, 07 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/blog/fish-y-zsh/</guid>
      <description>
        
          &lt;p&gt;Aunque estamos acostumbrados a utilizar Bash, existen otras alternativas. De hecho, no todo el mundo sabe que Debian_ ha cambiado la *shell* por defecto a Dash_.&lt;/p&gt;
&lt;p&gt;Es importante saber qué estamos usando, ya que puede fastidiar algunos de los &lt;em&gt;scripts&lt;/em&gt; que tengamos:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;ls -lh &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;which sh&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;lrwxrwxrwx &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; nov  &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; 00:00 /bin/sh -&amp;gt; dash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;En el artículo de hoy presentaré dos alternativas más: Fis] y Zs].&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/tips.jpg&#34;
         alt=&#34;Truquillos&#34;/&gt; 
&lt;/figure&gt;

&lt;h2 id=&#34;historia&#34;&gt;Historia&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.gnu.org/software/bash/&#34;&gt;Bash&lt;/a&gt; por sí solo se me hizo poco hace muchísimo tiempo, y comencé a utilizar
la extensión &lt;a href=&#34;https://bash-completion.alioth.debian.org/&#34;&gt;bash_completion&lt;/a&gt;. Esta utilidad me permitía completar los
&lt;em&gt;targets&lt;/em&gt; de los &lt;em&gt;Makefiles&lt;/em&gt; y otra serie de mejoras que &lt;a href=&#34;https://www.gnu.org/software/bash/&#34;&gt;Bash&lt;/a&gt; por sí mismo no
soportaba.&lt;/p&gt;
&lt;p&gt;Sin embargo, me sabía a poco. Conocí &lt;a href=&#34;https://zsh.sourceforge.net/&#34;&gt;Zsh&lt;/a&gt;, pero me pareció demasiado complejo
de configurar, por lo que decidí pasarme a Fish_. Llevo meses utilizando Fish_
como *shell* principal, pero ahora he vuelto a Zsh_ gracias al proyecto
&lt;a href=&#34;https://github.com/robbyrussell/oh-my-zsh&#34;&gt;Oh_my_Zsh&lt;/a&gt;, que hace que &lt;a href=&#34;https://zsh.sourceforge.net/&#34;&gt;Zsh&lt;/a&gt; sea mucho más sencillo de configurar.&lt;/p&gt;
&lt;p&gt;No he sido el único en seguir este camino, por eso me gustaría contaros qué he visto de bueno y de malo en cada paso del camino.&lt;/p&gt;
&lt;h2 id=&#34;fish-y-zsh&#34;&gt;Fish y Zsh&lt;/h2&gt;
&lt;h3 id=&#34;fish&#34;&gt;Fish&lt;/h3&gt;
&lt;p&gt;La &lt;strong&gt;&amp;ldquo;Friendly shell&amp;rdquo;&lt;/strong&gt; ofrece las siguientes ventajas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Sugerencias automáticas&lt;/strong&gt;: aprende de la historia previa para ofrecerte sugerencias de &lt;em&gt;completion&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Color&lt;/strong&gt;: 256 colores, que se definen como en cualquier web.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Lenguaje:&lt;/strong&gt; Ofrece un lenguaje de &lt;em&gt;scripting&lt;/em&gt; más sencillo que &lt;a href=&#34;https://www.gnu.org/software/bash/&#34;&gt;Bash&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Por poner un ejemplo de esto último, en bash:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i in &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;seq 10&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; echo $i; &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;En &lt;a href=&#34;https://fishshell.com/&#34;&gt;Fish&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-fish&#34; data-lang=&#34;fish&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;seq 10&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;echo&lt;/span&gt; $i; &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Esta característica es una espada de Damocles: Por un lado te ofrece un lenguaje
más sencillo, pero por otro, estoy demasiado acostumbrado al lenguaje de &lt;a href=&#34;https://www.gnu.org/software/bash/&#34;&gt;Bash&lt;/a&gt;.
Al final, siempre tengo que cambiarme a bash para ejecutar un script de este
tipo. Además, no es capaz de ejecutar programas &lt;a href=&#34;https://www.gnu.org/software/bash/&#34;&gt;Bash&lt;/a&gt;, muy útiles al usar
&lt;a href=&#34;https://virtualenv.pypa.io/en/latest/&#34;&gt;VirtualEnv&lt;/a&gt;, por ejemplo. De hecho, &lt;a href=&#34;https://virtualenv.pypa.io/en/latest/&#34;&gt;VirtualEnv&lt;/a&gt; ofrece un &amp;ldquo;sabor&amp;rdquo; de script sólo
para &lt;a href=&#34;https://fishshell.com/&#34;&gt;Fish&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Algo muy bueno es que ignora mayúsculas y minúsculas. Sin embargo, a veces me ofrece la que no es, lo que es un problema al indicar una opción (ejemplo: &lt;code&gt;ls -lH&lt;/code&gt;) y resulta difícil indicarle que no es lo que quiero.&lt;/p&gt;
&lt;p&gt;Otro problema es la &lt;em&gt;completion&lt;/em&gt;, ya que &lt;a href=&#34;https://github.com/fish-shell/fish-shell/issues/1766&#34;&gt;en ocasiones me escapa el símbolo de
escape&lt;/a&gt;, resultando en cadenas como &lt;code&gt;foo\\\ bar&lt;/code&gt; cuando yo espero &lt;code&gt;foo\ bar&lt;/code&gt;, haciéndome ir más lento. Se supone que este problema está arreglado en la
última versión de desarrollo, ésa por la que llevo esperando más de 3 meses.&lt;/p&gt;
&lt;p&gt;Algo que me gusta mucho de &lt;a href=&#34;https://fishshell.com/&#34;&gt;Fish&lt;/a&gt; y que ha dejado impresionado a más de un colega son las &lt;strong&gt;sugerencias automáticas&lt;/strong&gt;, ya que te va mostrando la sugerencia más probable a medida que escribes. Debo decir que la tasa de acierto es realmente buena.&lt;/p&gt;
&lt;p&gt;Y también está genial el cambio de colores: si estás escribiendo una órden errónea, estará en rojo, mientras que si la orden, opción, etc. existe, pasa a verde.&lt;/p&gt;
&lt;h3 id=&#34;zsh&#34;&gt;Zsh&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://zsh.sourceforge.net/&#34;&gt;Zsh&lt;/a&gt; es un infierno de configuración&amp;hellip; Salvo que utilices &lt;a href=&#34;https://github.com/robbyrussell/oh-my-zsh&#34;&gt;Oh_my_Zsh&lt;/a&gt;. Esta extensión permite gestionar plugins, temas, etc. Hay muchos donde elegir.&lt;/p&gt;
&lt;p&gt;La &lt;em&gt;completion&lt;/em&gt; ignora mayúsculas y minúsculas, y te muestra una lista con las opciones, marcando la actual, que puedes recorrer con &lt;em&gt;TAB&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Es totalmente compatible con &lt;a href=&#34;https://www.gnu.org/software/bash/&#34;&gt;Bash&lt;/a&gt;, por lo que no es necesario adaptar los scripts ni aprender un lenguaje nuevo.&lt;/p&gt;
&lt;p&gt;Sin embargo, estoy acostumbrado a utilizar &lt;code&gt;ALT + arrow&lt;/code&gt; para moverme entre
palabras, cosa que aún no he conseguido echar a andar. Creo que se debe a mi
&lt;a href=&#34;https://wiki.archlinux.org/index.php/rxvt-unicode&#34;&gt;urxvt&lt;/a&gt;. Tendré que acostumbrarme a usar &lt;code&gt;CTRL + F&lt;/code&gt; y &lt;code&gt;CTRL + B&lt;/code&gt;, que son estándar.&lt;/p&gt;
&lt;p&gt;Llevo poco tiempo usándola y no he encontrado más problemas&amp;hellip; Bueno, sí, que la
&lt;a href=&#34;https://www.bash2zsh.com/zsh_refcard/refcard.pdf&#34;&gt;Cheat Sheet&lt;/a&gt; son 14 páginas bien aprovechadas :D&lt;/p&gt;
&lt;h2 id=&#34;conclusión&#34;&gt;Conclusión&lt;/h2&gt;
&lt;p&gt;Es muy interesante salir de nuestra zona de confort y buscar cosas nuevas, hasta en lo más pequeño que, en este caso, también es de lo más utilizado.&lt;/p&gt;
&lt;p&gt;Yo me muevo constantemente en la consola, hasta el punto de haberla transformado
en un IDE gracias a &lt;a href=&#34;https://tmux.sourceforge.net/&#34;&gt;tmux&lt;/a&gt; y &lt;a href=&#34;https://github.com/tmuxinator/tmuxinator&#34;&gt;tmuxinator&lt;/a&gt;, por lo que un cambio de &lt;em&gt;shell&lt;/em&gt; es más importante de lo que parece.&lt;/p&gt;
&lt;p&gt;Así que yo recomendaría probar otras alternativas. Quien sabe&amp;hellip; ¡Quizá alguna te sorprenda!&lt;/p&gt;

        
      </description>
    </item>
    
  </channel>
</rss>
