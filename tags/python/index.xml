<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>python - Etiqueta - El blog de MagMax</title>
        <link>https://magmax.org/tags/python/</link>
        <description>python - Etiqueta - El blog de MagMax</description>
        <generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Sun, 20 Nov 2016 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://magmax.org/tags/python/" rel="self" type="application/rss+xml" /><item>
    <title>Plugins en Python</title>
    <link>https://magmax.org/blog/plugins-en-python/</link>
    <pubDate>Sun, 20 Nov 2016 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/plugins-en-python/</guid>
    <description><![CDATA[Siempre me ha gustado escribir aplicaciones extensibles, pero picarme todo un sistema de plugins me ha parecido tedioso.
Por eso he intentado buscar librerías que me ayuden a crear plugins, aunque siempre he tenido problemas para la distribución de éstos, como me ha pasado con Yapsy.
La verdad es que me he sentido como un auténtico estúpido al descubrir que Python tiene un sistema para escribir plugins muy sencillo de usar.]]></description>
</item><item>
    <title>ipython autoreload</title>
    <link>https://magmax.org/blog/ipython-autoreload/</link>
    <pubDate>Fri, 10 Jun 2016 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/ipython-autoreload/</guid>
    <description><![CDATA[Cuando alguien está chalao, escribe un intérprete de su lenguaje favorito.
Cuando alguien está loco del todo, escribe ipython.
Resulta difícil describir qué es ipython&hellip; Ya que resulta difícil saber qué no es. Quedémonos con que es un intérprete de Python con esteroides.
Uno de esos esteroides es que nos permite recargar automáticamente los módulos en cuanto cambia algún fichero. Y aquí os explico cómo hacerlo.
  Método manual Arrancamos ipython y cargamos la extensión &ldquo;autoreload&rdquo;:]]></description>
</item><item>
    <title>Calculando la letra del DNI</title>
    <link>https://magmax.org/blog/calculando-la-letra-del-dni/</link>
    <pubDate>Thu, 06 Aug 2015 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/calculando-la-letra-del-dni/</guid>
    <description><![CDATA[Hay pequeños algoritmos que pueden ser muy útiles, como calcular la letra del DNI.
Puede valer tanto para solicitar el NIF y calcularla como para algo mucho más útil y menos usado: para validar que el DNI es válido.
Vamos a ver cómo hacerlo en Python, Ruby y Javascript
  Algoritmo Acordaos de esta secuencia: TRWAGMYFPDXBNJZSQVHLCKE Ésta es la clave para calcular la letra de un NIF y obtener el DNI.]]></description>
</item><item>
    <title>Yapsy, un sistema de plugins pythónico</title>
    <link>https://magmax.org/blog/yapsy-un-sistema-de-plugins-pythonico/</link>
    <pubDate>Thu, 09 Jul 2015 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/yapsy-un-sistema-de-plugins-pythonico/</guid>
    <description><![CDATA[Me gustan los programas que pueden evolucionar. Un reproductor de vídeo debe evolucionar a medida que lo hacen los formatos de vídeo, adaptándose a los nuevos.
Además, me gustan los programas que puedo extender. Añadir nueva funcionalidad que los desarrolladores originales no pensaron en su momento.
Éstas son dos de las aplicaciones de los plugins, y podemos tenerlas de una forma muy sencilla en Python mediante Yapsy
Yapsy nos ayuda a la gestión de los plugins mediante la búsqueda, carga y gestión automáticas.]]></description>
</item><item>
    <title>Peewee, un ORM para Python</title>
    <link>https://magmax.org/blog/peewee-un-orm-para-python/</link>
    <pubDate>Thu, 16 Apr 2015 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/peewee-un-orm-para-python/</guid>
    <description><![CDATA[Estoy acostumbrándome a usar Django para casi todo, y su ORM para acceder a la base de datos. Es muy completo y permite evitar tener que escribir SQL a mano, añadiendo la posibilidad de cambiar de motor de base de datos sin que sea traumático.
Sin embargo, a veces necesito guardar cosas en disco desde programas de línea de órdenes, y no me parece bien depender de Django para algo así.]]></description>
</item><item>
    <title>Python distribuido: Celery</title>
    <link>https://magmax.org/blog/python-distribuido-celery/</link>
    <pubDate>Fri, 20 Mar 2015 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/python-distribuido-celery/</guid>
    <description><![CDATA[Ahora están de modas las arquitecturas SOA . Estas arquitecturas consisten en pequeños servicios muy específicos, de manera que interactúan unos con otros.
En esta ocasión voy a contar cómo utilizar Celery para crear una arquitectura SOA.
  Qué es Celery No puede decirse que sea un sistema de comunicaciones, ya que el sistema de comunicaciones es RabbitMQ, Redis, etc. Como usa uno de ellos, no puede ser un sistema de colas de mensajes.]]></description>
</item><item>
    <title>Django lo hizo un mago: plantillas y contextos</title>
    <link>https://magmax.org/blog/django-lo-hizo-un-mago-plantillas-y-contextos/</link>
    <pubDate>Thu, 12 Mar 2015 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/django-lo-hizo-un-mago-plantillas-y-contextos/</guid>
    <description><![CDATA[En el tutorial Django lo hizo un mago expliqué los conceptos básicos de Django]. En Django lo hizo un mago: paginación y detalle añadimos paginación y la ventana de detalle. En esta ocasión vamos a ponerlo bonito mediante plantillas, y crearemos cierto estilo añadiendo también contextos.
Para los que sepan algo de Django, no es necesario seguir los tutoriales anteriores, aunque sí es recomendable para los más novatos :D
  Cómo leer este artículo Nuevamente, hay tres maneras de leer este artículo.]]></description>
</item><item>
    <title>Django lo hizo un mago: paginación y detalle</title>
    <link>https://magmax.org/blog/django-lo-hizo-un-mago-paginacion-y-detalle/</link>
    <pubDate>Thu, 26 Feb 2015 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/django-lo-hizo-un-mago-paginacion-y-detalle/</guid>
    <description><![CDATA[En el artículo anterior Django lo hizo un mago creamos un entorno básico con un listado de posts para un blog. En esta ocasión vamos a añadir más funcionalidad.
En concreto, veremos cómo visualizar cada post (lo que llamaremos detalle), y añadiremos paginación.
Pero antes un extra: Añadir elementos aleatorios de pruebas fácilmente con sampledatahelper.
  Cómo leer este artículo Hay tres maneras de leer este artículo.
 Continuando tras la lectura de Django lo hizo un mago.]]></description>
</item><item>
    <title>Django lo hizo un mago</title>
    <link>https://magmax.org/blog/django-lo-hizo-un-mago/</link>
    <pubDate>Mon, 23 Feb 2015 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/django-lo-hizo-un-mago/</guid>
    <description><![CDATA[En las películas, a menudo, se encuentran errores imposibles de explicar: un tarro que se derrama y aparece lleno, gafas que aparecen y desaparecen, espadas que se transforman en martillos&hellip; En esos casos decimos que &ldquo;lo hizo un mago&rdquo;.
En esta ocasión no es que un mago haya hecho Django, sino que hay un equipo impresionante detrás. Pero sí es cierto que Django hace mucha magia.
Me gustaría comenzar aquí un pequeño tutorial rápido para usar Django, utilizando toda la magia.]]></description>
</item><item>
    <title>Retrospectiva a la #PyConEs2014 (2)</title>
    <link>https://magmax.org/blog/pycones-2014-2/</link>
    <pubDate>Mon, 19 Jan 2015 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/pycones-2014-2/</guid>
    <description><![CDATA[Con dos meses de retraso, ahí va la segunda parte de esta retrospectiva.
Siento que éste artículo no tenga la calidad habitual, pero añadir enlaces es lo que más tiempo me consume y&hellip; sinceramente, tengo muchos proyectos en la cabeza y poco tiempo. Algunos de ellos tienen que ver con la web y con artículos :)
  Más charlas Ticketea Miquel e Iñaki nos contaron algunas cosas de esta empresa, que comenzó con 4 personas, y han crecido hasta 12.]]></description>
</item></channel>
</rss>
