<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kind on El blog de MagMax</title>
    <link>https://magmax.org/tags/kind/</link>
    <description>Recent content in kind on El blog de MagMax</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 11 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://magmax.org/tags/kind/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ArgoCD con Kind</title>
      <link>https://magmax.org/blog/argocd/</link>
      <pubDate>Sun, 11 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/blog/argocd/</guid>
      <description>
        
          &lt;p&gt;En este post documento cómo ejecutar una instancia de
&lt;a href=&#34;https://argoproj.github.io/argo-cd/https://argoproj.github.io/argo-cd/&#34;&gt;ArgoCD&lt;/a&gt;
localmente, usando &lt;a href=&#34;https://kind.sigs.k8s.io/&#34;&gt;Kind&lt;/a&gt; para crear un cluster
Kubernetes.
Además, utilizaré cert-manager para crear un certificado autofirmado para
servirlo sobre HTTPS.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/argocd.jpg&#34;
         alt=&#34;Argo CD&#34;/&gt; 
&lt;/figure&gt;

&lt;h2 id=&#34;creando-el-cluster-con-kind&#34;&gt;Creando el cluster con kind&lt;/h2&gt;
&lt;p&gt;Lo primero es tener un cluster kubernetes. Se necesita tener &lt;code&gt;kind&lt;/code&gt; disponible
en el path (quizá descargándolo en &lt;code&gt;~/bin&lt;/code&gt; o &lt;code&gt;~/.local/bin&lt;/code&gt;). Ésta es la
configuración que he utilizado yo:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# kind.yaml
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
nodes:
- role: control-plane
  kubeadmConfigPatches:
  - |
    kind: InitConfiguration
    nodeRegistration:
      kubeletExtraArgs:
        node-labels: &amp;quot;ingress-ready=true&amp;quot;
  extraPortMappings:
  - containerPort: 80
    hostPort: 80
    protocol: TCP
  - containerPort: 443
    hostPort: 443
    protocol: TCP
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Así que para crear el cluster basta escribir:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;$ kind create cluster --config&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;kind.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Esperar a que el proceso completo termine y&amp;hellip; ¡Ya está!&lt;/p&gt;
&lt;h3 id=&#34;añadir-ingress-al-cluster&#34;&gt;Añadir ingress al cluster&lt;/h3&gt;
&lt;p&gt;Para añadir ingress al cluster kind, se necsita &lt;a href=&#34;https://kind.sigs.k8s.io/docs/user/ingress/&#34;&gt;añadir un controlador
ingress&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Esto es lo que he hecho yo para instalar el controlador nginx:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;$ kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/provider/kind/deploy.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Requiere un par de minutos para descargar las imágenes y&amp;hellip; ¡Hecho!&lt;/p&gt;
&lt;h2 id=&#34;cert-manager&#34;&gt;Cert manager&lt;/h2&gt;
&lt;p&gt;Bien&amp;hellip; Hagamos las cosas más o menos bien usando certificados autofirmados.
Será más sencillo de lo que pueda parecer.&lt;/p&gt;
&lt;p&gt;Para instalar cert-manager basta ejecutra:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v1.0.2/cert-manager.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Ahora se requiere un issuer. Tengo que crear este archivo:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# cert-issuer.yaml
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: test-selfsigned
spec:
  selfSigned: {}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Y ejecutar la orden siguiente:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ kubectl apply -f cert-issuer.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Eso es todo.&lt;/p&gt;
&lt;h2 id=&#34;argocd&#34;&gt;ArgoCD&lt;/h2&gt;
&lt;p&gt;Ahora le toca a ArgoCD:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ kubectl create namespace argocd
$ kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;enlace-local&#34;&gt;Enlace local&lt;/h3&gt;
&lt;p&gt;Lo serviré en &lt;em&gt;argocd.local&lt;/em&gt;. Por eso necesito modificar mi &lt;code&gt;/etc/hosts&lt;/code&gt; con
esta línea:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;127.0.0.1       localhost argocd.local

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;ingress&#34;&gt;Ingress&lt;/h3&gt;
&lt;p&gt;Una vez tenemos la URL, se requiere tener un ingress. Por eso necesito el
fichero:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: argocd-server-ingress
  namespace: argocd
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: test-selfsigned
    nginx.ingress.kubernetes.io/force-ssl-redirect: &amp;quot;true&amp;quot;
    nginx.ingress.kubernetes.io/ssl-passthrough: &amp;quot;true&amp;quot;
    nginx.ingress.kubernetes.io/backend-protocol: &amp;quot;HTTPS&amp;quot;
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: argocd-server
          servicePort: https
    host: argocd.local
  tls:
  - secretName: https-cert
    hosts:
    - argocd.local
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;y ejecutarlo:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ kubectl apply -f ingress.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;¡Y ya estará listo!&lt;/p&gt;
&lt;h3 id=&#34;acceso&#34;&gt;Acceso&lt;/h3&gt;
&lt;p&gt;Tan solo abre &lt;a href=&#34;https://argocd.local&#34;&gt;https://argocd.local&lt;/a&gt; para entrar. El usuario es admin y la
password es el nombre de la instancia docker con el servidor argo, que se puede
obtener con el comando:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ kubectl get pods -n argocd -l app.kubernetes.io/name=argocd-server -o name | cut -d&#39;/&#39; -f 2
&lt;/code&gt;&lt;/pre&gt;
        
      </description>
    </item>
    
  </channel>
</rss>
