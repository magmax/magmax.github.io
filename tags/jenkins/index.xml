<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jenkins on El blog de MagMax</title>
    <link>https://magmax.org/tags/jenkins/</link>
    <description>Recent content in jenkins on El blog de MagMax</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 13 Nov 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://magmax.org/tags/jenkins/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cambiando los colores a Jenkins</title>
      <link>https://magmax.org/blog/cambiando-los-colores-a-jenkins/</link>
      <pubDate>Fri, 13 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/blog/cambiando-los-colores-a-jenkins/</guid>
      <description>
        
          &lt;p&gt;Hay muchas razones para cambiar el estilo de &lt;a href=&#34;https://jenkins-ci.org/&#34;&gt;Jenkins/Hudson&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Distinguir dos servidores diferentes&lt;/li&gt;
&lt;li&gt;Mejorar la usabilidad&lt;/li&gt;
&lt;li&gt;Simplemente, hacerlo más mono :)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;En este post mostraré una manera sencilla de hacerlo.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/jenkins.png&#34;
         alt=&#34;Jenkins&#34;/&gt; 
&lt;/figure&gt;

&lt;p&gt;Vamos a hacerlo en dos sencillos pasos:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Añadir un plugin que nos permita añadir la CSS/JavaScript&lt;/li&gt;
&lt;li&gt;Crear la CSS o el JavaScript que nos va a permitir el diseño molón&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Además, voy a proporcionar una pequeña plantilla que puede valer para cambiar los colores de nuestro amigo :)&lt;/p&gt;
&lt;p&gt;Está claro que para gustos, colores.&lt;/p&gt;
&lt;h2 id=&#34;instalando-plugins&#34;&gt;Instalando plugins&lt;/h2&gt;
&lt;p&gt;Necesitamos instalar el plugin &lt;a href=&#34;https://wiki.jenkins-ci.org/display/JENKINS/Simple+Theme+Plugin&#34;&gt;Simple Theme Plugin&lt;/a&gt;. Para hacerlo, ya sabéis:
&lt;code&gt;Administracción de Jenkins&lt;/code&gt; -&amp;gt; &lt;code&gt;Plugins&lt;/code&gt; -&amp;gt; &lt;code&gt;Disponibles&lt;/code&gt;, lo marcáis e instaláis.&lt;/p&gt;
&lt;p&gt;Ahora tenemos que configurarlo. Para ello, nos vamos a la administracción
general de &lt;a href=&#34;https://jenkins-ci.org/&#34;&gt;Jenkins&lt;/a&gt; y buscamos la configuración de este plugin. Veremos que
tenemos dos cuadros de texto que nos permiten introducir la URL de un CSS y de
un JavaScript.&lt;/p&gt;
&lt;p&gt;Claro, que montar un servidor externo nada más que para servir esto&amp;hellip; Es un poco absurdo, ¿no?&lt;/p&gt;
&lt;p&gt;No es un problema, ya que Jenkins comparte automáticamente todo lo que esté en la carpeta &lt;code&gt;$JENKINS_HOME/userContent&lt;/code&gt;, estando accesible en &lt;code&gt;https://your_jenkins_host/userContent&lt;/code&gt;. Si la carpeta no existe, creadla.&lt;/p&gt;
&lt;p&gt;Así que lo más normal es introducir URLs del tipo &lt;code&gt;\userContent\whatever.css&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;creando-el-estilo&#34;&gt;Creando el estilo&lt;/h2&gt;
&lt;p&gt;Lo siguiente es cambiar el estilo. En este caso sólo os voy a contar cómo cambiar la CSS; si queréis cambiar el JavaScript, tendréis que hacerlo vosotros.&lt;/p&gt;
&lt;p&gt;Desgraciadamente, la CSS no se carga la última y hay cosas que no he sido capaz de retocar&amp;hellip; Pero podemos cambiar en torno al 90%, y esta plantilla nos permite hacerlo fácilmente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;#jenkins {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;background-color&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;#e8eaf6&lt;/span&gt;; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;//&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;50&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;#header {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;background-color&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;#1a237e&lt;/span&gt;; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;//&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;900&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;top-sticker-inner&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;footer&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;background-color&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;#7986cb&lt;/span&gt;; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;//&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;300&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;pane-header&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; .&lt;span style=&#34;color:#a6e22e&#34;&gt;bigtable&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;th&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; .&lt;span style=&#34;color:#a6e22e&#34;&gt;tabBar&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;radio&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;:&lt;span style=&#34;color:#a6e22e&#34;&gt;checked&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;background-color&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;#9fa8da&lt;/span&gt;; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;//&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;200&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;pane-footer&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; .&lt;span style=&#34;color:#a6e22e&#34;&gt;tabBar&lt;/span&gt; .&lt;span style=&#34;color:#a6e22e&#34;&gt;tab&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;addTab&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;background-color&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;#c5cae9&lt;/span&gt;; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;//&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;100&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23&lt;/span&gt;#breadcrumbs &lt;span style=&#34;color:#f92672&#34;&gt;LI&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;A&lt;/span&gt;:&lt;span style=&#34;color:#a6e22e&#34;&gt;link&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; #breadcrumbs &lt;span style=&#34;color:#f92672&#34;&gt;LI&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;A&lt;/span&gt;:&lt;span style=&#34;color:#a6e22e&#34;&gt;visited&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;color&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;#536dfe&lt;/span&gt;; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;//&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;A200&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28&lt;/span&gt;#jenkins .&lt;span style=&#34;color:#a6e22e&#34;&gt;yui-button&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;primary&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;background-color&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;#5c6bc0&lt;/span&gt;; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;//&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;400&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32&lt;/span&gt;#jenkins .&lt;span style=&#34;color:#a6e22e&#34;&gt;yui-button&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;primary&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt;:&lt;span style=&#34;color:#a6e22e&#34;&gt;hover&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;33&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;background-color&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;#3949ab&lt;/span&gt;; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;//&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;600&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;34&lt;/span&gt;  text: &lt;span style=&#34;color:#ae81ff&#34;&gt;#fff&lt;/span&gt;;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;35&lt;/span&gt;}
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;36&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;37&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;build-row&lt;/span&gt;:&lt;span style=&#34;color:#a6e22e&#34;&gt;hover&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; .&lt;span style=&#34;color:#a6e22e&#34;&gt;build-row&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;model-link-active&lt;/span&gt; {
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;38&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;background&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;#c5cae9&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;!important&lt;/span&gt;; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;//&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;100&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;39&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Los colores están tomados de las &lt;a href=&#34;https://www.google.com/design/spec/style/color.html#color-color-palette&#34;&gt;guías de color de Google&lt;/a&gt;. He puesto como comentario el número de color a utilizar. Si accedéis a la guía lo entenderéis.&lt;/p&gt;
&lt;p&gt;Por lo tanto, cambiar los colores es tan simple como elegir una paleta e cuadrando cada comentario con su color. En el ejemplo he utilizado la plantilla &lt;strong&gt;Índigo&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Dejamos este archivo en &lt;code&gt;$JENKINS_HOME/userContent/whatever.css&lt;/code&gt; y recargamos la
web de &lt;a href=&#34;https://jenkins-ci.org/&#34;&gt;Jenkins&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Si no os convencen los colores, podéis pasar de mis sugerencias y obtener otros
colores de otra paleta diferente, como la &lt;a href=&#34;https://www.materialpalette.com/indigo/deep-purple&#34;&gt;Material Palette&lt;/a&gt;, e ir cambiando la
plantilla hasta que los colores os gusten.&lt;/p&gt;
&lt;h1 id=&#34;cómo-probarlo&#34;&gt;Cómo probarlo&lt;/h1&gt;
&lt;p&gt;Gracias a R. Chavarría T. por su pregunta :)&lt;/p&gt;
&lt;p&gt;Aquí tenéis la forma rápida para haceros una demo:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;En un directorio limpio guardad la CSS del apartado anterior. Yo usaré &lt;code&gt;/tmp/css/main.css&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Exponed el directorio creando un servidor web. Aquí es cuando adoro python: &lt;code&gt;python -m http.server 9012&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Lanzad un Jenkins en un docker. Para tener cosas, he usado &lt;a href=&#34;https://github.com/jenkinsci/workflow-plugin&#34;&gt;Docker-workflow&lt;/a&gt;: &lt;code&gt;docker run -p 8080:8080 -p 8081:8081 -p 8022:22 -ti jenkinsci/workflow-demo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Conectaos a él e id a &lt;code&gt;Manage Jenkins/Manage Plugins/Available&lt;/code&gt; y seleccionad &lt;code&gt;Simple Theme Plugin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;En &lt;code&gt;Manage Jenkins/Configure System&lt;/code&gt; buscad el apartado &lt;code&gt;Theme/URL of thems CSS&lt;/code&gt; y escribid: &lt;code&gt;https://localhost:9012/main.css&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Aquí tenéis el antes y el después:&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/jenkins/jenkins_normal.png&#34;
         alt=&#34;Jenkins Normal&#34;/&gt; 
&lt;/figure&gt;

&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/jenkins/jenkins_morado.png&#34;
         alt=&#34;Jenkins Morado&#34;/&gt; 
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;¡Ya está!&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Migrando a Nikola</title>
      <link>https://magmax.org/blog/migrando-a-nikola/</link>
      <pubDate>Mon, 02 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/blog/migrando-a-nikola/</guid>
      <description>
        
          &lt;p&gt;Llevo un tiempo preparando la migración a &lt;a href=&#34;https://getnikola.com/&#34;&gt;Nikola&lt;/a&gt;. Me gustaría contaros mi experiencia, las razones para realizar la migración y cómo hacer ésta de una manera fácil y sencilla.&lt;/p&gt;
&lt;p&gt;En estos momentos, migrar es más fácil que nunca&amp;hellip;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/poetry.jpg&#34;/&gt; 
&lt;/figure&gt;

&lt;h2 id=&#34;razones-para-migrar&#34;&gt;Razones para migrar&lt;/h2&gt;
&lt;p&gt;Los que seguís el blog sabéis que he pasado ya por distintos sistemas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.drupal.org/&#34;&gt;Drupal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.blogger.com&#34;&gt;Blogger&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://octopress.org/&#34;&gt;Octopress&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Así que tenía que tener razones de peso para realizar una nueva migración. Pues
bien, éstas son las razones para usar &lt;a href=&#34;https://getnikola.com/&#34;&gt;Nikola&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Es &lt;a href=&#34;https://www.python.org/&#34;&gt;Python&lt;/a&gt;, lenguaje que conozco y domino, por lo que me resulta sencillo escribir parches o ayudar a la comunidad.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Velocidad&lt;/strong&gt;: Es mucho más rápido que &lt;a href=&#34;https://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt;. A continuación os mostraré un vídeo de demostración.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multilenguaje&lt;/strong&gt;: Permite traducciones sin tener que hacer parches.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Extensiones&lt;/strong&gt;: Tiene &lt;em&gt;plugins&lt;/em&gt; muy interesantes, como &lt;a href=&#34;https://getnikola.com/handbook.html#youtube&#34;&gt;mostrar vídeos de
youtube&lt;/a&gt;, &lt;a href=&#34;https://ralsina.me/weblog/posts/lunchtime-nikola-feature-graphviz.html&#34;&gt;crear esquemas&lt;/a&gt;, &lt;a href=&#34;https://www.damian.oquanta.info/posts/48-themes-for-your-ipython-notebook.html&#34;&gt;renderizar ipython notebook&lt;/a&gt; o &lt;a href=&#34;https://getnikola.com/handbook.html#chart&#34;&gt;crear gráficas&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Construcción incremental&lt;/strong&gt;: No vuelve a construir todo el &lt;em&gt;site&lt;/em&gt; ante una modificación. De hecho, no hace nada si no hay cambios.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Salida mucho más verbosa&lt;/strong&gt;: No imagináis los dolores de cabeza para encontrar un error.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Si bien es cierto que &lt;a href=&#34;https://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt;/&lt;a href=&#34;https://octopress.org/&#34;&gt;Octopress&lt;/a&gt; también tenían sus ventajas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Directamente renderizable desde &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Editable desde &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Probablemente sean los más utilizados.&lt;/li&gt;
&lt;li&gt;Muchos temas y más chulos.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;En mi caso, el tema de la velocidad, de renderizar &lt;a href=&#34;https://ipython.org/notebook.html&#34;&gt;iPython Notebook&lt;/a&gt; y poder crear fácilmente gráficas y esquemas han sido cruciales. Os dejo un vídeo un poco aburrido con una comparativa de velocidades. Basta ver los primeros 15 segundos y luego podéis esperar hasta que os aburráis. Es lo que tarda en construir mi site, con el mismo número de posts:&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/s0eIF3_B5Lw&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Creo que habla por sí solo.&lt;/p&gt;
&lt;h2 id=&#34;la-migración&#34;&gt;La migración&lt;/h2&gt;
&lt;p&gt;La migración ha resultado muy dura, pero he allanado el camino para el que venga detrás.&lt;/p&gt;
&lt;p&gt;No existía ningún sistema oficial de migración, aunque sí varios scripts que no
terminaban de funcionar. Así que tuve que escribir &lt;a href=&#34;https://github.com/magmax/jekyll2nikola&#34;&gt;mi propio script de
migración&lt;/a&gt;, que ha terminado convirtiéndose en el &lt;a href=&#34;https://plugins.getnikola.com/#import_jekyll&#34;&gt;script oficial de migración&lt;/a&gt;, tras no pocos cambios.&lt;/p&gt;
&lt;p&gt;Además, no me gustaban los temas para &lt;a href=&#34;https://getnikola.com/&#34;&gt;Nikola&lt;/a&gt;. Por eso decidí &lt;a href=&#34;https://github.com/magmax/nikola-theme-octopress&#34;&gt;portar el tema
clásico de Octopress&lt;/a&gt;, que también he liberado.&lt;/p&gt;
&lt;p&gt;En total, ha sido casi un mes de trabajo que espero merezca la pena.&lt;/p&gt;
&lt;h2 id=&#34;cómo-migrar&#34;&gt;Cómo migrar&lt;/h2&gt;
&lt;p&gt;El resultado es que hoy día es muy sencillo realizar la migración de &lt;a href=&#34;https://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt; u
&lt;a href=&#34;https://octopress.org/&#34;&gt;Octopress&lt;/a&gt; a &lt;a href=&#34;https://getnikola.com/&#34;&gt;Nikola&lt;/a&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Instalar Nikola. Yo prefiero hacerlo dentro de un &lt;a href=&#34;https://virtualenv.pypa.io/en/latest/&#34;&gt;VirtualEnv&lt;/a&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;$ virtualenv venv
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;$ . venv/bin/activate
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;venv&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;$ pip install nikola&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;extras&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Instalar el plugin de importación:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;venv&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;$ nikola plugins --install&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;import_jekyll
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Importar el site:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;venv&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;$ nikola import_jekyll &amp;lt;DIRECTORIO&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;usar-el-tema-octopress&#34;&gt;Usar el tema Octopress&lt;/h3&gt;
&lt;p&gt;Si, además, queréis utilizar el estilo de &lt;a href=&#34;https://octopress.org/&#34;&gt;Octopress&lt;/a&gt;, basta con:&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Crear el directorio &lt;code&gt;themes&lt;/code&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;venv&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;$ cd new_site
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;venv&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;$ mkdir themes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;Clonar el repositorio &lt;code&gt;nikola-theme-octopress&lt;/code&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;venv&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;$ cd themes
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;venv&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; themes$ git clone nikola-theme-octopress octopress
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;Editar el archivo &lt;code&gt;conf.py&lt;/code&gt; y añadir la línea:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;THEME &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;octopress&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Hay algunas opciones de configuración adicionales para la &lt;em&gt;sidebar&lt;/em&gt; que podéis consultar en la &lt;code&gt;documentación del tema Octopress para Nikola&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;No os negaré que el tema aún no está completo, pero de momento es bastante parecido.&lt;/p&gt;
&lt;h2 id=&#34;final&#34;&gt;Final&lt;/h2&gt;
&lt;p&gt;Para terminar, os dejo con algunos posts que cuentan más sobre la migración a
&lt;a href=&#34;https://getnikola.com/&#34;&gt;Nikola&lt;/a&gt; o cómo usarlo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://areskibelaid.com/nikola-one-kickass-site-generator/&#34;&gt;Nikola, one kickass Site and Blog generator&lt;/a&gt;, por Areski Belaid&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://serialized.net/2013/03/moving-from-octopress-to-nikola/&#34;&gt;Moving from Octopress to Nikola&lt;/a&gt;, por Joshua Barratt&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.stephaniehiga.com/posts/goodbye-wordpress-hello-nikola.html&#34;&gt;Goodbye, WordPress! Hello, Nikola!&lt;/a&gt;, por Stephanie A. Higa&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kevin.saliou.name/posts/2013-10-08-looking-for-the-static-site-generator.html&#34;&gt;Looking for The static site generator&lt;/a&gt;, por Kevin Saliou&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Resulta curioso que, soportando multi idioma (cosa que &lt;a href=&#34;https://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt; no hace), no haya encontrado posts en castellano sobre la migración, aunque sí numerosos blogs.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Primeros pasos en Jenkins</title>
      <link>https://magmax.org/blog/jenkins-again/</link>
      <pubDate>Fri, 19 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/blog/jenkins-again/</guid>
      <description>
        
          &lt;p&gt;Me he dado cuenta hace poco de que, con todos los artículos que he escrito y llevando más de 2 años y medio cuidando del &lt;a href=&#34;https://jenkins-ci.org/&#34;&gt;Jenkins&lt;/a&gt; de Tuenti, aún no he escrito nada sobre este sistema de integración contínua.&lt;/p&gt;
&lt;p&gt;Así que vamos a solucionar el problema.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/jenkins.png&#34;
         alt=&#34;Jenkins&#34;/&gt; 
&lt;/figure&gt;

&lt;h2 id=&#34;qué-es-jenkins&#34;&gt;Qué es Jenkins&lt;/h2&gt;
&lt;p&gt;Lo primero es saber qué es &lt;a href=&#34;https://jenkins-ci.org/&#34;&gt;Jenkins&lt;/a&gt;. Para alguien que esté acostumbrado a los sistemas de integración contínua no hay mucho que explicar aquí. Sin embargo, quien no sepa qué es eso puede encontrarse con un problema XD&lt;/p&gt;
&lt;p&gt;Realmente Jenkins no es más que &lt;em&gt;un cron a lo bestia&lt;/em&gt;. Es un planificador de tareas. La diferencia está en que, además, permite la gestión de recursos y mostrar los resultados.&lt;/p&gt;
&lt;p&gt;Como definición&amp;hellip; puede valer, aunque seguramente quien no sabía lo que era &lt;a href=&#34;https://jenkins-ci.org/&#34;&gt;Jenkins&lt;/a&gt; siga sin saberlo. Vamos con un ejemplo:&lt;/p&gt;
&lt;p&gt;Supongamos que tenemos un programa, por ejemplo, &lt;a href=&#34;https://github.com/magmax/colorize&#34;&gt;colorize&lt;/a&gt;. Este programa tiene tests, o documentación que generar, o cualquier otra cosa que necesitemos. Lo que &lt;a href=&#34;https://jenkins-ci.org/&#34;&gt;Jenkins&lt;/a&gt; nos ofrece es, justamente, una manera fácil de:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;generar un &lt;em&gt;workspace&lt;/em&gt; para desplegarlo.&lt;/li&gt;
&lt;li&gt;descargarse el repositorio.&lt;/li&gt;
&lt;li&gt;ejecutar órdenes que nos permitan realizar los tests, la documentación o lo que queramos.&lt;/li&gt;
&lt;li&gt;mostrar los resultados de manera bonita.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Y todo esto con interfaz web, configurable, &lt;em&gt;plugable&lt;/em&gt;, &amp;hellip;&lt;/p&gt;
&lt;p&gt;Parece utópico, ¿no?&lt;/p&gt;
&lt;p&gt;Vamos a ver cómo se hace.&lt;/p&gt;
&lt;h2 id=&#34;primeros-pasos-con-jenkins&#34;&gt;Primeros pasos con Jenkins&lt;/h2&gt;
&lt;p&gt;Lo primero es descargárselo y ejecutarlo. Si no queréis &amp;ldquo;engorrinar&amp;rdquo; vuestra máquina, lo más sencillo es descargarse el &lt;strong&gt;war&lt;/strong&gt; de la &lt;a href=&#34;https://mirrors.jenkins-ci.org/war/latest/jenkins.war&#34;&gt;última versión de Jenkins&lt;/a&gt; y ejecutar:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;java -jar jenkins.war
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Eso nos levantará una instancia en el puerto 8080 (habitualmente), que utilizará un servidor web embebido (habitualmente &lt;a href=&#34;https://winstone.sourceforge.net/&#34;&gt;winstone&lt;/a&gt;). Si os da conflicto deberéis seleccionar otro puerto.&lt;/p&gt;
&lt;p&gt;Ahora abrimos un navegador y abrimos la url https://localhost:8080 y veremos que ya está todo montado para comenzar a probarlo. Si nos gustara y lo creéis necesario, podéis montarlo sobre un &lt;a href=&#34;https://tomcat.apache.org/&#34;&gt;Tomcat&lt;/a&gt; o algún otro servidor más potente.&lt;/p&gt;
&lt;h3 id=&#34;plugins&#34;&gt;Plugins&lt;/h3&gt;
&lt;p&gt;En &lt;a href=&#34;https://jenkins-ci.org/&#34;&gt;Jenkins&lt;/a&gt; todo funciona mediante plugins. Lo primero que necesitamos es soporte para nuestro sistema de control de versiones. Dado que &lt;a href=&#34;https://github.com/magmax/colorize&#34;&gt;colorize&lt;/a&gt; está en &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt;, tendremos que instalar el &lt;a href=&#34;https://wiki.jenkins-ci.org/display/JENKINS/Git+Plugin&#34;&gt;plugin de Git para Jenkins&lt;/a&gt;. Para ello, desde la interfaz de &lt;a href=&#34;https://jenkins-ci.org/&#34;&gt;Jenkins&lt;/a&gt;, seleccionamos &lt;strong&gt;Administrar Jenkins&lt;/strong&gt;-&amp;gt;&lt;strong&gt;Administrar Plugins&lt;/strong&gt;-&amp;gt;&lt;strong&gt;Todos los plugins&lt;/strong&gt;. Seleccionamos &lt;em&gt;&amp;ldquo;Git plugin&amp;rdquo;&lt;/em&gt; (hay varios, pero nosotros usaremos éste). Podéis ayudaros del buscador de arriba a la derecha. Tras seleccionar el &lt;em&gt;checkbox&lt;/em&gt;, pulsamos &lt;strong&gt;Instalar sin reiniciar&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Esto instalará el &lt;em&gt;plugin&lt;/em&gt; y todas sus dependencias. Temo que alguna de éstas requiera reiniciar &lt;a href=&#34;https://jenkins-ci.org/&#34;&gt;Jenkins&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;primera-tarea&#34;&gt;Primera tarea&lt;/h3&gt;
&lt;p&gt;Ahora volvemos a la página principal de nuestra instancia de &lt;a href=&#34;https://jenkins-ci.org/&#34;&gt;Jenkins&lt;/a&gt; y pulsamos en &lt;strong&gt;Nueva tarea&lt;/strong&gt;. Le ponemos un nombre; por ejemplo &amp;ldquo;colorize&amp;rdquo; y seleccionamos &lt;strong&gt;Crear un proyecto de estilo libre&lt;/strong&gt;. Pulsamos &lt;strong&gt;OK&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;La tarea ya está creada pero tenemos que configurarla. Voy a ir a lo más básico, aunque podéis echar un ojo a la ayuda de los distintos apartados.&lt;/p&gt;
&lt;p&gt;Por ello, sólo tendremos que modificar &lt;strong&gt;&amp;ldquo;Configurar el origen del código fuente&amp;rdquo;&lt;/strong&gt;: seleccionamos &lt;strong&gt;Repository URL&lt;/strong&gt; &amp;ldquo;&lt;a href=&#34;https://github.com/magmax/colorize.git%22&#34;&gt;https://github.com/magmax/colorize.git&amp;quot;&lt;/a&gt; y dejamos el resto de los parámetros como están.&lt;/p&gt;
&lt;p&gt;Ahora nos vamos al apartado &lt;strong&gt;&amp;ldquo;Ejecutar&amp;rdquo;&lt;/strong&gt;, donde añadimos un nuevo paso de tipo &lt;strong&gt;&amp;ldquo;Ejecutar línea de comandos (shell)&amp;quot;&lt;/strong&gt;. Éste puede ser sencillo o tan complejo como deseemos. Si lo queremos sencillo, tendremos que tener el entorno previamente preparado:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;make
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Sin embargo, es buena costumbre usar entornos aislados, por lo que quizá sea mejor preparar un poco el entorno. Para ello podríamos usar &lt;a href=&#34;https://puppetlabs.com/&#34;&gt;Puppet&lt;/a&gt;, &lt;a href=&#34;https://www.getchef.com/chef/&#34;&gt;Chef&lt;/a&gt;, &lt;a href=&#34;https://www.saltstack.com/&#34;&gt;SaltStack&lt;/a&gt; o algún otro software de automatización, pero en este pequeño ejemplo usaremos sólo &lt;a href=&#34;https://virtualenv.readthedocs.org/en/latest/&#34;&gt;VirtualEnv&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;virtualenv venv
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;. venv/bin/activate
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;pip install -r requirements-dev.txt
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;python setup.py install
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;rm -rf results
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;mkdir results
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;make analysis
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;make run_unit_tests NOSE_OPTS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;--with-xunit --xunit-file=results/unit.xml&amp;#34;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;make run_integration_tests NOSE_OPTS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;--with-xunit --xunit-file=results/integration.xml&amp;#34;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;make run_acceptance_tests NOSE_OPTS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;--with-xunit --xunit-file=results/acceptance.xml&amp;#34;&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;deactivate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Esto generará un pequeño entorno aislado, instalará dependencias y ejecutará las pruebas. Le pasamos opciones para que deje los resultados en el directorio &amp;ldquo;results&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Ahora tenemos que procesar éste directorio de resultados. Para ello, en la sección &lt;strong&gt;Acciones para ejecutar después&lt;/strong&gt; añadimos un nuevo paso de tipo &lt;strong&gt;Publicar los resultados de tests de JUnit&lt;/strong&gt;, y en el campo &lt;strong&gt;Ficheros XML con los informes de tests&lt;/strong&gt; ponemos &lt;em&gt;&amp;ldquo;results/*.xml&amp;rdquo;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Pulsamos &lt;strong&gt;&amp;ldquo;Guardar&amp;rdquo;&lt;/strong&gt; y ya está listo.&lt;/p&gt;
&lt;h3 id=&#34;ejecución&#34;&gt;Ejecución&lt;/h3&gt;
&lt;p&gt;Pulsamos sobre &lt;strong&gt;&amp;ldquo;Construir ahora&amp;rdquo;&lt;/strong&gt; y &lt;a href=&#34;https://jenkins-ci.org/&#34;&gt;Jenkins&lt;/a&gt; comenzará su magia. Podemos pulsar sobre la tarea que está corriendo para ver la salida estándar y la salida de errores de la ejeución.&lt;/p&gt;
&lt;p&gt;Si todo termina correctamente, nos mostrará una bola azul. Si no, será roja si hubo un problema o bien amarilla si falló algún test.&lt;/p&gt;
&lt;p&gt;Una vez terminado, podemos pulsar sobre la ejecución del trabajo (a la izquierda, en &lt;strong&gt;Historia de tareas&lt;/strong&gt;) y ver qué tests se ejecutaron en &lt;strong&gt;Resultado de los tests&lt;/strong&gt;, donde se muestran los tiempos de ejecución, tests fallidos, trazas si fallaron, diferencia en el número de tests, etc.&lt;/p&gt;
&lt;h2 id=&#34;aprendiendo-un-poco-más-de-jenkins&#34;&gt;Aprendiendo un poco más de Jenkins&lt;/h2&gt;
&lt;p&gt;Hasta aquí lo básico. Hemos creado un trabajo y lo hemos ejecutado.&lt;/p&gt;
&lt;p&gt;Pero es posible que tengamos muchas dudas ahora:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;¿Dónde se ha ejecutado?&lt;/li&gt;
&lt;li&gt;¿Puedo realizar ejecuciones paralelas?&lt;/li&gt;
&lt;li&gt;¿Puedo ejecutarlo remotamente?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;La respuesta a estas preguntas es fácil: Se ha ejecutado en un &lt;strong&gt;nodo&lt;/strong&gt;, y podemos configurar tantos &lt;strong&gt;nodos&lt;/strong&gt; como queramos, incluso en remoto.&lt;/p&gt;
&lt;p&gt;Para ello, desde &lt;strong&gt;Administrar Jenkins&lt;/strong&gt;-&amp;gt;&lt;strong&gt;Administrar Nodos&lt;/strong&gt; podemos configurar nuevos &lt;strong&gt;nodos&lt;/strong&gt;. Por defecto, &lt;a href=&#34;https://jenkins-ci.org/&#34;&gt;Jenkins&lt;/a&gt; asume que queremos un nodo en la máquina donde está el servidor, pero puede que no lo queramos allí.&lt;/p&gt;
&lt;p&gt;También tenemos la opción de configurar varios &lt;strong&gt;ejecutores&lt;/strong&gt; en un mismo nodo. Si el nodo tiene mucha potencia, quizá pueda realizar dos tareas a la vez, de manera que una vaya a cada ejecutor.&lt;/p&gt;
&lt;p&gt;Os invito a que naveguéis el resto de opciones, que instaléis nuevos plugins y que probéis lo que se os ocurra. Para limpiar toda la basura o si lo rompéis, basta con eliminar la carpeta &lt;strong&gt;${HOME}/.jenkins&amp;rdquo;&lt;/strong&gt; y reiniciar el servidor.&lt;/p&gt;
&lt;h2 id=&#34;advertencias&#34;&gt;Advertencias&lt;/h2&gt;
&lt;p&gt;Llegados a este punto, veo necesario advertiros de cosas que me ha enseñado la experiencia:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Instalad la menor cantidad de plugins que podáis. Administrar los plugins es un coñazo: Habrá proyectos que hayan transformado &lt;em&gt;bugs&lt;/em&gt; en características, se romperán cosas, etc.&lt;/li&gt;
&lt;li&gt;Nunca actualicéis un plugin sin probarlo antes.&lt;/li&gt;
&lt;li&gt;El número de tareas tiende a crecer. Usad tan pocas como podáis.&lt;/li&gt;
&lt;li&gt;Los proyectos se guardan como XML en el disco. Haced copias de seguridad.&lt;/li&gt;
&lt;li&gt;A veces los proyectos se corrompen cuando no pueden leerse correctamente. Basta reiniciar &lt;a href=&#34;https://jenkins-ci.org/&#34;&gt;Jenkins&lt;/a&gt; para que esto&amp;hellip; cambie (puede que los lea bien, puede que lea mal otros). Si esto ocurren, los trabajos fallidos no se mostrarán.&lt;/li&gt;
&lt;li&gt;Los &lt;strong&gt;workspaces&lt;/strong&gt; no se limpirán después de borrar un proyecto. Es necesario acceder al nodo y borrarlos a mano.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-ci.org/&#34;&gt;Jenkins&lt;/a&gt; tratará de reutilizar el mismo nodo para el mismo proyecto, si está libre. Eso es bueno y es malo: Por un lado, mejora la velocidad; por otro, si el entorno está corrupto, volverá a fallar.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Además, deberíais pensar en cómo va a funcionar vuestra organización. Existen estas arquitecturas básicas:&lt;/p&gt;
&lt;h3 id=&#34;un-repositorio-un-proyecto&#34;&gt;Un repositorio, un proyecto&lt;/h3&gt;
&lt;p&gt;Para cada repositorio en vuestra organización, se crea un proyecto &lt;a href=&#34;https://jenkins-ci.org/&#34;&gt;Jenkins&lt;/a&gt;. De esta manera, todas las ramas se prueban en el mismo sitio.&lt;/p&gt;
&lt;p&gt;Esto hace muy sencilla la gestión, pero resulta difícil saber cómo evoluciona un proyecto.&lt;/p&gt;
&lt;h3 id=&#34;un-repositorio-dos-proyectos&#34;&gt;Un repositorio, dos proyectos&lt;/h3&gt;
&lt;p&gt;Una optimización es tener dos proyectos: Uno para la rama principal y otro para todo lo demás. Al fin y al cabo, las ramas son efímeras XD&lt;/p&gt;
&lt;p&gt;Esta opción permite gestionar fácilmente los &lt;strong&gt;pull-requests&lt;/strong&gt; y tener más historia de la rama principal.&lt;/p&gt;
&lt;h3 id=&#34;un-proyecto-por-rama&#34;&gt;Un proyecto por rama.&lt;/h3&gt;
&lt;p&gt;Finalmente, se puede crear un proyecto por rama. Esto permite que cada desarrollador/equipo pueda gestionar un proyecto y así tener histórico propio. Sin embargo, se generan distintos problemas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Limpiar los &lt;strong&gt;workspaces&lt;/strong&gt; obsoletos.&lt;/li&gt;
&lt;li&gt;Crear nuevos proyectos.&lt;/li&gt;
&lt;li&gt;Actualizar todos los proyectos de acuerdo a nuevas especificaciones (por ejemplo, añadir un nuevo paso, añadir un plugin, etc.).&lt;/li&gt;
&lt;li&gt;Gestionar los recursos de forma apropiada.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;opinión-personal&#34;&gt;Opinión personal&lt;/h2&gt;
&lt;p&gt;Los que me conocéis sabéis que no soy muy fan de &lt;a href=&#34;https://jenkins-ci.org/&#34;&gt;Jenkins&lt;/a&gt;&amp;hellip; Pero puede resultar un servidor de integración contínua estupendo para comenzar. Sin embargo, a medida que el número de plugins crece y lo mismo ocurre con el número de proyectos, su gestión se torna en más y más compleja.&lt;/p&gt;
&lt;p&gt;Quizá llegado a este punto sea buena idea buscar otra alternativa. Pero eso no impide decir que &lt;a href=&#34;https://jenkins-ci.org/&#34;&gt;Jenkins&lt;/a&gt; tal vez sea la mejor manera de comenzar a depender de un sistema de Integración Contínua. Pero si &lt;a href=&#34;https://jenkins-ci.org/&#34;&gt;Jenkins&lt;/a&gt; llegara a quedarse corto, propongo echar un vistazo a otras alternativas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://buildbot.net/&#34;&gt;BuildBot&lt;/a&gt;: Aunque no tiene a penas &lt;em&gt;plugins&lt;/em&gt;, su versatilidad permite implementar cualquier necesidad en poco tiempo y de manera sencilla.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://travis-ci.org/&#34;&gt;Travis&lt;/a&gt;: Quizá la mejor opción online, tanto para software libre como si estás dispuesto a pagar una módica cantidad. Es libre, pero puede ser complejo instalarlo localmente.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://drone.io&#34;&gt;Drone&lt;/a&gt;: Otro sistema &lt;em&gt;hosted&lt;/em&gt;, aunque se puede descargar, que utiliza &lt;a href=&#34;https://docker.io&#34;&gt;dockers&lt;/a&gt; para generar entornos aislados en los nodos.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.thoughtworks.com/products/go-continuous-delivery&#34;&gt;Go-CI&lt;/a&gt;: Una nueva opción, de ThoughtWorks, liberada hace poco.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Existen otras muchas alternativas; en la Wikipedia tenéis una &lt;a href=&#34;https://en.wikipedia.org/wiki/Comparison_of_continuous_integration_software&#34;&gt;lista de servidores de integración contínua&lt;/a&gt; bastante exhaustiva.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Integración continua: Jenkins</title>
      <link>https://magmax.org/blog/jenkins/</link>
      <pubDate>Sat, 21 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/blog/jenkins/</guid>
      <description>
        
          &lt;p&gt;Ahora está de moda eso de la integración continua (en adelante, &lt;em&gt;CI&lt;/em&gt;. de &lt;em&gt;Continuous Integration&lt;/em&gt;). Pero&amp;hellip; ¿Qué es eso de la &lt;em&gt;CI&lt;/em&gt;?&lt;/p&gt;
&lt;p&gt;Contaré a grandes rasgos algunos aspectos y después me centraré en la configuración de un trabajo con jenkins.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/jenkins.png&#34;
         alt=&#34;Jenkins&#34;/&gt; 
&lt;/figure&gt;

&lt;h2 id=&#34;qué-es-ci&#34;&gt;¿Qué es CI?&lt;/h2&gt;
&lt;p&gt;Asumamos que tenéis una aplicación terminada; sin embargo, descubrís un pequeño defecto que no os lleva más de 5 minutos arreglar. Desde el mismo momento en el que lo corregís, guardáis y queréis hacer el cambio definitivo, &lt;em&gt;¿cuánto tiempo pasa?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;En ese momento es cuando comienza el infierno:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Vuestro cambio se &lt;em&gt;mezcla con otros cambios&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Dependencias&lt;/em&gt; con librerías que ya no existen&lt;/li&gt;
&lt;li&gt;Hay que volver a &lt;em&gt;desplegar&lt;/em&gt;, &lt;em&gt;configurar&lt;/em&gt;,&amp;hellip; el producto para poder probarlo&lt;/li&gt;
&lt;li&gt;Con suerte, otro departamento necesitará que le echéis una mano para &lt;em&gt;probarlo&lt;/em&gt;. Con mala suerte, no se realizan pruebas en absoluto.&lt;/li&gt;
&lt;li&gt;Se vuelven a abrir incidencias con problemas que ya tenía la versión anterior&lt;/li&gt;
&lt;li&gt;Hay que actualizar la &lt;em&gt;documentación&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Posiblemente os pregunten si hay algo nuevo para &lt;em&gt;traducir&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Hay que &lt;em&gt;empaquetar&lt;/em&gt; el producto&lt;/li&gt;
&lt;li&gt;Además, tenemos que &lt;em&gt;probar&lt;/em&gt; el nuevo paquete del producto&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Todos estos puntos y otros dependen de cada empresa, pero siempre es un dolor. Pensadlo en serio: ¿cuánto tiempo puede pasar? ¿Un mes?&lt;/p&gt;
&lt;p&gt;Pues bien&amp;hellip; &lt;em&gt;La integración continua consiste, idealmente, en que en el momento en el que metes tu cambio en el repositorio, se desencadena un proceso automático que termina con la publicación/denegación de la nueva versión y un mail en tu cuenta de correo con el resultado&lt;/em&gt;. Así de simple. Idealmente. Y, de nuevo idealmente, se trata de un proceso de minutos.&lt;/p&gt;
&lt;p&gt;Claro, entre un caso y el otro hay miles de grises, pero conviene saber cuál es el objetivo real de la &lt;em&gt;CI&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Por definición, en un proceso automático no intervienen las personas. Así que tenéis dos opciones: o bien confiais en lo buenísimos programadores que sois, ya que nunca rompéis nada, o bien asumís que no somos perfectos y que necesitáis probar el producto. Lo que nos da la&amp;hellip;&lt;/p&gt;
&lt;h3 id=&#34;primera-condición-necesitamos-pruebas-automáticas&#34;&gt;Primera condición: Necesitamos pruebas automáticas&lt;/h3&gt;
&lt;p&gt;Si no hay pruebas automáticas, apaga y vámonos. Y éstas deben desencadenarse con un único comando o con un conjunto de comandos suficientemente pequeño. Y deben cumplir las condiciones de las buenas pruebas (FIRST):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Fast&lt;/em&gt;: Más rápidas que Usain Bolt. La idea es que una rama que intenta entrar en la rama principal, si pasa las pruebas, se &lt;em&gt;mergea&lt;/em&gt; automáticamente.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Independant&lt;/em&gt;: No importa el orden. De hecho, es mejor que se ordenen de forma aleatoria (pero dejen constancia del orden, para que puedan cumplir la siguiente condición).&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Repeatable&lt;/em&gt;: Todo esto no sirve si no podéis reproducir el problema si se produce.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Small&lt;/em&gt;: Pequeñines sí, gracias. Así acotarán más la zona problemática.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Transparent&lt;/em&gt;: Que se vea claramente la intención de la prueba.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;segunda-condición-fácil-de-desplegar&#34;&gt;Segunda condición: Fácil de desplegar&lt;/h3&gt;
&lt;p&gt;También necesitamos que se pueda desplegar de forma automática. Si no es así, ya
hemos terminado. No sirve de nada tener que estar hackeando mogollón de ficheros
en el sistema. Con un poquito de suerte, podéis utilizar &lt;a href=&#34;https://puppetlabs.com&#34;&gt;puppet&lt;/a&gt;  o &lt;a href=&#34;https://www.opscode.com/chef&#34;&gt;chef&lt;/a&gt;  [yo
mismo escribí un &amp;ldquo;tutorial sobre puppet] no hace mucho) para hacer todas las ñapas que sean necesarias.&lt;/p&gt;
&lt;h3 id=&#34;tercera-condición-servidor-de-integración-contínua&#34;&gt;Tercera condición: Servidor de integración contínua&lt;/h3&gt;
&lt;p&gt;Es importante tener un programa que detecte el cambio y lance todas estas pruebas.&lt;/p&gt;
&lt;p&gt;Aunque es posible que necesitéis más cosas, como un servidor de artefactos/librerías, bases de datos, licencias, gestión de documentación, gestión de traducciones, publicación del artefacto resultante, servidores de mail, &amp;hellip;&lt;/p&gt;
&lt;p&gt;En este caso vamos a utilizar &lt;a href=&#34;https://jenkins-ci.org&#34;&gt;Jenkins&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;instalando-jenkins&#34;&gt;Instalando Jenkins&lt;/h2&gt;
&lt;p&gt;Lo siento, no me voy a extender. Os lo descargáis y ejecutáis:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;$ java -jar jenkins.war
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Y comenzará a soltar guarrería javera por la pantalla. No os preocupéis por eso.&lt;/p&gt;
&lt;p&gt;Por lo demás, ya está. Podéis abrir un navegador en la dirección
&lt;a href=&#34;https://localhost:8080&#34;&gt;https://localhost:8080&lt;/a&gt; .&lt;/p&gt;
&lt;h2 id=&#34;configurando-un-proyecto-pydoubles&#34;&gt;Configurando un proyecto: pyDoubles&lt;/h2&gt;
&lt;p&gt;He elegido &lt;a href=&#34;https://www.pydoubles.org/&#34;&gt;pyDoubles&lt;/a&gt;  para el ejemplo, ya que es pequeñín y tiene pruebas.&lt;/p&gt;
&lt;p&gt;El primer problema es que está en un &lt;a href=&#34;https://bitbucket.org/carlosble/pydoubles/src&#34;&gt;repositorio mercurial&lt;/a&gt; , así que tendremos que añadir el plugin de mercurial a Jenkins:&lt;/p&gt;
&lt;h3 id=&#34;añadir-el-plugin-de-mercurial-a-jenkins&#34;&gt;Añadir el plugin de mercurial a Jenkins&lt;/h3&gt;
&lt;p&gt;Desde la ventana principal, pulsamos en &lt;em&gt;&amp;ldquo;Administrar Jenkins&amp;rdquo;&lt;/em&gt;, y después en &lt;em&gt;&amp;ldquo;Administrar Plugins&amp;rdquo;&lt;/em&gt;. Antes deberíamos pasar por &lt;em&gt;&amp;ldquo;configurar el sistema&amp;rdquo;&lt;/em&gt;, pero esa parte no es imprescindible y os la dejo a vosotros.&lt;/p&gt;
&lt;p&gt;Ahora, en la pestaña de &lt;em&gt;&amp;ldquo;Todos los plugins&amp;rdquo;&lt;/em&gt; buscáis el de mercurial, lo marcáis y le dais al botón de instalar. No tiene pérdida.&lt;/p&gt;
&lt;p&gt;Tras unos segundines os dirá que está todo listo para usarse.&lt;/p&gt;
&lt;h3 id=&#34;crear-el-proyecto&#34;&gt;Crear el proyecto&lt;/h3&gt;
&lt;p&gt;Volvemos a la ventana inicial y pulsamos en &lt;code&gt;Nueva Tarea&lt;/code&gt;. Indicamos que es un &lt;code&gt;Proyecto libre&lt;/code&gt; y le ponemos un nombre, algo imaginativo&amp;hellip; No sé&amp;hellip; &lt;em&gt;&amp;ldquo;pyDoubles&amp;rdquo;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Ahora vamos a lo básico:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;origen del código fuente&lt;/em&gt;: &lt;code&gt;mercurial&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;repository URL&lt;/em&gt;: &lt;code&gt;ssh://hg@bitbucket.org/carlosble/pydoubles&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;branch&lt;/em&gt;: &lt;code&gt;default&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Ejecutar&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&amp;ldquo;Añadir un nuevo paso&amp;rdquo;-&amp;gt;&amp;ldquo;Ejecutar línea de comandos (shell)&amp;quot;&lt;/em&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;mkdir $WORKSPACE/log &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; true
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;nosetests --with-xunit --xunit-file&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$WORKSPACE/log/unit.xml pyDoublesTests/unit.py
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&lt;/span&gt;nosetests --with-xunit --xunit-file&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$WORKSPACE/log/hamcrest.xml pyDoublesTests/hamcrest_integration.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;&amp;ldquo;Acciones para ejecutar después&amp;rdquo;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&amp;ldquo;Publicar los resultados de los tests JUnit&amp;rdquo;&lt;/em&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;**/log/*.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Y ya está.&lt;/p&gt;
&lt;p&gt;Algunos comentarios: si en lugar de un único script hacéis varios, la diferencia será que parará en el primer error. Eso mismo puede hacerse ejecutando &amp;ldquo;set -e&amp;rdquo;, que es más cómodo.&lt;/p&gt;
&lt;p&gt;No he configurado el &lt;em&gt;polling&lt;/em&gt; ni ningún tipo de planificación. Sólo podremos ejecutarlo a mano. Creo que para el ejemplo es más que suficiente, y que la documentación os dará el resto.&lt;/p&gt;
&lt;h3 id=&#34;ejecutar&#34;&gt;Ejecutar&lt;/h3&gt;
&lt;p&gt;Es el momento en el que pulsáis sobre &lt;em&gt;&amp;ldquo;Ejecutar ahora&amp;rdquo;&lt;/em&gt;. Al poco tiempo os llamará la atención una barrita de progreso en la sección &lt;em&gt;&amp;ldquo;Estado de los nodos&amp;rdquo;&lt;/em&gt;. Voy a contar un poco más de esto.&lt;/p&gt;
&lt;p&gt;Jenkins consta de dos partes: el &lt;em&gt;maestro&lt;/em&gt; y los &lt;em&gt;esclavos&lt;/em&gt;. El &lt;em&gt;maestro&lt;/em&gt; es lo que hemos visto hasta ahora; los &lt;em&gt;esclavos&lt;/em&gt; son programas más pequeños que Jenkins instala en otras máquinas y que son los que ejecutarán todo el proyecto en sí. Dado que Jenkins consume bastantes recursos, es normal dejarlo apartado en un único servidor y configurar los workers en otras máquinas. Por defecto vemos que ha configurado dos esclavos en la máquina actual. En un entorno real, eso es un suicidio, pero para nuestro ejemplo es más que suficiente. Cuantos más esclavos tengamos, más trabajo se podrá realizar en paralelo.&lt;/p&gt;
&lt;p&gt;Una vez que haya terminado (no le llevará mucho tiempo), podréis navegar por la información de la build. Os recomiendo las secciones:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&amp;ldquo;Salida de Consola&amp;rdquo;&lt;/em&gt;, donde podréis ver cómo fue la ejecución&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&amp;ldquo;Resultados de los tests&amp;rdquo;&lt;/em&gt;, donde se renderizan los tests en formato molón.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;conclusiones&#34;&gt;Conclusiones&lt;/h2&gt;
&lt;p&gt;Como podéis observar, resulta tremendamente sencillo crear un proyecto en Jenkins, siempre y cuando se cumplan las dos primeras condiciones: que haya pruebas automáticas y que resulte sencillo de desplegar.&lt;/p&gt;
&lt;p&gt;Aunque hacer cosas sencillas con Jenkins es tremendamente sencillo, hacer cosas un poco más difíciles es un infierno. No os emocionéis todavía creando proyectos a mansalva, ya que en el siguiente artículo comentaré otro servidor de &lt;em&gt;CI&lt;/em&gt; que puede gustaros aún más. Cada cual tiene sus ventajas y sus inconvenientes, claro está.&lt;/p&gt;
&lt;p&gt;Si, finalmente, termináis adoptando Jenkins como vuestro &lt;em&gt;CI&lt;/em&gt; habitual, os recomiendo que hagáis backup de los proyectos, que son archivos XML que se encontrarán, probablemente, en &lt;code&gt;$HOME/.jenkins&lt;/code&gt;. Tened cuidado, porque ese directorio tiende a crecer desmesuradamente (Jenkins tiene mecanismos para controlarlo, investigad las opciones del proyecto).&lt;/p&gt;
&lt;p&gt;En caso de que queráis esperar a ver la otra opción que quiero presentar, podéis ir adaptando vuestros proyectos para que se puedan probar y desplegar fácilmente. ¡Eso nunca está de más!&lt;/p&gt;

        
      </description>
    </item>
    
  </channel>
</rss>
