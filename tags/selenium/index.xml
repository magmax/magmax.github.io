<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>selenium - Etiqueta - El blog de MagMax</title>
        <link>https://magmax.org/tags/selenium/</link>
        <description>selenium - Etiqueta - El blog de MagMax</description>
        <generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Sat, 16 Nov 2013 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://magmax.org/tags/selenium/" rel="self" type="application/rss+xml" /><item>
    <title>Webdriver: crackeando la web de Renfe</title>
    <link>https://magmax.org/blog/webdriver-practico/</link>
    <pubDate>Sat, 16 Nov 2013 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/webdriver-practico/</guid>
    <description><![CDATA[Todos los días tengo que coger el tren para ir a trabajar. Hablando con un amigo que también tiene que ir en tren, se me ocurrió comentarle que la seguridad de los abonos es muy mala, ya que hay que formalizar cada viaje y sacar un billete, donde se muestra el número de abono y se ocultan los 3 últimos dígitos del DNI y la letra. Insistí en que era capaz de sacarme viajes con su abono si me daba uno de sus billetes&hellip;]]></description>
</item><item>
    <title>Selenium y QA Automation: PageObjects</title>
    <link>https://magmax.org/blog/selenium-y-qa-automation-3/</link>
    <pubDate>Fri, 29 Mar 2013 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/selenium-y-qa-automation-3/</guid>
    <description><![CDATA[En los artículos anteriores, &ldquo;Selenium y QA Automation&rdquo; y &ldquo;Selenium y QA Automation: Tests&rdquo; hemos visto cómo utilizar Selenium/Webdriver.
En este caso vamos a ver cómo organizar estos tests. Realmente no es necesario el conocimiento previo de Selenium, ya que puede utilizarse algún otro framework. Sin embargo, sí que resulta interesante ya que lo usaremos para los ejemplos.
Aunque los PageObjects se idearon para pruebas en la Web (de hecho, creo que son una idea de Selenium), este artículo está escrito pensando que los PageObjects pueden usarse tanto en aplicaciones de escritorio como web, por lo que veréis &ldquo;pantalla&rdquo; o &ldquo;página&rdquo; indistintamente.]]></description>
</item><item>
    <title>Selenium y QA Automation: tests</title>
    <link>https://magmax.org/blog/selenium-y-qa-automation-2/</link>
    <pubDate>Wed, 13 Mar 2013 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/selenium-y-qa-automation-2/</guid>
    <description><![CDATA[En mi anterior post sobre Selenium y QA Automation comenzamos a ver cómo utilizar Selenium/Webdriver para la automatización de tareas web. En esta ocasión lo adaptaremos para su uso más habitual: la creación de pruebas de aceptación.
Mediante ejemplos en Python adaptaremos nuestro ejercicio anterior para ejecutarlo como tests. Así mismo, refactorizaremos para obtener un entorno de pruebas sencillo, extensible y fácil de utilizar.
Tras este artículo, no debería ser difícil utilizar un sistema de integración contínua para la automatización de pruebas de aceptación.]]></description>
</item><item>
    <title>Selenium y QA Automation</title>
    <link>https://magmax.org/blog/selenium-y-qa-automation/</link>
    <pubDate>Fri, 08 Mar 2013 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/selenium-y-qa-automation/</guid>
    <description><![CDATA[En el mundo de la automatización de pruebas, Selenium arrasa. Existen otras alternativas, pero lo cierto es que todo el mundo utiliza Selenium.
Hay distintas formas de utilizarlo, y aquí veremos algunas de ellas. He elegido Python porque es mi lenguaje favorito y Java porque es el lenguaje en el que está hecho Selenium.
  ¿Qué es? Selenium es un conjunto de herramientas que permiten la automatización de navegaciones Web.]]></description>
</item><item>
    <title>Pruebas web: selenium &#43; atheist</title>
    <link>https://magmax.org/blog/selenium-atheist/</link>
    <pubDate>Fri, 13 May 2011 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/selenium-atheist/</guid>
    <description><![CDATA[Voy a explicar, con un ejemplo sencillito, cómo realizar pruebas web.
Además, voy a terminar indicando cómo podemos hacerlo aún más chulo lanzándolo desde atheist.
  Instalación Necesitaremos bajarnos el servidor selenium . También necesitaremos el cliente python (he estado intentándolo con Java y se me ha hecho bastante complejo, debido a las dependencias).
Una vez nos hemos descargado el cliente, lo descomprimimos y ejecutamos:
1 2 3  $ .]]></description>
</item></channel>
</rss>
