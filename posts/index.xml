<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Todo Artículos - El blog de MagMax</title>
        <link>https://magmax.org/posts/</link>
        <description>Todo Artículos | El blog de MagMax</description>
        <generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Sun, 11 Oct 2020 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://magmax.org/posts/" rel="self" type="application/rss+xml" /><item>
    <title>ArgoCD con Kind</title>
    <link>https://magmax.org/blog/argocd/</link>
    <pubDate>Sun, 11 Oct 2020 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/argocd/</guid>
    <description><![CDATA[En este post documento cómo ejecutar una instancia de ArgoCD localmente, usando Kind para crear un cluster Kubernetes. Además, utilizaré cert-manager para crear un certificado autofirmado para servirlo sobre HTTPS.
  Creando el cluster con kind Lo primero es tener un cluster kubernetes. Se necesita tener kind disponible en el path (quizá descargándolo en ~/bin o ~/.local/bin). Ésta es la configuración que he utilizado yo:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  # kind.]]></description>
</item><item>
    <title>Monitorización con Graphite</title>
    <link>https://magmax.org/blog/monitorizacion-con-graphite/</link>
    <pubDate>Sat, 28 Mar 2020 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/monitorizacion-con-graphite/</guid>
    <description><![CDATA[Actualmente está de moda utilizar Graphite como base de cualquier sistema de monitorización, y sobre él añadir distintas herramientas. Éstas pueden estar orientadas al sistema de almacenamiento, interfaz para programas o interfaz para humanos.
En este post analizaré el stack de Graphite, proponiendo diversas herramientas cuyo uso es bastante habitual.
Al final del post, cualquiera con una Debian/Ubuntu debería tener instalado un Graphite básico con un panel muy molón.
  Graphite Es el corazón de todo el tinglado que vamos a montar.]]></description>
</item><item>
    <title>Organización</title>
    <link>https://magmax.org/blog/organizacion/</link>
    <pubDate>Sun, 25 Nov 2018 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/organizacion/</guid>
    <description><![CDATA[Muchos de los artículos más curiosos comienzan en un hilo en Twitter. Ése es el caso de éste.
En un hilo con @recena, éste dijo::
 I am really tired of the trends around job titles etc&hellip;. We should talk about software engineer and responsibilities, that&rsquo;s all.
 Y eso es lo que ha inspirado este artículo.
  En realidad, no pude evitar responderle::
 Fully agree. It is just a matter of responsabilities, joined by role, and assigning a bunch of roles to every people, ensuring each role is owned by at least 2 people and everyone is doing it right (with KPIs).]]></description>
</item><item>
    <title>Hosting</title>
    <link>https://magmax.org/blog/hosting/</link>
    <pubDate>Fri, 05 Oct 2018 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/hosting/</guid>
    <description><![CDATA[En el mundo hay distintas soluciones para albergar tus proyectos en internet. Aquí tenéis un pequeño repaso a algunas de las que he probado.
  En realidad, este post surge como un compromiso editorial con un proveedor de hosting español. Me preguntaron qué pediría por poner un artículo sobre ellos en mi blog y pedí espacio gratis por probarles. Finalmente he decidido publicar uno mío sobre ellos y otras soluciones más, pero sin pedirles nada a cambio.]]></description>
</item><item>
    <title>DevOps: ¿Equipo, Rol o metodología?</title>
    <link>https://magmax.org/blog/devops-rol-o-metodologia/</link>
    <pubDate>Mon, 10 Sep 2018 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/devops-rol-o-metodologia/</guid>
    <description><![CDATA[Recientemente leí el artículo 6 DevOps mistakes to avoid, cuyo primer punto es &ldquo;Creating a single DevOps team&rdquo;. Esto genero un pequeño hilo en twitter con @recena, donde colaboró también mi amigo @thejtoken.
Finalmente, @david_bonilla, en la última bonilista, ha escrito también en torno a este tema: ¿Es DevOps un rol o una metodología de trabajo?.
En este artículo doy mis argumentos a favor y en contra.
  El problema No queda claro cuales son las competencias exactas de un DevOps.]]></description>
</item><item>
    <title>Instalando Linux con UEFI</title>
    <link>https://magmax.org/blog/instalando-linux-con-uefi/</link>
    <pubDate>Sat, 09 Sep 2017 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/instalando-linux-con-uefi/</guid>
    <description><![CDATA[Hace tiempo que me compré un ordenador nuevo, pero no lo estoy usando porque no era capaz de instalarme un sistema operativo decente de forma correcta.
Debo decir que tiene sus triquiñuelas, pero no es difícil. En menos de 10 minutos puedes tener montado el arranque dual sin problemas.
Así que no nos retrasemos más.
  Hardware Muchas cosas que voy a contar aquí pueden ser dependientes del hardware. De todas maneras, intentaré orientaros por si no se corresponde con el mío, que es lo más probable XD.]]></description>
</item><item>
    <title>Plugins en Python</title>
    <link>https://magmax.org/blog/plugins-en-python/</link>
    <pubDate>Sun, 20 Nov 2016 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/plugins-en-python/</guid>
    <description><![CDATA[Siempre me ha gustado escribir aplicaciones extensibles, pero picarme todo un sistema de plugins me ha parecido tedioso.
Por eso he intentado buscar librerías que me ayuden a crear plugins, aunque siempre he tenido problemas para la distribución de éstos, como me ha pasado con Yapsy.
La verdad es que me he sentido como un auténtico estúpido al descubrir que Python tiene un sistema para escribir plugins muy sencillo de usar.]]></description>
</item><item>
    <title>ipython autoreload</title>
    <link>https://magmax.org/blog/ipython-autoreload/</link>
    <pubDate>Fri, 10 Jun 2016 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/ipython-autoreload/</guid>
    <description><![CDATA[Cuando alguien está chalao, escribe un intérprete de su lenguaje favorito.
Cuando alguien está loco del todo, escribe ipython.
Resulta difícil describir qué es ipython&hellip; Ya que resulta difícil saber qué no es. Quedémonos con que es un intérprete de Python con esteroides.
Uno de esos esteroides es que nos permite recargar automáticamente los módulos en cuanto cambia algún fichero. Y aquí os explico cómo hacerlo.
  Método manual Arrancamos ipython y cargamos la extensión &ldquo;autoreload&rdquo;:]]></description>
</item><item>
    <title>Limpiando Dockers antiguos</title>
    <link>https://magmax.org/blog/limpiando-dockers-antiguos/</link>
    <pubDate>Mon, 04 Apr 2016 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/limpiando-dockers-antiguos/</guid>
    <description><![CDATA[En este mini-post voy a explicar cómo eliminar la basura generada por Docker. Habitualmente esto no se traducirá en liberación de espacio, pero hay veces que sí.
Veréis cómo es más fácil de lo que parece :)
  Cómo se genera la basura Hay dos tipos de cosas a borrar en Docker:
 Por un lado, están los containers que ya no están en ejecución. Estos se crean con cada docker run que ejecutemos, y puede haber varios por imagen.]]></description>
</item><item>
    <title>LAMP con Docker</title>
    <link>https://magmax.org/blog/lamp-con-docker/</link>
    <pubDate>Mon, 28 Mar 2016 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/lamp-con-docker/</guid>
    <description><![CDATA[Hace algún tiempo que escribí los artículos LAMP con Puppet y LAMP con Salt. Desde entonces ha llovido mucho y&hellip; bueno, creo que los sistemas tipo Salt y Puppet están casi obsoletos, gracias a nuevas tecnologías como Docker.
Pero antes de criticarme por esa afirmación, ruego al lector que se lea este artículo y luego decida por sí mismo.
Igual que en los otros ejercicios, montaremos una arquitectura LAMP (Linux + Apache + MySQL + PHP) que tan de moda ha estado durante mucho tiempo.]]></description>
</item></channel>
</rss>
