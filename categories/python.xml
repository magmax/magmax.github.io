<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="/assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MagMax Blog (python)</title><link>http://magmax.org/</link><description></description><atom:link href="http://magmax.org/categories/python.xml" rel="self" type="application/rss+xml"></atom:link><language>es</language><lastBuildDate>Sun, 11 Oct 2020 10:02:21 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Plugins en Python</title><link>http://magmax.org/blog/plugins-en-python/</link><dc:creator>Miguel Ángel García</dc:creator><description>&lt;div&gt;&lt;p&gt;Siempre me ha gustado escribir aplicaciones extensibles, pero picarme todo un sistema de plugins me ha parecido tedioso.&lt;/p&gt;
&lt;p&gt;Por eso he intentado buscar librerías que me ayuden a crear plugins, aunque siempre he tenido problemas para la distribución de éstos, como &lt;a class="reference external" href="http://magmax.org/blog/yapsy-un-sistema-de-plugins-pythonico"&gt;me ha pasado con Yapsy&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;La verdad es que me he sentido como un auténtico estúpido al descubrir que Python tiene un sistema para escribir plugins muy sencillo de usar. Vamos a ver cómo.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://magmax.org/blog/plugins-en-python/" class="btn btn-default"&gt;Leer más…&lt;/a&gt; (quedan 2 minutos de lectura)&lt;/p&gt;&lt;/div&gt;</description><category>python</category><guid>http://magmax.org/blog/plugins-en-python/</guid><pubDate>Sun, 20 Nov 2016 03:51:46 GMT</pubDate></item><item><title>Yapsy, un sistema de plugins pythónico</title><link>http://magmax.org/blog/yapsy-un-sistema-de-plugins-pythonico/</link><dc:creator>Miguel Ángel García</dc:creator><description>&lt;div&gt;&lt;p&gt;Me gustan los programas que pueden evolucionar. Un reproductor de vídeo debe evolucionar a medida que lo hacen los formatos de vídeo, adaptándose a los nuevos.&lt;/p&gt;
&lt;p&gt;Además, me gustan los programas que puedo extender. Añadir nueva funcionalidad que los desarrolladores originales no pensaron en su momento.&lt;/p&gt;
&lt;p&gt;Éstas son dos de las aplicaciones de los &lt;em&gt;plugins&lt;/em&gt;, y podemos tenerlas de una forma muy sencilla en &lt;a class="reference external" href="http://python.org/"&gt;Python&lt;/a&gt; mediante &lt;a class="reference external" href="http://yapsy.sourceforge.net/"&gt;Yapsy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://yapsy.sourceforge.net/"&gt;Yapsy&lt;/a&gt; nos ayuda a la gestión de los &lt;em&gt;plugins&lt;/em&gt; mediante la búsqueda, carga y gestión automáticas. Veremos también que las creación de nuevos &lt;em&gt;plugins&lt;/em&gt; es ridículamente fácil.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://magmax.org/blog/yapsy-un-sistema-de-plugins-pythonico/" class="btn btn-default"&gt;Leer más…&lt;/a&gt; (quedan 3 minutos de lectura)&lt;/p&gt;&lt;/div&gt;</description><category>plugins</category><category>python</category><guid>http://magmax.org/blog/yapsy-un-sistema-de-plugins-pythonico/</guid><pubDate>Thu, 09 Jul 2015 00:00:00 GMT</pubDate></item><item><title>Peewee, un ORM para Python</title><link>http://magmax.org/blog/peewee-un-orm-para-python/</link><dc:creator>Miguel Ángel García</dc:creator><description>&lt;div&gt;&lt;p&gt;Estoy acostumbrándome a usar &lt;a class="reference external" href="https://www.djangoproject.com/"&gt;Django&lt;/a&gt; para casi todo, y su &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Object-relational_mapping"&gt;ORM&lt;/a&gt; para acceder a la base de datos. Es muy completo y permite evitar tener que escribir &lt;a class="reference external" href="http://es.wikipedia.org/wiki/SQL"&gt;SQL&lt;/a&gt; a mano, añadiendo la posibilidad de cambiar de motor de base de datos sin que sea traumático.&lt;/p&gt;
&lt;p&gt;Sin embargo, a veces necesito guardar cosas en disco desde programas de línea de órdenes, y no me parece bien depender de &lt;a class="reference external" href="https://www.djangoproject.com/"&gt;Django&lt;/a&gt; para algo así. En estos casos suelo usar &lt;a class="reference external" href="https://docs.python.org/3.4/library/shelve.html"&gt;Shelve&lt;/a&gt;, de la librería estándar, pero no es lo suficientemente versátil: no admite concurrencia.&lt;/p&gt;
&lt;p&gt;En este post voy a explicar cómo utilizar &lt;a class="reference external" href="https://peewee.readthedocs.org/en/latest/"&gt;Peewee&lt;/a&gt; como &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Object-relational_mapping"&gt;ORM&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://magmax.org/blog/peewee-un-orm-para-python/" class="btn btn-default"&gt;Leer más…&lt;/a&gt; (quedan 1 minutos de lectura)&lt;/p&gt;&lt;/div&gt;</description><category>orm</category><category>peewee</category><category>python</category><guid>http://magmax.org/blog/peewee-un-orm-para-python/</guid><pubDate>Thu, 16 Apr 2015 04:49:40 GMT</pubDate></item><item><title>Python distribuido: Celery</title><link>http://magmax.org/blog/python-distribuido-celery/</link><dc:creator>Miguel Ángel García</dc:creator><description>&lt;div&gt;&lt;p&gt;Ahora están de modas las arquitecturas &lt;abbr title="Service Oriented Architectures"&gt;SOA&lt;/abbr&gt;. Estas arquitecturas consisten en pequeños servicios muy específicos, de manera que interactúan unos con otros.&lt;/p&gt;
&lt;p&gt;En esta ocasión voy a contar cómo utilizar &lt;a class="reference external" href="http://www.celeryproject.org/"&gt;Celery&lt;/a&gt; para crear una arquitectura SOA.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://magmax.org/blog/python-distribuido-celery/" class="btn btn-default"&gt;Leer más…&lt;/a&gt; (quedan 8 minutos de lectura)&lt;/p&gt;&lt;/div&gt;</description><category>celery</category><category>python</category><guid>http://magmax.org/blog/python-distribuido-celery/</guid><pubDate>Fri, 20 Mar 2015 00:00:00 GMT</pubDate></item><item><title>Django lo hizo un mago: plantillas y contextos</title><link>http://magmax.org/blog/django-lo-hizo-un-mago-plantillas-y-contextos/</link><dc:creator>Miguel Ángel García</dc:creator><description>&lt;div&gt;&lt;p&gt;En el tutorial &lt;a class="reference external" href="http://magmax.org/blog/django-lo-hizo-un-mago"&gt;Django lo hizo un mago&lt;/a&gt; expliqué los conceptos básicos de &lt;a class="reference external" href="https://www.djangoproject.com/"&gt;Django&lt;/a&gt;. En &lt;a class="reference external" href="http://magmax.org/blog/django-lo-hizo-un-mago-paginacion-y-detalle"&gt;Django lo hizo un mago: paginación y detalle&lt;/a&gt; añadimos paginación y la ventana de detalle. En esta ocasión vamos a ponerlo bonito mediante plantillas, y crearemos cierto estilo añadiendo también contextos.&lt;/p&gt;
&lt;p&gt;Para los que sepan algo de &lt;a class="reference external" href="https://www.djangoproject.com/"&gt;Django&lt;/a&gt;, no es necesario seguir los tutoriales anteriores, aunque sí es recomendable para los más novatos :D&lt;/p&gt;
&lt;p&gt;&lt;a href="http://magmax.org/blog/django-lo-hizo-un-mago-plantillas-y-contextos/" class="btn btn-default"&gt;Leer más…&lt;/a&gt; (quedan 4 minutos de lectura)&lt;/p&gt;&lt;/div&gt;</description><category>django</category><category>python</category><guid>http://magmax.org/blog/django-lo-hizo-un-mago-plantillas-y-contextos/</guid><pubDate>Thu, 12 Mar 2015 00:00:00 GMT</pubDate></item><item><title>Django lo hizo un mago: paginación y detalle</title><link>http://magmax.org/blog/django-lo-hizo-un-mago-paginacion-y-detalle/</link><dc:creator>Miguel Ángel García</dc:creator><description>&lt;div&gt;&lt;p&gt;En el artículo anterior &lt;a class="reference external" href="http://magmax.org/blog/django-lo-hizo-un-mago"&gt;Django lo hizo un mago&lt;/a&gt; creamos un entorno básico con un listado de &lt;em&gt;posts&lt;/em&gt; para un &lt;em&gt;blog&lt;/em&gt;. En esta ocasión vamos a añadir más funcionalidad.&lt;/p&gt;
&lt;p&gt;En concreto, veremos cómo visualizar cada &lt;em&gt;post&lt;/em&gt; (lo que llamaremos &lt;em&gt;detalle&lt;/em&gt;), y añadiremos paginación.&lt;/p&gt;
&lt;p&gt;Pero antes un extra: Añadir elementos aleatorios de pruebas fácilmente con &lt;a class="reference external" href="https://github.com/kaleidos/django-sampledatahelper"&gt;sampledatahelper&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://magmax.org/blog/django-lo-hizo-un-mago-paginacion-y-detalle/" class="btn btn-default"&gt;Leer más…&lt;/a&gt; (quedan 3 minutos de lectura)&lt;/p&gt;&lt;/div&gt;</description><category>django</category><category>python</category><guid>http://magmax.org/blog/django-lo-hizo-un-mago-paginacion-y-detalle/</guid><pubDate>Thu, 26 Feb 2015 00:00:00 GMT</pubDate></item><item><title>Django lo hizo un mago</title><link>http://magmax.org/blog/django-lo-hizo-un-mago/</link><dc:creator>Miguel Ángel García</dc:creator><description>&lt;div&gt;&lt;p&gt;En las películas, a menudo, se encuentran errores imposibles de explicar: un tarro que se derrama y aparece lleno, gafas que aparecen y desaparecen, espadas que se transforman en martillos... En esos casos decimos que "lo hizo un mago".&lt;/p&gt;
&lt;p&gt;En esta ocasión no es que un mago haya hecho &lt;a class="reference external" href="https://www.djangoproject.com/"&gt;Django&lt;/a&gt;, sino que hay un equipo impresionante detrás. Pero sí es cierto que &lt;a class="reference external" href="https://www.djangoproject.com/"&gt;Django&lt;/a&gt; hace mucha &lt;em&gt;magia&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Me gustaría comenzar aquí un pequeño tutorial rápido para usar &lt;a class="reference external" href="https://www.djangoproject.com/"&gt;Django&lt;/a&gt;, utilizando toda la magia. Este tutorial no valdrá en todos los casos, pero dará un buen punto de comienzo para aplicaciones más avanzadas.&lt;/p&gt;
&lt;p&gt;Este artículo utiliza el mismo ejemplo que el que escribí hace tiempo &lt;a class="reference external" href="http://magmax.org/blog/django-sitio-basico"&gt;Django: Creación de un sitio básico&lt;/a&gt;, pero creo que lo encontraréis muy mejorado.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://magmax.org/blog/django-lo-hizo-un-mago/" class="btn btn-default"&gt;Leer más…&lt;/a&gt; (quedan 6 minutos de lectura)&lt;/p&gt;&lt;/div&gt;</description><category>django</category><category>python</category><guid>http://magmax.org/blog/django-lo-hizo-un-mago/</guid><pubDate>Mon, 23 Feb 2015 00:00:00 GMT</pubDate></item><item><title>Retrospectiva a la #PyConEs2014 (2)</title><link>http://magmax.org/blog/pycones-2014-2/</link><dc:creator>Miguel Ángel García</dc:creator><description>&lt;div&gt;&lt;p&gt;Con dos meses de retraso, ahí va la segunda parte de esta retrospectiva.&lt;/p&gt;
&lt;p&gt;Siento que éste artículo no tenga la calidad habitual, pero añadir enlaces es lo que más tiempo me consume y... sinceramente, tengo muchos proyectos en la cabeza y poco tiempo. Algunos de ellos tienen que ver con la web y con artículos :)&lt;/p&gt;
&lt;p&gt;&lt;a href="http://magmax.org/blog/pycones-2014-2/" class="btn btn-default"&gt;Leer más…&lt;/a&gt; (quedan 7 minutos de lectura)&lt;/p&gt;&lt;/div&gt;</description><category>python</category><guid>http://magmax.org/blog/pycones-2014-2/</guid><pubDate>Mon, 19 Jan 2015 00:00:00 GMT</pubDate></item><item><title>Retrospectiva a la #PyConEs2014 (1)</title><link>http://magmax.org/blog/pycones-2014/</link><dc:creator>Miguel Ángel García</dc:creator><description>&lt;div&gt;&lt;p&gt;Este año he tenido la suerte de asistir a la &lt;a href="http://2014.es.pycon.org/" title="Python Conference España"&gt;PyConEs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;En este momento estoy en el tren de vuelta a casa. Con todo reciente, os contaré cómo lo he vivido yo.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://magmax.org/blog/pycones-2014/" class="btn btn-default"&gt;Leer más…&lt;/a&gt; (quedan 6 minutos de lectura)&lt;/p&gt;&lt;/div&gt;</description><category>python</category><guid>http://magmax.org/blog/pycones-2014/</guid><pubDate>Sun, 09 Nov 2014 00:00:00 GMT</pubDate></item><item><title>Publicando artefactos Python</title><link>http://magmax.org/blog/publicando-artefactos-python/</link><dc:creator>Miguel Ángel García</dc:creator><description>&lt;div&gt;&lt;p&gt;Hace un par de semanas que comencé un proyectillo Python que se ha transformado en mi primer paquete &lt;a class="reference external" href="https://pypi.python.org/pypi"&gt;pypi&lt;/a&gt; serio. Bueno, realmente se ha transformado en dos paquetes, lo que me ha hecho darme cuenta de lo repetitivo de algunas tareas... Y cómo no, he decidido compartirlo aquí.&lt;/p&gt;
&lt;p&gt;Así aprovecharé para contar algunas lecciones aprendidas, ahorrando así tiempo la próxima vez y ayudando a otros. De hecho, ya estoy preparando el siguiente XD&lt;/p&gt;
&lt;p&gt;Comenzaré desde el principio del todo: la creación del repositorio.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://magmax.org/blog/publicando-artefactos-python/" class="btn btn-default"&gt;Leer más…&lt;/a&gt; (quedan 5 minutos de lectura)&lt;/p&gt;&lt;/div&gt;</description><category>package</category><category>python</category><guid>http://magmax.org/blog/publicando-artefactos-python/</guid><pubDate>Wed, 14 May 2014 00:00:00 GMT</pubDate></item></channel></rss>