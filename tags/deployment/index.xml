<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>deployment on El blog de MagMax</title>
    <link>https://magmax.org/tags/deployment/</link>
    <description>Recent content in deployment on El blog de MagMax</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 03 Aug 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://magmax.org/tags/deployment/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cómo puede cambiar los despliegues Docker</title>
      <link>https://magmax.org/blog/como-puede-cambiar-los-despliegues-docker/</link>
      <pubDate>Mon, 03 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/blog/como-puede-cambiar-los-despliegues-docker/</guid>
      <description>
        
          &lt;p&gt;Llevo ya bastante tiempo pensando cómo desplegar correctamente una aplicación.
La idea es ser capaz de desplegar en un sistema distribuido sin
&lt;abbr title=&#34;Denial of Service&#34;&gt;DoS&lt;/abbr&gt;
.&lt;/p&gt;
&lt;p&gt;El principal problema reside en cómo sincronizar todas las máquinas para realizar el cambio en el menor tiempo posible, así como en evitar puntos de fallo y admitir &lt;em&gt;rollback&lt;/em&gt;. Casi na.&lt;/p&gt;
&lt;p&gt;Sin embargo, &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; facilita todo esto. Aquí explico cómo se me ha ocurrido, aunque no es nada que probablemente no se os haya pasado por la cabeza a vosotros también.&lt;/p&gt;
&lt;p&gt;Y mis agradecimientos al grupo &lt;a href=&#34;http://agile-cr.github.io/&#34;&gt;Agile-CR&lt;/a&gt;, que me ayudaron a poner en orden alguna de estas ideas.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/containers.jpg&#34;
         alt=&#34;Docker es un contenedor&#34;/&gt; 
&lt;/figure&gt;

&lt;h2 id=&#34;problemas-de-despliegue&#34;&gt;Problemas de despliegue&lt;/h2&gt;
&lt;p&gt;Existen numerosos problemas durante el despliegue:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;¿Cómo llevar el software hasta todas las máquinas de un cluster?&lt;/li&gt;
&lt;li&gt;¿Cómo configurarlas?&lt;/li&gt;
&lt;li&gt;¿Cómo reemplazar la versión antigua en el menor plazo de tiempo posible?&lt;/li&gt;
&lt;li&gt;¿Cuándo sincronizar la Base de Datos?&lt;/li&gt;
&lt;li&gt;¿Es posible que la aplicación funcione durante un tiempo con una configuración errónea?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Por supuesto, estamos hablando de &lt;a href=&#34;https://magmax.org/blog/en-busca-de-los-cinco-9s/&#34;&gt;sistemas con una alta disponibilidad, cercana
al 99.99%&lt;/a&gt;. Esto incluye, principalmente, servicios internos y servicios web.&lt;/p&gt;
&lt;p&gt;El esquema, por tanto, tendrá esta pinta:&lt;/p&gt;
&lt;div hidden&gt;

@startuml docker-service-view
card &#34;Load Balancer&#34; as lb
package Services {
  card &#34;Service 1&#34; as s1
  card &#34;Service 2&#34; as s2
  card &#34;Service N&#34; as sN
}
card &#34;Database Cluster&#34; as dc

lb --&gt; s1
lb --&gt; s2
lb --&gt; sN
s1 --&gt; dc
s2 --&gt; dc
sN --&gt; dc
@enduml

&lt;/div&gt;

&lt;img src=&#34;https://magmax.org/diagrams/docker-service-view.png&#34;/&gt;

&lt;p&gt;Resulta sencillo ver que:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Si desplegamos primero la base de datos, el sistema estará inconsistente hasta que se despliegue el resto.&lt;/li&gt;
&lt;li&gt;Si desplegamos primero la configuración, pasará lo mismo.&lt;/li&gt;
&lt;li&gt;Si desplegamos primero el software, puede estar mal configurado o no ser acorde con la base de datos.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Luego el problema tiene difícil solución.&lt;/p&gt;
&lt;p&gt;Herramientas como &lt;a href=&#34;https://puppetlabs.com/&#34;&gt;Puppet&lt;/a&gt;, &lt;a href=&#34;https://www.chef.io&#34;&gt;Chef&lt;/a&gt;, &lt;a href=&#34;http://saltstack.com/&#34;&gt;Salt&lt;/a&gt; o &lt;a href=&#34;http://www.ansible.com&#34;&gt;Ansible&lt;/a&gt; pueden ayudar, pero
también pueden ser foco de problemas, ya que suelen ser declarativas. Además, es
posible que necesitemos realizar operaciones en distintas máquinas, como evitar
que el balanceador de carga sirva la máquina que estamos alterando o lanzar los
cambios de base de datos.&lt;/p&gt;
&lt;h3 id=&#34;desplegando-la-base-de-datos&#34;&gt;Desplegando la base de datos&lt;/h3&gt;
&lt;p&gt;Quizá el punto de fallo más crítico es la base de datos. La única manera posible de evitar problemas durante el despliegue es dividir los cambios en dos.&lt;/p&gt;
&lt;p&gt;Por una parte, todos los &lt;code&gt;create&lt;/code&gt;, &lt;code&gt;add column&lt;/code&gt;, &lt;code&gt;insert&lt;/code&gt;, etc. Estas operaciones son inócuas y no deberían afectar al despliegue actual, más allá de una pequeña reducción temporal de rendimiento.&lt;/p&gt;
&lt;p&gt;Por otra parte, los &lt;code&gt;drop&lt;/code&gt;, &lt;code&gt;delete&lt;/code&gt;, &lt;code&gt;alter&lt;/code&gt;, etc. Que son operaciones que sí pueden tener repercusiones.&lt;/p&gt;
&lt;p&gt;Los &lt;code&gt;alter&lt;/code&gt; que modifican el nombre de una columna deberían estar prohibidos completamente, ya que se ejecuten donde se ejecuten dejarán el sistema inestable durante un tiempo.&lt;/p&gt;
&lt;p&gt;Con estas premisas, es fácil ver que podemos ejecutar el primer grupo &lt;strong&gt;antes&lt;/strong&gt; de instalar la nueva versión del software y el segundo grupo &lt;strong&gt;después&lt;/strong&gt; de la instalación de éste.&lt;/p&gt;
&lt;p&gt;Y con esto, el despliegue de nuestra base de datos es seguro.&lt;/p&gt;
&lt;h3 id=&#34;desplegando-la-aplicación-y-la-configuración&#34;&gt;Desplegando la aplicación y la configuración&lt;/h3&gt;
&lt;p&gt;Con la aplicación y la configuración no ocurre lo mismo. No importa qué se despliegue antes, afectará al funcionamiento.&lt;/p&gt;
&lt;p&gt;Una opción es &lt;strong&gt;centralizar la configuración&lt;/strong&gt;. Básicamente se deja la configuración en una base de datos y se accede a ella directamente o mediante un servicio intermedio (yo recomendaría esto último).&lt;/p&gt;
&lt;p&gt;Pero hay cierta configuración que no puede moverse a este nuevo sistema: La configuración para conectarse a él. Sin embargo, ésta es una configuración que no cambiará a menudo y que, probablemente, sea igual en todos los servicios de un mismo tipo.&lt;/p&gt;
&lt;h2 id=&#34;soluciones-al-despliegue&#34;&gt;Soluciones al despliegue&lt;/h2&gt;
&lt;h3 id=&#34;duplicando-el-sistema&#34;&gt;Duplicando el sistema&lt;/h3&gt;
&lt;p&gt;Una posible solución es duplicar el sistema. Se duplican las máquinas y se instala la nueva aplicación en las máquinas nuevas. Luego se cambia el &lt;strong&gt;Load balancer&lt;/strong&gt; y todo solucionado.&lt;/p&gt;
&lt;p&gt;El problema de esta solución es el coste. Si albergamos nuestro propio hardware, necesitamos duplicar el número de máquinas para una acción que se realiza en pocos minutos.&lt;/p&gt;
&lt;p&gt;Sin embargo, también tiene ventajas adicionales:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;El cambio se realiza en todas las máquinas al mismo tiempo.&lt;/li&gt;
&lt;li&gt;Se podría probar la nueva versión de la aplicación en distintas máquinas, comprobando que tiene el mismo funcionamiento que la versión anterior (al menos).&lt;/li&gt;
&lt;li&gt;Permite &lt;strong&gt;A/B Testing&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Permite hacer &lt;strong&gt;rollback&lt;/strong&gt; de forma sencilla.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;dockers&#34;&gt;Dockers&lt;/h3&gt;
&lt;p&gt;Y aquí es cuando viene &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; al rescate. Si no sabéis qué es, podéis ver mi
&lt;a href=&#34;https://magmax.org/blog/docker/&#34;&gt;artículo anterior sobre Docker&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; permite ver la aplicación y su configuración como una caja negra, permitiéndonos desplegar más de un servicio idéntico en la misma máquina.&lt;/p&gt;
&lt;p&gt;Por lo tanto, podríamos mantener desplegadas las dos versiones de nuestra aplicación al mismo tiempo, quizá en puertos diferentes, y servir ambas. Durante un despliegue, se mira cuál es la activa y se sustituye la inactiva. A continuación se cambia el &lt;strong&gt;Load Balancer&lt;/strong&gt; y todo queda resuelto en milésimas de segundo.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; nos permite, por tanto, duplicar el sistema utilizando el mismo
hardware. La carga adicional será tan pequeña como permita nuestro contenedor de
aplicaciones, si es que estamos usando &lt;a href=&#34;http://www.jboss.org/&#34;&gt;JBoss&lt;/a&gt; o similar. Seguramente sea una
carga en RAM, pero poco en CPU.&lt;/p&gt;
&lt;p&gt;De esta forma ahorramos los costes y obtenemos todas las ventajas del sistema duplicado y algunas adicionales:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;la gestión de todos nuestros servicios se puede realizar de forma homogénea&lt;/strong&gt;, es decir, que podemos desplegar cualquier servicio de la misma manera.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Podemos mantener desplegadas varias versiones distintas&lt;/strong&gt; para permitirnos hacer &lt;em&gt;rollback&lt;/em&gt; o pruebas del conjunto, con un coste de un &lt;strong&gt;Load Balancer&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Se pueden &lt;strong&gt;guardar las versiones&lt;/strong&gt; como un bloque, usando los &lt;strong&gt;Docker Repositories&lt;/strong&gt;. Esto también facilitará la forma de hacer llegar las imágenes a las máquinas donde se van a desplegar.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Por si esto fuera poco, &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; guarda información en los &lt;em&gt;containers&lt;/em&gt; sobre
los puertos que expone y los puntos de montaje, lo que puede facilitar la
gestión de alertas (al menos a nievel básico).&lt;/p&gt;
&lt;h2 id=&#34;docker-vs-puppet-chef-salt-ansible-&#34;&gt;Docker vs Puppet, Chef, Salt, Ansible, &amp;hellip;&lt;/h2&gt;
&lt;p&gt;Seguramente penséis que &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; es mejor que los sistemas típicos de
orquestación, como &lt;a href=&#34;https://puppetlabs.com/&#34;&gt;Puppet&lt;/a&gt;, &lt;a href=&#34;https://www.chef.io&#34;&gt;Chef&lt;/a&gt;, &lt;a href=&#34;http://saltstack.com/&#34;&gt;Salt&lt;/a&gt; o &lt;a href=&#34;http://www.ansible.com&#34;&gt;Ansible&lt;/a&gt;. Sin embargo, son
herramientas diferentes que sirven para objetivos diferentes.&lt;/p&gt;
&lt;p&gt;Con este nuevo esquema de despliegues, podría usarse cualquiera de estos
sistemas de orquestación para instalar la nueva aplicación en las máquinas, y
planificar el momento en que se hará el cambio en el &lt;em&gt;load balancer&lt;/em&gt;. Así,
Docker y los sistemas de orquestación trabajan juntos.&lt;/p&gt;
&lt;p&gt;También son útiles para cambiar la configuración a nivel global o configurar
sistemas de monitorización y alertado.&lt;/p&gt;
&lt;p&gt;Como vemos, son herramientas complementarias, no competencia.&lt;/p&gt;
&lt;h2 id=&#34;conclusión&#34;&gt;Conclusión&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; es un nuevo paradigma que ha llegado para quedarse, a pesar de estar
basado en los &amp;ldquo;Linux Containers&amp;rdquo;, una tecnología que un amigo ya usaba allá por
el 2004.&lt;/p&gt;

        
      </description>
    </item>
    
  </channel>
</rss>
