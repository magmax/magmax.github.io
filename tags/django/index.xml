<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>django - Etiqueta - El blog de MagMax</title>
        <link>https://magmax.org/tags/django/</link>
        <description>django - Etiqueta - El blog de MagMax</description>
        <generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Mon, 07 Dec 2015 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://magmax.org/tags/django/" rel="self" type="application/rss+xml" /><item>
    <title>Django no encuentra las CSS del módulo Admin</title>
    <link>https://magmax.org/blog/django-no-encuentra-las-css-del-modulo-admin/</link>
    <pubDate>Mon, 07 Dec 2015 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/django-no-encuentra-las-css-del-modulo-admin/</guid>
    <description><![CDATA[No es la primera vez que pierdo un montón de tiempo para conseguir que Django me sirva los estáticos en producción, aunque sólo sea los del módulo Admin, así que he decidido escribir un post para no olvidarme.
Aunque servir estáticos con Django está desaconsejado por la propia documentación, ya que puede ser inseguro e ineficiente, yo lo encuentro muy útil para servir los estáticos del módulo Admin.
  El problema El principal problema es que Django no sirve los estáticos cuando se tiene DEBUG = False.]]></description>
</item><item>
    <title>Django lo hizo un mago: plantillas y contextos</title>
    <link>https://magmax.org/blog/django-lo-hizo-un-mago-plantillas-y-contextos/</link>
    <pubDate>Thu, 12 Mar 2015 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/django-lo-hizo-un-mago-plantillas-y-contextos/</guid>
    <description><![CDATA[En el tutorial Django lo hizo un mago expliqué los conceptos básicos de Django]. En Django lo hizo un mago: paginación y detalle añadimos paginación y la ventana de detalle. En esta ocasión vamos a ponerlo bonito mediante plantillas, y crearemos cierto estilo añadiendo también contextos.
Para los que sepan algo de Django, no es necesario seguir los tutoriales anteriores, aunque sí es recomendable para los más novatos :D
  Cómo leer este artículo Nuevamente, hay tres maneras de leer este artículo.]]></description>
</item><item>
    <title>Django lo hizo un mago: paginación y detalle</title>
    <link>https://magmax.org/blog/django-lo-hizo-un-mago-paginacion-y-detalle/</link>
    <pubDate>Thu, 26 Feb 2015 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/django-lo-hizo-un-mago-paginacion-y-detalle/</guid>
    <description><![CDATA[En el artículo anterior Django lo hizo un mago creamos un entorno básico con un listado de posts para un blog. En esta ocasión vamos a añadir más funcionalidad.
En concreto, veremos cómo visualizar cada post (lo que llamaremos detalle), y añadiremos paginación.
Pero antes un extra: Añadir elementos aleatorios de pruebas fácilmente con sampledatahelper.
  Cómo leer este artículo Hay tres maneras de leer este artículo.
 Continuando tras la lectura de Django lo hizo un mago.]]></description>
</item><item>
    <title>Django lo hizo un mago</title>
    <link>https://magmax.org/blog/django-lo-hizo-un-mago/</link>
    <pubDate>Mon, 23 Feb 2015 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/django-lo-hizo-un-mago/</guid>
    <description><![CDATA[En las películas, a menudo, se encuentran errores imposibles de explicar: un tarro que se derrama y aparece lleno, gafas que aparecen y desaparecen, espadas que se transforman en martillos&hellip; En esos casos decimos que &ldquo;lo hizo un mago&rdquo;.
En esta ocasión no es que un mago haya hecho Django, sino que hay un equipo impresionante detrás. Pero sí es cierto que Django hace mucha magia.
Me gustaría comenzar aquí un pequeño tutorial rápido para usar Django, utilizando toda la magia.]]></description>
</item><item>
    <title>Testing en django: mejoras</title>
    <link>https://magmax.org/blog/testing-en-django-mejoras/</link>
    <pubDate>Mon, 24 Mar 2014 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/testing-en-django-mejoras/</guid>
    <description><![CDATA[A menudo, cuando me pongo a hacer algo en Django y escribo mis primeros tests, los noto pesados y desordenados. Me resulta difícil diferenciar entre tests unitarios, de integracción y de aceptación.
De la misma manera, suele ser una aventura añadir coverage, ya que nunca me acuerdo de cómo se hace.
En este artículo describiré cómo hacer ambas cosas.
  Entorno Lo primero es crear un entorno con lo que vamos a necesitar.]]></description>
</item><item>
    <title>Aprender es duro (retrospectiva 2014)</title>
    <link>https://magmax.org/blog/aprender-es-duro/</link>
    <pubDate>Sat, 11 Jan 2014 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/aprender-es-duro/</guid>
    <description><![CDATA[Estoy muy cabreado.
Llevo estudiando sin parar para hacer páginas chulas en tiempos decentes durante años.
Pues bien. Cada vez tengo más la impresión de que he perdido el tiempo.
Además, siempre he odiado Javascript. Pues resulta que está de moda.
  Me puse a estudiar Tornado y YUI. De hecho, escribí un par de artículos sobre Tornado. Ambos frameworks son cojonudos, pero para prototipar estoy convencido de haberme equivocado.]]></description>
</item><item>
    <title>Pasos para crear un proyecto en Django</title>
    <link>https://magmax.org/blog/pasos-django/</link>
    <pubDate>Mon, 21 Nov 2011 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/pasos-django/</guid>
    <description><![CDATA[No tengo mucha experiencia en Django , así que no sería de extrañar que tuvierais mucho que enseñarme sobre este framework.
El caso es que me gustaría compartir los pasos básicos que me han parecido importantes a la hora de comenzar un nuevo proyecto.
  Pasos 1.- Inicializar el proyecto Lo primero es inicializar el proyecto. Para ello, usaremos la orden:
1  $ django-admin startproject nombre_proyecto   2.]]></description>
</item><item>
    <title>Django: Test del modelo y Fixtures</title>
    <link>https://magmax.org/blog/django-tests/</link>
    <pubDate>Sun, 21 Aug 2011 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/django-tests/</guid>
    <description><![CDATA[Una de las herramientas más potentes para la creación de pruebas en Django son las fixtures.
Las fixtures consisten en datos que se cargan en la base de datos para poder realizar pruebas.
Para mostrarlo, continuaré con el post de creación de un sitio básico con django, donde construimos un blog básico.
  Requisitos En principio, con el blog básico ya construido es suficiente. Nos vendrá bien la herramienta de administración, con el fin de automatizar un poco el proceso.]]></description>
</item><item>
    <title>Django: Creación de un sitio básico con Admin</title>
    <link>https://magmax.org/blog/django-sitio-basico/</link>
    <pubDate>Sat, 20 Aug 2011 00:00:00 &#43;0000</pubDate>
    <author>Autor</author>
    <guid>https://magmax.org/blog/django-sitio-basico/</guid>
    <description><![CDATA[Con todo el rollo de la mudanza me he dado cuenta de que no he escrito ningún artículo sobre Django. Estaba convencido de haberlo hecho. Así que voy a tener que arreglar el problema XD
  Qué es Django es un framework para la creación de aplicaciones web. Se centra en el backend, ofreciendo plantillas para el frontend, aunque para este último seguramente utilicemos otro framework adicional tipo JQuery , Dojo , Mootools , Prototype , etc.]]></description>
</item></channel>
</rss>
