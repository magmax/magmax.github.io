<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>virtualenv on El blog de MagMax</title>
    <link>https://magmax.org/tags/virtualenv/</link>
    <description>Recent content in virtualenv on El blog de MagMax</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 11 Aug 2011 00:00:00 +0000</lastBuildDate><atom:link href="https://magmax.org/tags/virtualenv/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Virtualenv: aislando nuestro entorno python</title>
      <link>https://magmax.org/blog/virtualenv/</link>
      <pubDate>Thu, 11 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/blog/virtualenv/</guid>
      <description>
        
          &lt;p&gt;Con el fin de facilitarnos el despliegue, siempre resulta interesante crear un entorno aislado para realizar pruebas. Lo ideal sería disponer de un entorno en local lo más parecido posible al entorno remoto.&lt;/p&gt;
&lt;p&gt;Pues esto es posible gracias a &lt;a href=&#34;http://www.virtualenv.org/&#34;&gt;VirtualEnv&lt;/a&gt; .&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://magmax.org/images/python.png&#34;
         alt=&#34;Python&#34;/&gt; 
&lt;/figure&gt;

&lt;h2 id=&#34;instalación&#34;&gt;Instalación&lt;/h2&gt;
&lt;p&gt;Podemos disponer de &lt;a href=&#34;http://www.virtualenv.org/&#34;&gt;VirtualEnv&lt;/a&gt;  en Windows, GNU/Linux y Mac, ya que es python y, por tanto, portable.&lt;/p&gt;
&lt;p&gt;Los detalles&amp;hellip; se los dejo a la instalación estándar, ya que éstos pueden variar con facilidad. Es paquete Debian oficial, lo que puede facilitar mucho las cosas :D&lt;/p&gt;
&lt;h2 id=&#34;despliegue-del-entorno&#34;&gt;Despliegue del entorno&lt;/h2&gt;
&lt;p&gt;Crear un entorno es tan complejo como:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;$ virtualenv ENTORNO
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Sustituyendo &amp;ldquo;ENTORNO&amp;rdquo; por el nombre del entorno a utilizar.&lt;/p&gt;
&lt;p&gt;Podemos utilizar la opción &lt;code&gt;-p&lt;/code&gt; para indicar la versión de python a utilizar:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;$ virtualenv ENTORNO -p /usr/bin/python2.7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;También disponemos de la opción &amp;ldquo;&amp;ndash;no-site-packages&amp;rdquo;, que nos aísla aún más del sistema de paquetes del sistema.&lt;/p&gt;
&lt;h2 id=&#34;activándolo&#34;&gt;Activándolo&lt;/h2&gt;
&lt;p&gt;Para activar el entorno virtual basta con ejecutar &lt;em&gt;source&lt;/em&gt; sobre uno de los archivos de nuestro entorno:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;$ source ENTORNO/bin/activate
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ENTORNO&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Para desactivarlo, basta ejecutar &lt;em&gt;deactivate&lt;/em&gt;, que se encontrará disponible cuando estemos dentro del entorno:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ENTORNO&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;$ deactivate
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&lt;/span&gt;$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;ejemplo-completo&#34;&gt;Ejemplo completo&lt;/h2&gt;
&lt;p&gt;Voy a crear un entorno y activarlo, demostrando que no estamos utilizando el entorno habitual en la máquina:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;$ python --version
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;Python 2.6.7
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;$ virtualenv PYTHON27 -p /usr/bin/python2.7
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;Running virtualenv with interpreter /usr/bin/python2.7
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;New python executable in PYTHON27/bin/python2.7
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;Also creating executable in PYTHON27/bin/python
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;Installing distribute....................................................................................................................................................................................done.
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;$ source PYTHON27/bin/activate
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;PYTHON27&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;$ python --version
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;Python 2.7.2+
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;PYTHON27&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;$ deactivate
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;$ python --version
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;Python 2.6.7
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;instalando-aplicaciones&#34;&gt;Instalando aplicaciones&lt;/h2&gt;
&lt;p&gt;Con el fin de poder instalar aplicaciones, nuestro entorno cuenta con dos potentes programas: &lt;a href=&#34;http://python-distribute.org/&#34;&gt;distribute&lt;/a&gt;  e &lt;a href=&#34;http://pypi.python.org/pypi/setuptools&#34;&gt;easy_install&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;Tendremos que ejecutar &lt;code&gt;easy_install&lt;/code&gt; de dentro de nuestro entorno, aunque podemos hacerlo sin entrar en él. es recomendable haber creado el entorno con la opción &lt;code&gt;--no-site-packages&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Por ejemplo, para instalar django:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;$ virtualenv ENTORNO --no-site-packages
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;New python executable in ENTORNO/bin/python
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;Installing distribute....................................................................................................................................................................................done.
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;$ ./ENTORNO/bin/easy_install django
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;Searching &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; django
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;Reading http://pypi.python.org/simple/django/
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;Reading http://www.djangoproject.com/
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;Best match: Django 1.3
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;Downloading http://pypi.python.org/packages/source/D/Django/Django-1.3.tar.gz#md5&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1b8f76e91c27564708649671f329551f
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;Processing Django-1.3.tar.gz
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;Running Django-1.3/setup.py -q bdist_egg --dist-dir /tmp/easy_install-y5FyOE/Django-1.3/egg-dist-tmp-1DI_wu
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;zip_safe flag not set; analyzing archive contents...
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;...&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;Adding Django 1.3 to easy-install.pth file
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;Installing django-admin.py script to ENTORNO/bin
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17&lt;/span&gt;Installed ENTORNO/lib/python2.6/site-packages/Django-1.3-py2.6.egg
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18&lt;/span&gt;Processing dependencies &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; django
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19&lt;/span&gt;Finished processing dependencies &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; django
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20&lt;/span&gt;$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;automatizando-el-proceso&#34;&gt;Automatizando el proceso&lt;/h2&gt;
&lt;p&gt;Es posible que necesitemos repetir este proceso muy a menudo, incluso en máquinas en las que no tengamos &lt;em&gt;virtualenv&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Para ello podemos crearnos un pequeño script con las siguientes condiciones:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Importaremos &lt;em&gt;virtualenv&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Crearemos el método &amp;ldquo;after_install&amp;rdquo;, que admite dos parámetros: &lt;code&gt;opciones&lt;/code&gt; y &lt;code&gt;Directorio de instalación&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;El script anterior se embeberá en una llamada a &lt;code&gt;virtualenv.create_bootstrap_script&lt;/code&gt;, y guardaremos el resultado en disco.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;De esta manera, nuestro script creará un nuevo script que es el que podemos redistribuir y ejecutar en máquinas en las que &lt;em&gt;virtualenv&lt;/em&gt; no está disponible.&lt;/p&gt;
&lt;p&gt;Veamos un ejemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/python
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -*- coding:utf-8; tab-width:4; mode:python -*-&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Fichero &amp;#34;bootstrap-template.py&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5&lt;/span&gt;import virtualenv, textwrap
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6&lt;/span&gt;output &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; virtualenv.create_bootstrap_script&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;textwrap.dedent&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;import os, subprocess
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;def after_install(options, homedir):
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    packages = [&amp;#39;django&amp;#39;, &amp;#39;django-registration&amp;#39;]
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    etc = join(homedir, &amp;#39;etc&amp;#39;)
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    if not os.path.exists(etc):
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        os.makedirs(etc)
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    bindir = join(homedir, &amp;#39;bin&amp;#39;)
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    easyinstallpath = join(bindir, &amp;#39;easy_install&amp;#39;)
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    for each in packages:
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        subprocess.call([easyinstallpath, each])
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22&lt;/span&gt;f &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; open&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bootstrap.py&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.write&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;output&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Que no os despiste la instrucción &lt;code&gt;textwrap.dedent&lt;/code&gt;, que es para que las triples comillas no nos jueguen malas pasadas en el código subyacente.&lt;/p&gt;
&lt;p&gt;Posiblemente sea buena idea mantener el script en otro fichero y leerlo, con el fin de tener resaltado de sintaxis.&lt;/p&gt;
&lt;p&gt;En este ejemplo comprobaréis que estoy instalando &lt;em&gt;django&lt;/em&gt; y &lt;em&gt;django-registration&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&#34;usos&#34;&gt;Usos&lt;/h2&gt;
&lt;p&gt;Habitualmente, se utiliza &lt;a href=&#34;http://www.virtualenv.org&#34;&gt;virtuelenv&lt;/a&gt;  junto con &lt;a href=&#34;http://docs.fabfile.org/&#34;&gt;fabric&lt;/a&gt; , pero dejo este tutorial para otra ocasión.&lt;/p&gt;
&lt;p&gt;Podemos utilizarlo para aislar un sistema, sin necesidad de cargar toda una máquina virtual.&lt;/p&gt;
&lt;p&gt;También podemos usarlo para tener sistemas fácilmente replicables.&lt;/p&gt;
&lt;h2 id=&#34;más-información&#34;&gt;Más información&lt;/h2&gt;
&lt;p&gt;Debo advertir que la documentación sobre &lt;em&gt;virtualenv&lt;/em&gt; deja bastante que desear :(, pero aquí tenéis algunos enlaces para solucionar este problema:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.virtualenv.org/%3EP%C3%A1gina%20oficial%20de%20virtualenv%3C/a%3E.%3C/li%3E%3C/p%3E%3Cp%3E%3Cli%3E%3Ca%20href=&#34;&gt;Bradley Wright: &amp;ldquo;Python virtualenv quickstart with Django&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.caktusgroup.com/blog/2010/04/22/basic-django-deployment-with-virtualenv-fabric-pip-and-rsync/&#34;&gt;Cactus: &amp;ldquo;Basic Django deployment with virtualenv, fabric, pip and rsync&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jacobian/django-deployment-workshop/&#34;&gt;Jacobian: Django Deployment Workshop&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

        
      </description>
    </item>
    
  </channel>
</rss>
