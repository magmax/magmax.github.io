<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mock on El blog de MagMax</title>
    <link>https://magmax.org/tags/mock/</link>
    <description>Recent content in mock on El blog de MagMax</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 17 Nov 2010 00:00:00 +0000</lastBuildDate><atom:link href="https://magmax.org/tags/mock/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pruebas unitarias: Mocks y Stubs</title>
      <link>https://magmax.org/blog/mocks-y-stubs/</link>
      <pubDate>Wed, 17 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>https://magmax.org/blog/mocks-y-stubs/</guid>
      <description>Cuando estamos desarrollando, es necesario probar lo que estamos haciendo. En ocasiones esto puede resultar muy difícil (y más aún cuando no se ha hecho TDD), o muy lento.
En este artículo trataré de dar una introducción a la utilización de MOCKs y STUBs en estos casos.
En los ejemplos usaré Java y la librería mockito .
Voy a comenzar por plantear unas premisas: Las pruebas deben ser unitarias, rápidas e inocuas (no alteran el estado inicial).</description>
    </item>
    
  </channel>
</rss>
