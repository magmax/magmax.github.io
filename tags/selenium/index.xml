<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Selenium - Etiqueta - El blog de MagMax</title><link>/tags/selenium/</link><description>Selenium - Etiqueta - El blog de MagMax</description><generator>Hugo -- gohugo.io</generator><language>es</language><lastBuildDate>Sat, 16 Nov 2013 00:00:00 +0000</lastBuildDate><atom:link href="/tags/selenium/" rel="self" type="application/rss+xml"/><item><title>Webdriver: crackeando la web de Renfe</title><link>/blog/webdriver-practico/</link><pubDate>Sat, 16 Nov 2013 00:00:00 +0000</pubDate><author>Miguel Ángel</author><guid>/blog/webdriver-practico/</guid><description><![CDATA[<p>Todos los días tengo que coger el tren para ir a trabajar. Hablando con un amigo que también tiene que ir en tren, se me ocurrió comentarle que la seguridad de los abonos es muy mala, ya que hay que formalizar cada viaje y sacar un billete, donde se muestra el número de abono y se ocultan los 3 últimos dígitos del DNI y la letra. Insistí en que era capaz de sacarme viajes con su abono si me daba uno de sus billetes&hellip;</p>
<p>Y me retó.</p>
<p>Y como creo que es un ejemplo estupendo de uso de <a href="https://www.seleniumhq.org/projects/webdriver/" title="Web oficial de WebDriver" target="_blank" rel="noopener noreffer ">WebDriver</a>. pues aquí lo tenemos.</p>
<p>Además, podremos ver algunas de las características chulas de Python :D</p>]]></description></item><item><title>Selenium y QA Automation: PageObjects</title><link>/blog/selenium-y-qa-automation-3/</link><pubDate>Fri, 29 Mar 2013 00:00:00 +0000</pubDate><author>Miguel Ángel</author><guid>/blog/selenium-y-qa-automation-3/</guid><description><![CDATA[<p>En los artículos anteriores, &ldquo;<a href="/blog/selenium-y-qa-automation/" title="Selenium y QA Automation" rel="">Selenium y QA Automation</a>&rdquo; y &ldquo;<a href="/blog/selenium-y-qa-automation-2/" title="Selenium y QA Automation: Tests" rel="">Selenium y QA Automation: Tests</a>&rdquo; hemos visto cómo utilizar <a href="https://docs.seleniumhq.org/" title="Selenium Official Site" target="_blank" rel="noopener noreffer ">Selenium/Webdriver</a>.</p>
<p>En este caso vamos a ver cómo organizar estos tests. Realmente no es necesario el conocimiento previo de Selenium, ya que puede utilizarse algún otro <em>framework</em>. Sin embargo, sí que resulta interesante ya que lo usaremos para los ejemplos.</p>
<p>Aunque los <em>PageObjects</em> se idearon para pruebas en la Web (de hecho, creo que son una idea de Selenium), este artículo está escrito pensando que los <em>PageObjects</em> pueden usarse tanto en aplicaciones de escritorio como web, por lo que veréis &ldquo;pantalla&rdquo; o &ldquo;página&rdquo; indistintamente.</p>]]></description></item><item><title>Selenium y QA Automation: tests</title><link>/blog/selenium-y-qa-automation-2/</link><pubDate>Wed, 13 Mar 2013 00:00:00 +0000</pubDate><author>Miguel Ángel</author><guid>/blog/selenium-y-qa-automation-2/</guid><description><![CDATA[<p>En mi anterior post sobre <a href="/blog/selenium-y-qa-automation/" rel="">Selenium y QA Automation</a> comenzamos a ver cómo utilizar <a href="https://docs.seleniumhq.org/" target="_blank" rel="noopener noreffer ">Selenium/Webdriver</a> para la automatización de tareas web. En esta ocasión lo adaptaremos para su uso más habitual: la creación de pruebas de aceptación.</p>
<p>Mediante ejemplos en Python adaptaremos nuestro ejercicio anterior para ejecutarlo como tests. Así mismo, refactorizaremos para obtener un entorno de pruebas sencillo, extensible y fácil de utilizar.</p>
<p>Tras este artículo, no debería ser difícil utilizar un sistema de integración contínua para la automatización de pruebas de aceptación.</p>]]></description></item><item><title>Selenium y QA Automation</title><link>/blog/selenium-y-qa-automation/</link><pubDate>Fri, 08 Mar 2013 00:00:00 +0000</pubDate><author>Miguel Ángel</author><guid>/blog/selenium-y-qa-automation/</guid><description><![CDATA[<p>En el mundo de la automatización de pruebas, <a href="https://docs.seleniumhq.org/" target="_blank" rel="noopener noreffer ">Selenium</a> arrasa. Existen otras alternativas, pero lo cierto es que todo el mundo utiliza <a href="https://docs.seleniumhq.org/" target="_blank" rel="noopener noreffer ">Selenium</a>.</p>
<p>Hay distintas formas de utilizarlo, y aquí veremos algunas de ellas. He elegido Python porque es mi lenguaje favorito y Java porque es el lenguaje en el que está hecho <a href="https://docs.seleniumhq.org/" target="_blank" rel="noopener noreffer ">Selenium</a>.</p>]]></description></item><item><title>Pruebas web: selenium + atheist</title><link>/blog/selenium-atheist/</link><pubDate>Fri, 13 May 2011 00:00:00 +0000</pubDate><author>Miguel Ángel</author><guid>/blog/selenium-atheist/</guid><description>&lt;p>Voy a explicar, con un ejemplo sencillito, cómo realizar pruebas web.&lt;/p>
&lt;p>Además, voy a terminar indicando cómo podemos hacerlo aún más chulo lanzándolo desde atheist.&lt;/p></description></item></channel></rss>